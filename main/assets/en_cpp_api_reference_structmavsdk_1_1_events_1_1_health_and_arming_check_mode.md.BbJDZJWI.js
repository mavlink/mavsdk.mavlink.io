import{_ as a,c as s,al as t,o as i}from"./chunks/framework.BVh3rIuO.js";const o=JSON.parse('{"title":"mavsdk::Events::HealthAndArmingCheckMode Struct Reference","description":"","frontmatter":{"github_branch":"main"},"headers":[],"relativePath":"en/cpp/api_reference/structmavsdk_1_1_events_1_1_health_and_arming_check_mode.md","filePath":"en/cpp/api_reference/structmavsdk_1_1_events_1_1_health_and_arming_check_mode.md"}'),n={name:"en/cpp/api_reference/structmavsdk_1_1_events_1_1_health_and_arming_check_mode.md"};function d(_,e,h,r,c,l){return i(),s("div",null,e[0]||(e[0]=[t('<h1 id="mavsdk-events-healthandarmingcheckmode-struct-reference" tabindex="-1">mavsdk::Events::HealthAndArmingCheckMode Struct Reference <a class="header-anchor" href="#mavsdk-events-healthandarmingcheckmode-struct-reference" aria-label="Permalink to &quot;mavsdk::Events::HealthAndArmingCheckMode Struct Reference&quot;">​</a></h1><p><code>#include: events.h</code></p><hr><p>Arming checks for a specific mode.</p><h2 id="data-fields" tabindex="-1">Data Fields <a class="header-anchor" href="#data-fields" aria-label="Permalink to &quot;Data Fields&quot;">​</a></h2><p>std::string <a href="#structmavsdk_1_1_events_1_1_health_and_arming_check_mode_1ade334ef65152cc7c6fcee3d14a1e0168">mode_name</a> {} - Mode name, e.g. &quot;Position&quot;.</p><p>bool <a href="#structmavsdk_1_1_events_1_1_health_and_arming_check_mode_1a0054b9e84b9159715cda9e11b4920d16">can_arm_or_run</a> {} - If disarmed: indicates if arming is possible. If armed: indicates if the mode can be selected.</p><p>std::vector&lt; <a href="./structmavsdk_1_1_events_1_1_health_and_arming_check_problem.html">HealthAndArmingCheckProblem</a> &gt; <a href="#structmavsdk_1_1_events_1_1_health_and_arming_check_mode_1a1003ed614d692a6db439821e626b1748">problems</a> {} - List of reported problems for the mode.</p><h2 id="field-documentation" tabindex="-1">Field Documentation <a class="header-anchor" href="#field-documentation" aria-label="Permalink to &quot;Field Documentation&quot;">​</a></h2><h3 id="structmavsdk_1_1_events_1_1_health_and_arming_check_mode_1ade334ef65152cc7c6fcee3d14a1e0168" tabindex="-1">mode_name <a class="header-anchor" href="#structmavsdk_1_1_events_1_1_health_and_arming_check_mode_1ade334ef65152cc7c6fcee3d14a1e0168" aria-label="Permalink to &quot;mode_name {#structmavsdk_1_1_events_1_1_health_and_arming_check_mode_1ade334ef65152cc7c6fcee3d14a1e0168}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::string </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Events</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">HealthAndArmingCheckMode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::mode_name {}</span></span></code></pre></div><p>Mode name, e.g. &quot;Position&quot;.</p><h3 id="structmavsdk_1_1_events_1_1_health_and_arming_check_mode_1a0054b9e84b9159715cda9e11b4920d16" tabindex="-1">can_arm_or_run <a class="header-anchor" href="#structmavsdk_1_1_events_1_1_health_and_arming_check_mode_1a0054b9e84b9159715cda9e11b4920d16" aria-label="Permalink to &quot;can_arm_or_run {#structmavsdk_1_1_events_1_1_health_and_arming_check_mode_1a0054b9e84b9159715cda9e11b4920d16}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">bool</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Events</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">HealthAndArmingCheckMode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::can_arm_or_run {}</span></span></code></pre></div><p>If disarmed: indicates if arming is possible. If armed: indicates if the mode can be selected.</p><h3 id="structmavsdk_1_1_events_1_1_health_and_arming_check_mode_1a1003ed614d692a6db439821e626b1748" tabindex="-1">problems <a class="header-anchor" href="#structmavsdk_1_1_events_1_1_health_and_arming_check_mode_1a1003ed614d692a6db439821e626b1748" aria-label="Permalink to &quot;problems {#structmavsdk_1_1_events_1_1_health_and_arming_check_mode_1a1003ed614d692a6db439821e626b1748}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::vector</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">HealthAndArmingCheckProblem</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Events</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">HealthAndArmingCheckMode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::problems {}</span></span></code></pre></div><p>List of reported problems for the mode.</p>',18)]))}const p=a(n,[["render",d]]);export{o as __pageData,p as default};
