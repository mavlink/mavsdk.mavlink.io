import{_ as a,c as i,al as t,o as e}from"./chunks/framework.BVh3rIuO.js";const o=JSON.parse('{"title":"mavsdk::Mavsdk Class Reference","description":"","frontmatter":{"github_branch":"main"},"headers":[],"relativePath":"en/cpp/api_reference/classmavsdk_1_1_mavsdk.md","filePath":"en/cpp/api_reference/classmavsdk_1_1_mavsdk.md"}'),n={name:"en/cpp/api_reference/classmavsdk_1_1_mavsdk.md"};function d(l,s,h,k,r,p){return e(),i("div",null,s[0]||(s[0]=[t('<h1 id="mavsdk-mavsdk-class-reference" tabindex="-1">mavsdk::Mavsdk Class Reference <a class="header-anchor" href="#mavsdk-mavsdk-class-reference" aria-label="Permalink to &quot;mavsdk::Mavsdk Class Reference&quot;">​</a></h1><p><code>#include: mavsdk.h</code></p><hr><p>This is the main class of MAVSDK (a MAVLink API Library).</p><p>It is used to discover vehicles and manage active connections.</p><p>An instance of this class must be created and kept alive in order to use the library. The instance can be destroyed after use in order to break connections and release all resources.</p><h2 id="data-structures" tabindex="-1">Data Structures <a class="header-anchor" href="#data-structures" aria-label="Permalink to &quot;Data Structures&quot;">​</a></h2><p>struct <a href="./classmavsdk_1_1_mavsdk_1_1_configuration.html">Configuration</a></p><p>struct <a href="./structmavsdk_1_1_mavsdk_1_1_connection_error.html">ConnectionError</a></p><p>struct <a href="./structmavsdk_1_1_mavsdk_1_1_mavlink_message.html">MavlinkMessage</a></p><h2 id="public-types" tabindex="-1">Public Types <a class="header-anchor" href="#public-types" aria-label="Permalink to &quot;Public Types&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><a href="./classmavsdk_1_1_handle.html">Handle</a>&lt;&gt; <a href="#classmavsdk_1_1_mavsdk_1a1b16edeae47af0815b3267c9075f6a8f">ConnectionHandle</a></td><td><a href="./classmavsdk_1_1_handle.html">Handle</a> type to remove a connection.</td></tr><tr><td>std::function&lt; void(<a href="./structmavsdk_1_1_mavsdk_1_1_connection_error.html">ConnectionError</a>)&gt; <a href="#classmavsdk_1_1_mavsdk_1ac71d182538bee6fb3ab007edafac5d5f">ConnectionErrorCallback</a></td><td></td></tr><tr><td><a href="./classmavsdk_1_1_handle.html">Handle</a>&lt; <a href="./structmavsdk_1_1_mavsdk_1_1_connection_error.html">ConnectionError</a> &gt; <a href="#classmavsdk_1_1_mavsdk_1aeb442a462d03662e4c152509fd0c203b">ConnectionErrorHandle</a></td><td><a href="./classmavsdk_1_1_handle.html">Handle</a> type to remove a connection error subscription.</td></tr><tr><td>std::function&lt; void()&gt; <a href="#classmavsdk_1_1_mavsdk_1a7a283c6a75e852a56be4c5862f8a3fab">NewSystemCallback</a></td><td>Callback type discover and timeout notifications.</td></tr><tr><td><a href="./classmavsdk_1_1_handle.html">Handle</a>&lt;&gt; <a href="#classmavsdk_1_1_mavsdk_1ae0727f2bed9cbf276d161ada0a432b8c">NewSystemHandle</a></td><td><a href="./classmavsdk_1_1_handle.html">Handle</a> type to unsubscribe from subscribe_on_new_system.</td></tr><tr><td><a href="./classmavsdk_1_1_handle.html">Handle</a>&lt; bool(<a href="./structmavsdk_1_1_mavsdk_1_1_mavlink_message.html">MavlinkMessage</a>)&gt; <a href="#classmavsdk_1_1_mavsdk_1a3b40ae4fd8af4c4419b61f0ad955812f">InterceptJsonHandle</a></td><td><a href="./classmavsdk_1_1_handle.html">Handle</a> for intercepting messages.</td></tr><tr><td>std::function&lt; bool(<a href="./structmavsdk_1_1_mavsdk_1_1_mavlink_message.html">MavlinkMessage</a>)&gt; <a href="#classmavsdk_1_1_mavsdk_1a17923db3b1504e911487729114b68f48">InterceptJsonCallback</a></td><td>Callback type for intercepting messages.</td></tr></tbody></table><h2 id="public-member-functions" tabindex="-1">Public Member Functions <a class="header-anchor" href="#public-member-functions" aria-label="Permalink to &quot;Public Member Functions&quot;">​</a></h2><table tabindex="0"><thead><tr><th style="text-align:right;">Type</th><th>Name</th><th>Description</th></tr></thead><tbody><tr><td style="text-align:right;"> </td><td><a href="#classmavsdk_1_1_mavsdk_1ab10a870a7b8d1f8dae5c53c23c3fc596">Mavsdk</a> ()=delete</td><td>Default constructor without configuration, no longer recommended.</td></tr><tr><td style="text-align:right;"> </td><td><a href="#classmavsdk_1_1_mavsdk_1a02b160aa2717f7064d2517e00065e6ac">Mavsdk</a> (<a href="./classmavsdk_1_1_mavsdk_1_1_configuration.html">Configuration</a> configuration)</td><td>Constructor with configuration.</td></tr><tr><td style="text-align:right;"> </td><td><a href="#classmavsdk_1_1_mavsdk_1ac1549f715d6857711b9b9e364a4ca351">~Mavsdk</a> ()</td><td>Destructor.</td></tr><tr><td style="text-align:right;">std::string</td><td><a href="#classmavsdk_1_1_mavsdk_1a8fdb97695762d06fd2bccfc6309943fa">version</a> () const</td><td>Returns the version of MAVSDK.</td></tr><tr><td style="text-align:right;"><a href="./namespacemavsdk.html#namespacemavsdk_1a0bad93f6d037051ac3906a0bcc09f992">ConnectionResult</a></td><td><a href="#classmavsdk_1_1_mavsdk_1a405041a5043c610c86540de090626d97">add_any_connection</a> (const std::string &amp; connection_url, <a href="./namespacemavsdk.html#namespacemavsdk_1a7066729108eae8a605d4dd169e4581b9">ForwardingOption</a> forwarding_option=ForwardingOption::ForwardingOff)</td><td>Adds Connection via URL.</td></tr><tr><td style="text-align:right;">std::pair&lt; <a href="./namespacemavsdk.html#namespacemavsdk_1a0bad93f6d037051ac3906a0bcc09f992">ConnectionResult</a>, <a href="./classmavsdk_1_1_mavsdk.html#classmavsdk_1_1_mavsdk_1a1b16edeae47af0815b3267c9075f6a8f">ConnectionHandle</a> &gt;</td><td><a href="#classmavsdk_1_1_mavsdk_1ad12297d30ec1bbe4750f7cf4efbbed57">add_any_connection_with_handle</a> (const std::string &amp; connection_url, <a href="./namespacemavsdk.html#namespacemavsdk_1a7066729108eae8a605d4dd169e4581b9">ForwardingOption</a> forwarding_option=ForwardingOption::ForwardingOff)</td><td>Adds Connection via URL Additionally returns a handle to remove the connection later.</td></tr><tr><td style="text-align:right;">void</td><td><a href="#classmavsdk_1_1_mavsdk_1a23cf630bb123aa53b0e99c6bd83ad013">remove_connection</a> (<a href="./classmavsdk_1_1_mavsdk.html#classmavsdk_1_1_mavsdk_1a1b16edeae47af0815b3267c9075f6a8f">ConnectionHandle</a> handle)</td><td></td></tr><tr><td style="text-align:right;"><a href="./classmavsdk_1_1_mavsdk.html#classmavsdk_1_1_mavsdk_1aeb442a462d03662e4c152509fd0c203b">ConnectionErrorHandle</a></td><td><a href="#classmavsdk_1_1_mavsdk_1a8f50fffac65a35857a88da2fd42f9c54">subscribe_connection_errors</a> (<a href="./classmavsdk_1_1_mavsdk.html#classmavsdk_1_1_mavsdk_1ac71d182538bee6fb3ab007edafac5d5f">ConnectionErrorCallback</a> callback)</td><td></td></tr><tr><td style="text-align:right;">void</td><td><a href="#classmavsdk_1_1_mavsdk_1a377ec6517ee75981ceb2f26b30e59fbd">unsubscribe_connection_errors</a> (<a href="./classmavsdk_1_1_mavsdk.html#classmavsdk_1_1_mavsdk_1aeb442a462d03662e4c152509fd0c203b">ConnectionErrorHandle</a> handle)</td><td></td></tr><tr><td style="text-align:right;">std::vector&lt; std::shared_ptr&lt; <a href="./classmavsdk_1_1_system.html">System</a> &gt; &gt;</td><td><a href="#classmavsdk_1_1_mavsdk_1aca9c72b300d384341b00ff9ba2c6e5c5">systems</a> () const</td><td>Get a vector of systems which have been discovered or set-up.</td></tr><tr><td style="text-align:right;">std::optional&lt; std::shared_ptr&lt; <a href="./classmavsdk_1_1_system.html">System</a> &gt; &gt;</td><td><a href="#classmavsdk_1_1_mavsdk_1aa1bcb865693dbd140478e75ce58699b7">first_autopilot</a> (double timeout_s)const</td><td>Get the first autopilot that has been discovered.</td></tr><tr><td style="text-align:right;">void</td><td><a href="#classmavsdk_1_1_mavsdk_1acaeea86253493dc15b6540d2100a1b86">set_configuration</a> (<a href="./classmavsdk_1_1_mavsdk_1_1_configuration.html">Configuration</a> configuration)</td><td>Set <a href="./classmavsdk_1_1_mavsdk_1_1_configuration.html">Configuration</a> of SDK.</td></tr><tr><td style="text-align:right;">void</td><td><a href="#classmavsdk_1_1_mavsdk_1a765f37b61462addcfd961e720585d2c6">set_timeout_s</a> (double timeout_s)</td><td>Set timeout of MAVLink transfers.</td></tr><tr><td style="text-align:right;"><a href="./classmavsdk_1_1_mavsdk.html#classmavsdk_1_1_mavsdk_1ae0727f2bed9cbf276d161ada0a432b8c">NewSystemHandle</a></td><td><a href="#classmavsdk_1_1_mavsdk_1a5b7c958ad2e4529dc7b950ab26618575">subscribe_on_new_system</a> (const <a href="./classmavsdk_1_1_mavsdk.html#classmavsdk_1_1_mavsdk_1a7a283c6a75e852a56be4c5862f8a3fab">NewSystemCallback</a> &amp; callback)</td><td>Get notification about a change in systems.</td></tr><tr><td style="text-align:right;">void</td><td><a href="#classmavsdk_1_1_mavsdk_1ad7f77f1295a700ee73cccc345019c1ff">unsubscribe_on_new_system</a> (<a href="./classmavsdk_1_1_mavsdk.html#classmavsdk_1_1_mavsdk_1ae0727f2bed9cbf276d161ada0a432b8c">NewSystemHandle</a> handle)</td><td>unsubscribe from subscribe_on_new_system.</td></tr><tr><td style="text-align:right;">std::shared_ptr&lt; <a href="./classmavsdk_1_1_server_component.html">ServerComponent</a> &gt;</td><td><a href="#classmavsdk_1_1_mavsdk_1a693a2f665c35d6b01d6144819d353280">server_component</a> (unsigned instance=0)</td><td>Get server component with default type of <a href="./classmavsdk_1_1_mavsdk.html">Mavsdk</a> instance.</td></tr><tr><td style="text-align:right;">std::shared_ptr&lt; <a href="./classmavsdk_1_1_server_component.html">ServerComponent</a> &gt;</td><td><a href="#classmavsdk_1_1_mavsdk_1a547fc7e18434473ea3e0e51ab3305abb">server_component_by_type</a> (<a href="./namespacemavsdk.html#namespacemavsdk_1a20fe7f7c8312779a187017111bf33d12">ComponentType</a> component_type, unsigned instance=0)</td><td>Get server component by a high level type.</td></tr><tr><td style="text-align:right;">std::shared_ptr&lt; <a href="./classmavsdk_1_1_server_component.html">ServerComponent</a> &gt;</td><td><a href="#classmavsdk_1_1_mavsdk_1adef7d0d7422bcddbda629a404fb33ae2">server_component_by_id</a> (uint8_t component_id)</td><td>Get server component by the low MAVLink component ID.</td></tr><tr><td style="text-align:right;"><a href="./classmavsdk_1_1_mavsdk.html#classmavsdk_1_1_mavsdk_1a3b40ae4fd8af4c4419b61f0ad955812f">InterceptJsonHandle</a></td><td><a href="#classmavsdk_1_1_mavsdk_1a722fce6f1abe8337721dde710b5b40d7">subscribe_incoming_messages_json</a> (const <a href="./classmavsdk_1_1_mavsdk.html#classmavsdk_1_1_mavsdk_1a17923db3b1504e911487729114b68f48">InterceptJsonCallback</a> &amp; callback)</td><td>Intercept incoming messages as JSON.</td></tr><tr><td style="text-align:right;">void</td><td><a href="#classmavsdk_1_1_mavsdk_1a4be244c38939cb517c2061baf4d43386">unsubscribe_incoming_messages_json</a> (<a href="./classmavsdk_1_1_mavsdk.html#classmavsdk_1_1_mavsdk_1a3b40ae4fd8af4c4419b61f0ad955812f">InterceptJsonHandle</a> handle)</td><td>Unsubscribe from incoming messages as JSON.</td></tr><tr><td style="text-align:right;"><a href="./classmavsdk_1_1_mavsdk.html#classmavsdk_1_1_mavsdk_1a3b40ae4fd8af4c4419b61f0ad955812f">InterceptJsonHandle</a></td><td><a href="#classmavsdk_1_1_mavsdk_1a58f85b2f74a32404a8e975feefed8f47">subscribe_outgoing_messages_json</a> (const <a href="./classmavsdk_1_1_mavsdk.html#classmavsdk_1_1_mavsdk_1a17923db3b1504e911487729114b68f48">InterceptJsonCallback</a> &amp; callback)</td><td>Intercept outgoing messages as JSON.</td></tr><tr><td style="text-align:right;">void</td><td><a href="#classmavsdk_1_1_mavsdk_1aa3a490358db87cfed617cdad902bb753">unsubscribe_outgoing_messages_json</a> (<a href="./classmavsdk_1_1_mavsdk.html#classmavsdk_1_1_mavsdk_1a3b40ae4fd8af4c4419b61f0ad955812f">InterceptJsonHandle</a> handle)</td><td>Unsubscribe from outgoing messages as JSON.</td></tr><tr><td style="text-align:right;">void</td><td><a href="#classmavsdk_1_1_mavsdk_1ac80c8909958533131cbdbc61d061794f">intercept_incoming_messages_async</a> (std::function&lt; bool(mavlink_message_t &amp;)&gt; callback)</td><td>Intercept incoming messages.</td></tr><tr><td style="text-align:right;">void</td><td><a href="#classmavsdk_1_1_mavsdk_1a040ee5c1d41e71c0d63cf8f76d2db275">intercept_outgoing_messages_async</a> (std::function&lt; bool(mavlink_message_t &amp;)&gt; callback)</td><td>Intercept outgoing messages.</td></tr></tbody></table><h2 id="constructor-destructor-documentation" tabindex="-1">Constructor &amp; Destructor Documentation <a class="header-anchor" href="#constructor-destructor-documentation" aria-label="Permalink to &quot;Constructor &amp; Destructor Documentation&quot;">​</a></h2><h3 id="classmavsdk_1_1_mavsdk_1ab10a870a7b8d1f8dae5c53c23c3fc596" tabindex="-1">Mavsdk() <a class="header-anchor" href="#classmavsdk_1_1_mavsdk_1ab10a870a7b8d1f8dae5c53c23c3fc596" aria-label="Permalink to &quot;Mavsdk() {#classmavsdk_1_1_mavsdk_1ab10a870a7b8d1f8dae5c53c23c3fc596}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=delete</span></span></code></pre></div><p>Default constructor without configuration, no longer recommended.</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>This has been removed because MAVSDK used to identify itself as a ground station by default which isn&#39;t always the safest choice. For instance, when MAVSDK is used on a companion computer (set as a ground station) it means that the appropriate failsafe doesn&#39;t trigger.</p></div><h3 id="classmavsdk_1_1_mavsdk_1a02b160aa2717f7064d2517e00065e6ac" tabindex="-1">Mavsdk() <a class="header-anchor" href="#classmavsdk_1_1_mavsdk_1a02b160aa2717f7064d2517e00065e6ac" aria-label="Permalink to &quot;Mavsdk() {#classmavsdk_1_1_mavsdk_1a02b160aa2717f7064d2517e00065e6ac}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Configuration configuration)</span></span></code></pre></div><p>Constructor with configuration.</p><p><strong>Parameters</strong></p><ul><li><a href="./classmavsdk_1_1_mavsdk_1_1_configuration.html">Configuration</a> <strong>configuration</strong> - <a href="./classmavsdk_1_1_mavsdk_1_1_configuration.html">Configuration</a> to use in MAVSDK instance.</li></ul><h3 id="classmavsdk_1_1_mavsdk_1ac1549f715d6857711b9b9e364a4ca351" tabindex="-1">~Mavsdk() <a class="header-anchor" href="#classmavsdk_1_1_mavsdk_1ac1549f715d6857711b9b9e364a4ca351" aria-label="Permalink to &quot;~Mavsdk() {#classmavsdk_1_1_mavsdk_1ac1549f715d6857711b9b9e364a4ca351}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">~</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><p>Destructor.</p><p>Disconnects all connected vehicles and releases all resources.</p><h2 id="member-typdef-documentation" tabindex="-1">Member Typdef Documentation <a class="header-anchor" href="#member-typdef-documentation" aria-label="Permalink to &quot;Member Typdef Documentation&quot;">​</a></h2><h3 id="classmavsdk_1_1_mavsdk_1a1b16edeae47af0815b3267c9075f6a8f" tabindex="-1">typedef ConnectionHandle <a class="header-anchor" href="#classmavsdk_1_1_mavsdk_1a1b16edeae47af0815b3267c9075f6a8f" aria-label="Permalink to &quot;typedef ConnectionHandle {#classmavsdk_1_1_mavsdk_1a1b16edeae47af0815b3267c9075f6a8f}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::ConnectionHandle </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  Handle</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;&gt;</span></span></code></pre></div><p><a href="./classmavsdk_1_1_handle.html">Handle</a> type to remove a connection.</p><h3 id="classmavsdk_1_1_mavsdk_1ac71d182538bee6fb3ab007edafac5d5f" tabindex="-1">typedef ConnectionErrorCallback <a class="header-anchor" href="#classmavsdk_1_1_mavsdk_1ac71d182538bee6fb3ab007edafac5d5f" aria-label="Permalink to &quot;typedef ConnectionErrorCallback {#classmavsdk_1_1_mavsdk_1ac71d182538bee6fb3ab007edafac5d5f}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::ConnectionErrorCallback </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::function</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ConnectionError)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><p>Connection Error callback type</p><h3 id="classmavsdk_1_1_mavsdk_1aeb442a462d03662e4c152509fd0c203b" tabindex="-1">typedef ConnectionErrorHandle <a class="header-anchor" href="#classmavsdk_1_1_mavsdk_1aeb442a462d03662e4c152509fd0c203b" aria-label="Permalink to &quot;typedef ConnectionErrorHandle {#classmavsdk_1_1_mavsdk_1aeb442a462d03662e4c152509fd0c203b}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::ConnectionErrorHandle </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  Handle</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ConnectionError</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><p><a href="./classmavsdk_1_1_handle.html">Handle</a> type to remove a connection error subscription.</p><h3 id="classmavsdk_1_1_mavsdk_1a7a283c6a75e852a56be4c5862f8a3fab" tabindex="-1">typedef NewSystemCallback <a class="header-anchor" href="#classmavsdk_1_1_mavsdk_1a7a283c6a75e852a56be4c5862f8a3fab" aria-label="Permalink to &quot;typedef NewSystemCallback {#classmavsdk_1_1_mavsdk_1a7a283c6a75e852a56be4c5862f8a3fab}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::NewSystemCallback </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::function</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><p>Callback type discover and timeout notifications.</p><h3 id="classmavsdk_1_1_mavsdk_1ae0727f2bed9cbf276d161ada0a432b8c" tabindex="-1">typedef NewSystemHandle <a class="header-anchor" href="#classmavsdk_1_1_mavsdk_1ae0727f2bed9cbf276d161ada0a432b8c" aria-label="Permalink to &quot;typedef NewSystemHandle {#classmavsdk_1_1_mavsdk_1ae0727f2bed9cbf276d161ada0a432b8c}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::NewSystemHandle </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  Handle</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;&gt;</span></span></code></pre></div><p><a href="./classmavsdk_1_1_handle.html">Handle</a> type to unsubscribe from subscribe_on_new_system.</p><h3 id="classmavsdk_1_1_mavsdk_1a3b40ae4fd8af4c4419b61f0ad955812f" tabindex="-1">typedef InterceptJsonHandle <a class="header-anchor" href="#classmavsdk_1_1_mavsdk_1a3b40ae4fd8af4c4419b61f0ad955812f" aria-label="Permalink to &quot;typedef InterceptJsonHandle {#classmavsdk_1_1_mavsdk_1a3b40ae4fd8af4c4419b61f0ad955812f}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::InterceptJsonHandle </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  Handle</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;bool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(MavlinkMessage)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><p><a href="./classmavsdk_1_1_handle.html">Handle</a> for intercepting messages.</p><h3 id="classmavsdk_1_1_mavsdk_1a17923db3b1504e911487729114b68f48" tabindex="-1">typedef InterceptJsonCallback <a class="header-anchor" href="#classmavsdk_1_1_mavsdk_1a17923db3b1504e911487729114b68f48" aria-label="Permalink to &quot;typedef InterceptJsonCallback {#classmavsdk_1_1_mavsdk_1a17923db3b1504e911487729114b68f48}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::InterceptJsonCallback </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::function</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;bool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(MavlinkMessage)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><p>Callback type for intercepting messages.</p><h2 id="member-function-documentation" tabindex="-1">Member Function Documentation <a class="header-anchor" href="#member-function-documentation" aria-label="Permalink to &quot;Member Function Documentation&quot;">​</a></h2><h3 id="classmavsdk_1_1_mavsdk_1a8fdb97695762d06fd2bccfc6309943fa" tabindex="-1">version() <a class="header-anchor" href="#classmavsdk_1_1_mavsdk_1a8fdb97695762d06fd2bccfc6309943fa" aria-label="Permalink to &quot;version() {#classmavsdk_1_1_mavsdk_1a8fdb97695762d06fd2bccfc6309943fa}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">string</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span></span></code></pre></div><p>Returns the version of MAVSDK.</p><p>Note, you&#39;re not supposed to request the version too many times.</p><p><strong>Returns</strong></p><p> std::string - A string containing the version.</p><h3 id="classmavsdk_1_1_mavsdk_1a405041a5043c610c86540de090626d97" tabindex="-1">add_any_connection() <a class="header-anchor" href="#classmavsdk_1_1_mavsdk_1a405041a5043c610c86540de090626d97" aria-label="Permalink to &quot;add_any_connection() {#classmavsdk_1_1_mavsdk_1a405041a5043c610c86540de090626d97}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ConnectionResult</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">add_any_connection</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">string</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &amp;</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">connection_url</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ForwardingOption</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> forwarding_option</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ForwardingOption</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ForwardingOff</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Adds Connection via URL.</p><p>Supports connection: Serial, TCP or UDP. Connection URL format should be:</p><ul><li><p>UDP in (server): udpin://our_ip:port</p></li><li><p>UDP out (client): udpout://remote_ip:port</p></li><li><p>TCP in (server): tcpin://our_ip:port</p></li><li><p>TCP out (client): tcpout://remote_ip:port</p></li><li><p>Serial: serial://dev_node:baudrate</p></li><li><p>Serial with flow control: serial_flowcontrol://dev_node:baudrate</p></li></ul><p>For UDP in and TCP in (as server), our IP can be set to:</p><ul><li><p>0.0.0.0: listen on all interfaces</p></li><li><p>127.0.0.1: listen on loopback (local) interface only</p></li><li><p>Our IP: (e.g. 192.168.1.12): listen only on the network interface with this IP.</p></li></ul><p>For UDP out and TCP out, the IP needs to be set to the remote IP, where the MAVLink messages are to be sent to.</p><p><strong>Parameters</strong></p><ul><li>const std::string&amp; <strong>connection_url</strong> - connection URL string.</li><li><a href="./namespacemavsdk.html#namespacemavsdk_1a7066729108eae8a605d4dd169e4581b9">ForwardingOption</a> <strong>forwarding_option</strong> - message forwarding option (when multiple interfaces are used).</li></ul><p><strong>Returns</strong></p><p> <a href="./namespacemavsdk.html#namespacemavsdk_1a0bad93f6d037051ac3906a0bcc09f992">ConnectionResult</a> - The result of adding the connection.</p><h3 id="classmavsdk_1_1_mavsdk_1ad12297d30ec1bbe4750f7cf4efbbed57" tabindex="-1">add_any_connection_with_handle() <a class="header-anchor" href="#classmavsdk_1_1_mavsdk_1ad12297d30ec1bbe4750f7cf4efbbed57" aria-label="Permalink to &quot;add_any_connection_with_handle() {#classmavsdk_1_1_mavsdk_1ad12297d30ec1bbe4750f7cf4efbbed57}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pair</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ConnectionResult</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ConnectionHandle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">add_any_connection_with_handle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">string</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &amp;</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">connection_url</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ForwardingOption</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> forwarding_option</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ForwardingOption</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ForwardingOff</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Adds Connection via URL Additionally returns a handle to remove the connection later.</p><p>Supports connection: Serial, TCP or UDP. Connection URL format should be:</p><ul><li><p>UDP in (server): udpin://our_ip:port</p></li><li><p>UDP out (client): udpout://remote_ip:port</p></li><li><p>TCP in (server): tcpin://our_ip:port</p></li><li><p>TCP out (client): tcpout://remote_ip:port</p></li><li><p>Serial: serial://dev_node:baudrate</p></li><li><p>Serial with flow control: serial_flowcontrol://dev_node:baudrate</p></li></ul><p>For UDP in and TCP in (as server), our IP can be set to:</p><ul><li><p>0.0.0.0: listen on all interfaces</p></li><li><p>127.0.0.1: listen on loopback (local) interface only</p></li><li><p>Our IP: (e.g. 192.168.1.12): listen only on the network interface with this IP.</p></li></ul><p>For UDP out and TCP out, the IP needs to be set to the remote IP, where the MAVLink messages are to be sent to.</p><p><strong>Parameters</strong></p><ul><li>const std::string&amp; <strong>connection_url</strong> - connection URL string.</li><li><a href="./namespacemavsdk.html#namespacemavsdk_1a7066729108eae8a605d4dd169e4581b9">ForwardingOption</a> <strong>forwarding_option</strong> - message forwarding option (when multiple interfaces are used).</li></ul><p><strong>Returns</strong></p><p> std::pair&lt; <a href="./namespacemavsdk.html#namespacemavsdk_1a0bad93f6d037051ac3906a0bcc09f992">ConnectionResult</a>, <a href="./classmavsdk_1_1_mavsdk.html#classmavsdk_1_1_mavsdk_1a1b16edeae47af0815b3267c9075f6a8f">ConnectionHandle</a> &gt; - A pair containing the result of adding the connection as well as a handle to remove it later.</p><h3 id="classmavsdk_1_1_mavsdk_1a23cf630bb123aa53b0e99c6bd83ad013" tabindex="-1">remove_connection() <a class="header-anchor" href="#classmavsdk_1_1_mavsdk_1a23cf630bb123aa53b0e99c6bd83ad013" aria-label="Permalink to &quot;remove_connection() {#classmavsdk_1_1_mavsdk_1a23cf630bb123aa53b0e99c6bd83ad013}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">remove_connection</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ConnectionHandle</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> handle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Remove connection again.</p><p><strong>Parameters</strong></p><ul><li><a href="./classmavsdk_1_1_mavsdk.html#classmavsdk_1_1_mavsdk_1a1b16edeae47af0815b3267c9075f6a8f">ConnectionHandle</a> <strong>handle</strong> - <a href="./classmavsdk_1_1_handle.html">Handle</a> returned when connection was added.</li></ul><h3 id="classmavsdk_1_1_mavsdk_1a8f50fffac65a35857a88da2fd42f9c54" tabindex="-1">subscribe_connection_errors() <a class="header-anchor" href="#classmavsdk_1_1_mavsdk_1a8f50fffac65a35857a88da2fd42f9c54" aria-label="Permalink to &quot;subscribe_connection_errors() {#classmavsdk_1_1_mavsdk_1a8f50fffac65a35857a88da2fd42f9c54}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ConnectionErrorHandle</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">subscribe_connection_errors</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ConnectionErrorCallback</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> callback</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Subscribe to connection errors.</p><p>This will trigger when messages fail to be sent which can help diagnosing network interfaces or serial devices disappearing.</p><p>Usually, an error will require to remove a connection and add it fresh.</p><p><strong>Parameters</strong></p><ul><li><a href="./classmavsdk_1_1_mavsdk.html#classmavsdk_1_1_mavsdk_1ac71d182538bee6fb3ab007edafac5d5f">ConnectionErrorCallback</a> <strong>callback</strong> - Callback to subscribe.</li></ul><p><strong>Returns</strong></p><p> <a href="./classmavsdk_1_1_mavsdk.html#classmavsdk_1_1_mavsdk_1aeb442a462d03662e4c152509fd0c203b">ConnectionErrorHandle</a> - <a href="./classmavsdk_1_1_handle.html">Handle</a> to unsubscribe again.</p><h3 id="classmavsdk_1_1_mavsdk_1a377ec6517ee75981ceb2f26b30e59fbd" tabindex="-1">unsubscribe_connection_errors() <a class="header-anchor" href="#classmavsdk_1_1_mavsdk_1a377ec6517ee75981ceb2f26b30e59fbd" aria-label="Permalink to &quot;unsubscribe_connection_errors() {#classmavsdk_1_1_mavsdk_1a377ec6517ee75981ceb2f26b30e59fbd}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">unsubscribe_connection_errors</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ConnectionErrorHandle</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> handle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Unsubscribe from connection errors.</p><p><strong>Parameters</strong></p><ul><li><a href="./classmavsdk_1_1_mavsdk.html#classmavsdk_1_1_mavsdk_1aeb442a462d03662e4c152509fd0c203b">ConnectionErrorHandle</a> <strong>handle</strong> - <a href="./classmavsdk_1_1_handle.html">Handle</a> to unsubscribe.</li></ul><h3 id="classmavsdk_1_1_mavsdk_1aca9c72b300d384341b00ff9ba2c6e5c5" tabindex="-1">systems() <a class="header-anchor" href="#classmavsdk_1_1_mavsdk_1aca9c72b300d384341b00ff9ba2c6e5c5" aria-label="Permalink to &quot;systems() {#classmavsdk_1_1_mavsdk_1aca9c72b300d384341b00ff9ba2c6e5c5}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">shared_ptr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">System</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &gt; &gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systems</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span></span></code></pre></div><p>Get a vector of systems which have been discovered or set-up.</p><p><strong>Returns</strong></p><p> std::vector&lt; std::shared_ptr&lt; <a href="./classmavsdk_1_1_system.html">System</a> &gt; &gt; - The vector of systems which are available.</p><h3 id="classmavsdk_1_1_mavsdk_1aa1bcb865693dbd140478e75ce58699b7" tabindex="-1">first_autopilot() <a class="header-anchor" href="#classmavsdk_1_1_mavsdk_1aa1bcb865693dbd140478e75ce58699b7" aria-label="Permalink to &quot;first_autopilot() {#classmavsdk_1_1_mavsdk_1aa1bcb865693dbd140478e75ce58699b7}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">optional</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">shared_ptr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">System</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &gt; &gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">first_autopilot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">double</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> timeout_s</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span></span></code></pre></div><p>Get the first autopilot that has been discovered.</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>This requires a MAVLink component with component ID 1 sending heartbeats.</p></div><p><strong>Parameters</strong></p><ul><li>double <strong>timeout_s</strong> - A timeout in seconds. A timeout of 0 will not wait and return immediately. A negative timeout will wait forever.</li></ul><p><strong>Returns</strong></p><p> std::optional&lt; std::shared_ptr&lt; <a href="./classmavsdk_1_1_system.html">System</a> &gt; &gt; - A system or nothing if nothing was discovered within the timeout.</p><h3 id="classmavsdk_1_1_mavsdk_1acaeea86253493dc15b6540d2100a1b86" tabindex="-1">set_configuration() <a class="header-anchor" href="#classmavsdk_1_1_mavsdk_1acaeea86253493dc15b6540d2100a1b86" aria-label="Permalink to &quot;set_configuration() {#classmavsdk_1_1_mavsdk_1acaeea86253493dc15b6540d2100a1b86}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">set_configuration</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Configuration</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> configuration</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Set <a href="./classmavsdk_1_1_mavsdk_1_1_configuration.html">Configuration</a> of SDK.</p><p>The default configuration is <code>Configuration::GroundStation</code> The configuration is used in order to set the MAVLink system ID, the component ID, as well as the MAV_TYPE accordingly.</p><p><strong>Parameters</strong></p><ul><li><a href="./classmavsdk_1_1_mavsdk_1_1_configuration.html">Configuration</a> <strong>configuration</strong> - <a href="./classmavsdk_1_1_mavsdk_1_1_configuration.html">Configuration</a> chosen.</li></ul><h3 id="classmavsdk_1_1_mavsdk_1a765f37b61462addcfd961e720585d2c6" tabindex="-1">set_timeout_s() <a class="header-anchor" href="#classmavsdk_1_1_mavsdk_1a765f37b61462addcfd961e720585d2c6" aria-label="Permalink to &quot;set_timeout_s() {#classmavsdk_1_1_mavsdk_1a765f37b61462addcfd961e720585d2c6}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">set_timeout_s</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">double</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> timeout_s</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Set timeout of MAVLink transfers.</p><p>The default timeout used is generally DEFAULT_SERIAL_BAUDRATE (0.5 seconds) seconds. If MAVSDK is used on the same host this timeout can be reduced, while if MAVSDK has to communicate over links with high latency it might need to be increased to prevent timeouts.</p><p><strong>Parameters</strong></p><ul><li>double <strong>timeout_s</strong> -</li></ul><h3 id="classmavsdk_1_1_mavsdk_1a5b7c958ad2e4529dc7b950ab26618575" tabindex="-1">subscribe_on_new_system() <a class="header-anchor" href="#classmavsdk_1_1_mavsdk_1a5b7c958ad2e4529dc7b950ab26618575" aria-label="Permalink to &quot;subscribe_on_new_system() {#classmavsdk_1_1_mavsdk_1a5b7c958ad2e4529dc7b950ab26618575}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">NewSystemHandle</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">subscribe_on_new_system</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> NewSystemCallback</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &amp;</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">callback</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Get notification about a change in systems.</p><p>This gets called whenever a system is added.</p><p><strong>Parameters</strong></p><ul><li>const <a href="./classmavsdk_1_1_mavsdk.html#classmavsdk_1_1_mavsdk_1a7a283c6a75e852a56be4c5862f8a3fab">NewSystemCallback</a>&amp; <strong>callback</strong> - Callback to subscribe.</li></ul><p><strong>Returns</strong></p><p> <a href="./classmavsdk_1_1_mavsdk.html#classmavsdk_1_1_mavsdk_1ae0727f2bed9cbf276d161ada0a432b8c">NewSystemHandle</a> - A handle to unsubscribe again.</p><h3 id="classmavsdk_1_1_mavsdk_1ad7f77f1295a700ee73cccc345019c1ff" tabindex="-1">unsubscribe_on_new_system() <a class="header-anchor" href="#classmavsdk_1_1_mavsdk_1ad7f77f1295a700ee73cccc345019c1ff" aria-label="Permalink to &quot;unsubscribe_on_new_system() {#classmavsdk_1_1_mavsdk_1ad7f77f1295a700ee73cccc345019c1ff}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">unsubscribe_on_new_system</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">NewSystemHandle</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> handle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>unsubscribe from subscribe_on_new_system.</p><p><strong>Parameters</strong></p><ul><li><a href="./classmavsdk_1_1_mavsdk.html#classmavsdk_1_1_mavsdk_1ae0727f2bed9cbf276d161ada0a432b8c">NewSystemHandle</a> <strong>handle</strong> - <a href="./classmavsdk_1_1_handle.html">Handle</a> received on subscription.</li></ul><h3 id="classmavsdk_1_1_mavsdk_1a693a2f665c35d6b01d6144819d353280" tabindex="-1">server_component() <a class="header-anchor" href="#classmavsdk_1_1_mavsdk_1a693a2f665c35d6b01d6144819d353280" aria-label="Permalink to &quot;server_component() {#classmavsdk_1_1_mavsdk_1a693a2f665c35d6b01d6144819d353280}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">shared_ptr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ServerComponent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">server_component</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">unsigned</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> instance</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Get server component with default type of <a href="./classmavsdk_1_1_mavsdk.html">Mavsdk</a> instance.</p><p><strong>Parameters</strong></p><ul><li>unsigned <strong>instance</strong> -</li></ul><p><strong>Returns</strong></p><p> std::shared_ptr&lt; <a href="./classmavsdk_1_1_server_component.html">ServerComponent</a> &gt; - A valid shared pointer to a server component if it was successful, an empty pointer otherwise.</p><h3 id="classmavsdk_1_1_mavsdk_1a547fc7e18434473ea3e0e51ab3305abb" tabindex="-1">server_component_by_type() <a class="header-anchor" href="#classmavsdk_1_1_mavsdk_1a547fc7e18434473ea3e0e51ab3305abb" aria-label="Permalink to &quot;server_component_by_type() {#classmavsdk_1_1_mavsdk_1a547fc7e18434473ea3e0e51ab3305abb}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">shared_ptr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ServerComponent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">server_component_by_type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ComponentType</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> component_type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">unsigned</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> instance</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Get server component by a high level type.</p><p>This represents a server component of the MAVSDK instance.</p><p><strong>Parameters</strong></p><ul><li><a href="./namespacemavsdk.html#namespacemavsdk_1a20fe7f7c8312779a187017111bf33d12">ComponentType</a> <strong>component_type</strong> - The high level type of the component.</li><li>unsigned <strong>instance</strong> - The instance of the component if there are multiple, starting at 0.</li></ul><p><strong>Returns</strong></p><p> std::shared_ptr&lt; <a href="./classmavsdk_1_1_server_component.html">ServerComponent</a> &gt; - A valid shared pointer to a server component if it was successful, an empty pointer otherwise.</p><h3 id="classmavsdk_1_1_mavsdk_1adef7d0d7422bcddbda629a404fb33ae2" tabindex="-1">server_component_by_id() <a class="header-anchor" href="#classmavsdk_1_1_mavsdk_1adef7d0d7422bcddbda629a404fb33ae2" aria-label="Permalink to &quot;server_component_by_id() {#classmavsdk_1_1_mavsdk_1adef7d0d7422bcddbda629a404fb33ae2}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">shared_ptr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ServerComponent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">server_component_by_id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uint8_t</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> component_id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Get server component by the low MAVLink component ID.</p><p>This represents a server component of the MAVSDK instance.</p><p><strong>Parameters</strong></p><ul><li>uint8_t <strong>component_id</strong> - MAVLink component ID to use</li></ul><p><strong>Returns</strong></p><p> std::shared_ptr&lt; <a href="./classmavsdk_1_1_server_component.html">ServerComponent</a> &gt; - A valid shared pointer to a server component if it was successful, an empty pointer otherwise.</p><h3 id="classmavsdk_1_1_mavsdk_1a722fce6f1abe8337721dde710b5b40d7" tabindex="-1">subscribe_incoming_messages_json() <a class="header-anchor" href="#classmavsdk_1_1_mavsdk_1a722fce6f1abe8337721dde710b5b40d7" aria-label="Permalink to &quot;subscribe_incoming_messages_json() {#classmavsdk_1_1_mavsdk_1a722fce6f1abe8337721dde710b5b40d7}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">InterceptJsonHandle</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">subscribe_incoming_messages_json</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> InterceptJsonCallback</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &amp;</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">callback</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Intercept incoming messages as JSON.</p><p>This is a hook that allows to read any messages arriving via the in JSON format.</p><p><strong>Parameters</strong></p><ul><li>const <a href="./classmavsdk_1_1_mavsdk.html#classmavsdk_1_1_mavsdk_1a17923db3b1504e911487729114b68f48">InterceptJsonCallback</a>&amp; <strong>callback</strong> - Callback to be called for each incoming message. To drop a message, return &#39;false&#39; from the callback.</li></ul><p><strong>Returns</strong></p><p> <a href="./classmavsdk_1_1_mavsdk.html#classmavsdk_1_1_mavsdk_1a3b40ae4fd8af4c4419b61f0ad955812f">InterceptJsonHandle</a> -</p><h3 id="classmavsdk_1_1_mavsdk_1a4be244c38939cb517c2061baf4d43386" tabindex="-1">unsubscribe_incoming_messages_json() <a class="header-anchor" href="#classmavsdk_1_1_mavsdk_1a4be244c38939cb517c2061baf4d43386" aria-label="Permalink to &quot;unsubscribe_incoming_messages_json() {#classmavsdk_1_1_mavsdk_1a4be244c38939cb517c2061baf4d43386}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">unsubscribe_incoming_messages_json</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">InterceptJsonHandle</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> handle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Unsubscribe from incoming messages as JSON.</p><p><strong>Parameters</strong></p><ul><li><a href="./classmavsdk_1_1_mavsdk.html#classmavsdk_1_1_mavsdk_1a3b40ae4fd8af4c4419b61f0ad955812f">InterceptJsonHandle</a> <strong>handle</strong> -</li></ul><h3 id="classmavsdk_1_1_mavsdk_1a58f85b2f74a32404a8e975feefed8f47" tabindex="-1">subscribe_outgoing_messages_json() <a class="header-anchor" href="#classmavsdk_1_1_mavsdk_1a58f85b2f74a32404a8e975feefed8f47" aria-label="Permalink to &quot;subscribe_outgoing_messages_json() {#classmavsdk_1_1_mavsdk_1a58f85b2f74a32404a8e975feefed8f47}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">InterceptJsonHandle</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">subscribe_outgoing_messages_json</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> InterceptJsonCallback</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &amp;</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">callback</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Intercept outgoing messages as JSON.</p><p>3</p><p>This is a hook that allows to read any messages arriving via the in JSON format.</p><p><strong>Parameters</strong></p><ul><li>const <a href="./classmavsdk_1_1_mavsdk.html#classmavsdk_1_1_mavsdk_1a17923db3b1504e911487729114b68f48">InterceptJsonCallback</a>&amp; <strong>callback</strong> - Callback to be called for each outgoing message. To drop a message, return &#39;false&#39; from the callback.</li></ul><p><strong>Returns</strong></p><p> <a href="./classmavsdk_1_1_mavsdk.html#classmavsdk_1_1_mavsdk_1a3b40ae4fd8af4c4419b61f0ad955812f">InterceptJsonHandle</a> -</p><h3 id="classmavsdk_1_1_mavsdk_1aa3a490358db87cfed617cdad902bb753" tabindex="-1">unsubscribe_outgoing_messages_json() <a class="header-anchor" href="#classmavsdk_1_1_mavsdk_1aa3a490358db87cfed617cdad902bb753" aria-label="Permalink to &quot;unsubscribe_outgoing_messages_json() {#classmavsdk_1_1_mavsdk_1aa3a490358db87cfed617cdad902bb753}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">unsubscribe_outgoing_messages_json</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">InterceptJsonHandle</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> handle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Unsubscribe from outgoing messages as JSON.</p><p><strong>Parameters</strong></p><ul><li><a href="./classmavsdk_1_1_mavsdk.html#classmavsdk_1_1_mavsdk_1a3b40ae4fd8af4c4419b61f0ad955812f">InterceptJsonHandle</a> <strong>handle</strong> -</li></ul><h3 id="classmavsdk_1_1_mavsdk_1ac80c8909958533131cbdbc61d061794f" tabindex="-1">intercept_incoming_messages_async() <a class="header-anchor" href="#classmavsdk_1_1_mavsdk_1ac80c8909958533131cbdbc61d061794f" aria-label="Permalink to &quot;intercept_incoming_messages_async() {#classmavsdk_1_1_mavsdk_1ac80c8909958533131cbdbc61d061794f}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">intercept_incoming_messages_async</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">bool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">mavlink_message_t</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)&gt; </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">callback</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Intercept incoming messages.</p><p>This is a hook which allows to change or drop MAVLink messages as they are received before they get forwarded any subscribers.</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>This functionality is provided primarily for testing in order to simulate packet drops or actors not adhering to the MAVLink protocols.</p></div><p><strong>Parameters</strong></p><ul><li>std::function&lt; bool(mavlink_message_t &amp;)&gt; <strong>callback</strong> - Callback to be called for each incoming message. To drop a message, return &#39;false&#39; from the callback.</li></ul><h3 id="classmavsdk_1_1_mavsdk_1a040ee5c1d41e71c0d63cf8f76d2db275" tabindex="-1">intercept_outgoing_messages_async() <a class="header-anchor" href="#classmavsdk_1_1_mavsdk_1a040ee5c1d41e71c0d63cf8f76d2db275" aria-label="Permalink to &quot;intercept_outgoing_messages_async() {#classmavsdk_1_1_mavsdk_1a040ee5c1d41e71c0d63cf8f76d2db275}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">intercept_outgoing_messages_async</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">bool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">mavlink_message_t</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)&gt; </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">callback</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Intercept outgoing messages.</p><p>This is a hook which allows to change or drop MAVLink messages before they are sent.</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>This functionality is provided primarily for testing in order to simulate packet drops or actors not adhering to the MAVLink protocols.</p></div><p><strong>Parameters</strong></p><ul><li>std::function&lt; bool(mavlink_message_t &amp;)&gt; <strong>callback</strong> - Callback to be called for each outgoing message. To drop a message, return &#39;false&#39; from the callback.</li></ul>',202)]))}const _=a(n,[["render",d]]);export{o as __pageData,_ as default};
