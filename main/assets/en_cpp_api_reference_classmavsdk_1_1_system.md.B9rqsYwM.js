import{_ as a,c as e,al as i,o as t}from"./chunks/framework.BVh3rIuO.js";const r=JSON.parse('{"title":"mavsdk::System Class Reference","description":"","frontmatter":{"github_branch":"main"},"headers":[],"relativePath":"en/cpp/api_reference/classmavsdk_1_1_system.md","filePath":"en/cpp/api_reference/classmavsdk_1_1_system.md"}'),n={name:"en/cpp/api_reference/classmavsdk_1_1_system.md"};function d(l,s,h,p,c,k){return t(),e("div",null,s[0]||(s[0]=[i('<h1 id="mavsdk-system-class-reference" tabindex="-1">mavsdk::System Class Reference <a class="header-anchor" href="#mavsdk-system-class-reference" aria-label="Permalink to &quot;mavsdk::System Class Reference&quot;">​</a></h1><p><code>#include: system.h</code></p><hr><p>This class represents a system, made up of one or more components (e.g. autopilot, cameras, servos, gimbals, etc).</p><p><a href="./classmavsdk_1_1_system.html">System</a> objects are used to interact with UAVs (including their components) and standalone cameras. They are not created directly by application code, but are returned by the <a href="./classmavsdk_1_1_mavsdk.html">Mavsdk</a> class.</p><h2 id="public-types" tabindex="-1">Public Types <a class="header-anchor" href="#public-types" aria-label="Permalink to &quot;Public Types&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>std::function&lt; void(bool)&gt; <a href="#classmavsdk_1_1_system_1a0e56bb48498100fde0872a3ec376f282">IsConnectedCallback</a></td><td>type for is connected callback.</td></tr><tr><td><a href="./classmavsdk_1_1_handle.html">Handle</a>&lt; bool &gt; <a href="#classmavsdk_1_1_system_1adedf1d76e922076dfd3ca3c726443efd">IsConnectedHandle</a></td><td>handle type to unsubscribe from subscribe_is_connected.</td></tr><tr><td>std::function&lt; void(<a href="./namespacemavsdk.html#namespacemavsdk_1a20fe7f7c8312779a187017111bf33d12">ComponentType</a>)&gt; <a href="#classmavsdk_1_1_system_1a064172b17193bb9be448e2053c83627b">ComponentDiscoveredCallback</a></td><td>type for component discovery callback</td></tr><tr><td><a href="./classmavsdk_1_1_handle.html">Handle</a>&lt; <a href="./namespacemavsdk.html#namespacemavsdk_1a20fe7f7c8312779a187017111bf33d12">ComponentType</a> &gt; <a href="#classmavsdk_1_1_system_1adfb374a9eaaa765cf0813cfa6b40df39">ComponentDiscoveredHandle</a></td><td>type for component discovery callback handle</td></tr><tr><td>std::function&lt; void(<a href="./namespacemavsdk.html#namespacemavsdk_1a20fe7f7c8312779a187017111bf33d12">ComponentType</a>, uint8_t)&gt; <a href="#classmavsdk_1_1_system_1a914c50b413b5bd61d334631096e614ca">ComponentDiscoveredIdCallback</a></td><td>type for component discovery callback with component ID</td></tr><tr><td><a href="./classmavsdk_1_1_handle.html">Handle</a>&lt; <a href="./namespacemavsdk.html#namespacemavsdk_1a20fe7f7c8312779a187017111bf33d12">ComponentType</a>, uint8_t &gt; <a href="#classmavsdk_1_1_system_1abd573ae09348f33e7cd3a006fc26a708">ComponentDiscoveredIdHandle</a></td><td>type for component discovery callback handle with component ID</td></tr></tbody></table><h2 id="public-member-functions" tabindex="-1">Public Member Functions <a class="header-anchor" href="#public-member-functions" aria-label="Permalink to &quot;Public Member Functions&quot;">​</a></h2><table tabindex="0"><thead><tr><th style="text-align:right;">Type</th><th>Name</th><th>Description</th></tr></thead><tbody><tr><td style="text-align:right;"> </td><td><a href="#classmavsdk_1_1_system_1abdc4208c07d776c628acdc037a881ea6">~System</a> ()</td><td>Destructor.</td></tr><tr><td style="text-align:right;"> </td><td><a href="#classmavsdk_1_1_system_1ac0e97e92181683f6b31fe208165dc35c">System</a> (const <a href="./classmavsdk_1_1_system.html">System</a> &amp;)=delete</td><td>Copy constructor (object is not copyable).</td></tr><tr><td style="text-align:right;">void</td><td><a href="#classmavsdk_1_1_system_1a5c4c30affa7abbe06cc809187f3ddcb3">init</a> (uint8_t system_id, uint8_t component_id)const</td><td>Initialize the system.</td></tr><tr><td style="text-align:right;">bool</td><td><a href="#classmavsdk_1_1_system_1a0c3d766baa73f5b35e2950a6f0a38c02">has_autopilot</a> () const</td><td>Checks whether the system has an autopilot.</td></tr><tr><td style="text-align:right;">bool</td><td><a href="#classmavsdk_1_1_system_1a7fb7ed01204498dcaa2ab7d9cc31acf2">is_standalone</a> () const</td><td>Checks whether the system is a standalone (non-autopilot).</td></tr><tr><td style="text-align:right;">bool</td><td><a href="#classmavsdk_1_1_system_1a440fd601ed2120e1e41d9eab536a7da8">has_camera</a> (int camera_id=-1)const</td><td>Checks whether the system has a camera with the given camera ID.</td></tr><tr><td style="text-align:right;">bool</td><td><a href="#classmavsdk_1_1_system_1ad66c3ecc096970d40c34610e49dba929">has_gimbal</a> () const</td><td>Checks whether the system has a gimbal.</td></tr><tr><td style="text-align:right;">bool</td><td><a href="#classmavsdk_1_1_system_1ad07991ae044bc367e27f544db40d065b">is_connected</a> () const</td><td>Checks if the system is connected.</td></tr><tr><td style="text-align:right;">uint8_t</td><td><a href="#classmavsdk_1_1_system_1a091d793db29719f4996040886ad951a6">get_system_id</a> () const</td><td>MAVLink <a href="./classmavsdk_1_1_system.html">System</a> ID of connected system.</td></tr><tr><td style="text-align:right;">std::vector&lt; uint8_t &gt;</td><td><a href="#classmavsdk_1_1_system_1a8ef8d3f5c4b59aa71b6b0e92587185d4">component_ids</a> () const</td><td>MAVLink component IDs of connected system.</td></tr><tr><td style="text-align:right;"><a href="./classmavsdk_1_1_system.html#classmavsdk_1_1_system_1adedf1d76e922076dfd3ca3c726443efd">IsConnectedHandle</a></td><td><a href="#classmavsdk_1_1_system_1aae68747c23976fa7eb63ec0762493263">subscribe_is_connected</a> (const <a href="./classmavsdk_1_1_system.html#classmavsdk_1_1_system_1a0e56bb48498100fde0872a3ec376f282">IsConnectedCallback</a> &amp; callback)</td><td>Subscribe to callback to be called when system connection state changes.</td></tr><tr><td style="text-align:right;">void</td><td><a href="#classmavsdk_1_1_system_1a2f1927d56c14a7ad44995bd56afb706f">unsubscribe_is_connected</a> (<a href="./classmavsdk_1_1_system.html#classmavsdk_1_1_system_1adedf1d76e922076dfd3ca3c726443efd">IsConnectedHandle</a> handle)</td><td>Unsubscribe from subscribe_is_connected.</td></tr><tr><td style="text-align:right;"><a href="./classmavsdk_1_1_system.html#classmavsdk_1_1_system_1adfb374a9eaaa765cf0813cfa6b40df39">ComponentDiscoveredHandle</a></td><td><a href="#classmavsdk_1_1_system_1a25ede402b74a9412334ff1cab521e7d3">subscribe_component_discovered</a> (const <a href="./classmavsdk_1_1_system.html#classmavsdk_1_1_system_1a064172b17193bb9be448e2053c83627b">ComponentDiscoveredCallback</a> &amp; callback)</td><td>Subscribe to be called when a component is discovered.</td></tr><tr><td style="text-align:right;">void</td><td><a href="#classmavsdk_1_1_system_1a5d62d308534b5e1673779543d02037f3">unsubscribe_component_discovered</a> (<a href="./classmavsdk_1_1_system.html#classmavsdk_1_1_system_1adfb374a9eaaa765cf0813cfa6b40df39">ComponentDiscoveredHandle</a> handle)</td><td>Unsubscribe from subscribe_component_discovered.</td></tr><tr><td style="text-align:right;"><a href="./classmavsdk_1_1_system.html#classmavsdk_1_1_system_1abd573ae09348f33e7cd3a006fc26a708">ComponentDiscoveredIdHandle</a></td><td><a href="#classmavsdk_1_1_system_1a1905176f3a6633a8a9fe655f2dcd2d23">subscribe_component_discovered_id</a> (const <a href="./classmavsdk_1_1_system.html#classmavsdk_1_1_system_1a914c50b413b5bd61d334631096e614ca">ComponentDiscoveredIdCallback</a> &amp; callback)</td><td>Subscribe to be called when a component is discovered.</td></tr><tr><td style="text-align:right;">void</td><td><a href="#classmavsdk_1_1_system_1a37bca637341bba8b07e8f95c97d122db">unsubscribe_component_discovered_id</a> (<a href="./classmavsdk_1_1_system.html#classmavsdk_1_1_system_1abd573ae09348f33e7cd3a006fc26a708">ComponentDiscoveredIdHandle</a> handle)</td><td>Unsubscribe from subscribe_component_discovered_id.</td></tr><tr><td style="text-align:right;">void</td><td><a href="#classmavsdk_1_1_system_1a7c7177fb0789aefbfb375f4bb12ce824">enable_timesync</a> ()</td><td>Enable time synchronization using the TIMESYNC messages.</td></tr><tr><td style="text-align:right;"><a href="./namespacemavsdk.html#namespacemavsdk_1aba05635d1785223a4d7b457ae0407297">Autopilot</a></td><td><a href="#classmavsdk_1_1_system_1af3ded5464f6025f5d31955e100e15894">autopilot_type</a> () const</td><td>Get autopilot type.</td></tr><tr><td style="text-align:right;"><a href="./namespacemavsdk.html#namespacemavsdk_1a9e3a3a502dc8313cb931a8a44cc6f95b">Vehicle</a></td><td><a href="#classmavsdk_1_1_system_1aababe0d2e6c91aef11a06dcdbccdf69e">vehicle_type</a> () const</td><td>Get vehicle type.</td></tr><tr><td style="text-align:right;">const <a href="./classmavsdk_1_1_system.html">System</a> &amp;</td><td><a href="#classmavsdk_1_1_system_1ace4603ebad199e8619876993a2ad5237">operator=</a> (const <a href="./classmavsdk_1_1_system.html">System</a> &amp;)=delete</td><td>Equality operator (object is not copyable).</td></tr></tbody></table><h2 id="constructor-destructor-documentation" tabindex="-1">Constructor &amp; Destructor Documentation <a class="header-anchor" href="#constructor-destructor-documentation" aria-label="Permalink to &quot;Constructor &amp; Destructor Documentation&quot;">​</a></h2><h3 id="classmavsdk_1_1_system_1abdc4208c07d776c628acdc037a881ea6" tabindex="-1">~System() <a class="header-anchor" href="#classmavsdk_1_1_system_1abdc4208c07d776c628acdc037a881ea6" aria-label="Permalink to &quot;~System() {#classmavsdk_1_1_system_1abdc4208c07d776c628acdc037a881ea6}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">System</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">~</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">System</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><p>Destructor.</p><h3 id="classmavsdk_1_1_system_1ac0e97e92181683f6b31fe208165dc35c" tabindex="-1">System() <a class="header-anchor" href="#classmavsdk_1_1_system_1ac0e97e92181683f6b31fe208165dc35c" aria-label="Permalink to &quot;System() {#classmavsdk_1_1_system_1ac0e97e92181683f6b31fe208165dc35c}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">System</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">System</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> System </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=delete</span></span></code></pre></div><p>Copy constructor (object is not copyable).</p><p><strong>Parameters</strong></p><ul><li>const <a href="./classmavsdk_1_1_system.html">System</a>&amp; -</li></ul><h2 id="member-typdef-documentation" tabindex="-1">Member Typdef Documentation <a class="header-anchor" href="#member-typdef-documentation" aria-label="Permalink to &quot;Member Typdef Documentation&quot;">​</a></h2><h3 id="classmavsdk_1_1_system_1a0e56bb48498100fde0872a3ec376f282" tabindex="-1">typedef IsConnectedCallback <a class="header-anchor" href="#classmavsdk_1_1_system_1a0e56bb48498100fde0872a3ec376f282" aria-label="Permalink to &quot;typedef IsConnectedCallback {#classmavsdk_1_1_system_1a0e56bb48498100fde0872a3ec376f282}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">System</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::IsConnectedCallback </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::function</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">bool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><p>type for is connected callback.</p><h3 id="classmavsdk_1_1_system_1adedf1d76e922076dfd3ca3c726443efd" tabindex="-1">typedef IsConnectedHandle <a class="header-anchor" href="#classmavsdk_1_1_system_1adedf1d76e922076dfd3ca3c726443efd" aria-label="Permalink to &quot;typedef IsConnectedHandle {#classmavsdk_1_1_system_1adedf1d76e922076dfd3ca3c726443efd}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">System</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::IsConnectedHandle </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  Handle</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;bool&gt;</span></span></code></pre></div><p>handle type to unsubscribe from subscribe_is_connected.</p><h3 id="classmavsdk_1_1_system_1a064172b17193bb9be448e2053c83627b" tabindex="-1">typedef ComponentDiscoveredCallback <a class="header-anchor" href="#classmavsdk_1_1_system_1a064172b17193bb9be448e2053c83627b" aria-label="Permalink to &quot;typedef ComponentDiscoveredCallback {#classmavsdk_1_1_system_1a064172b17193bb9be448e2053c83627b}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">System</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::ComponentDiscoveredCallback </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::function</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ComponentType)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><p>type for component discovery callback</p><h3 id="classmavsdk_1_1_system_1adfb374a9eaaa765cf0813cfa6b40df39" tabindex="-1">typedef ComponentDiscoveredHandle <a class="header-anchor" href="#classmavsdk_1_1_system_1adfb374a9eaaa765cf0813cfa6b40df39" aria-label="Permalink to &quot;typedef ComponentDiscoveredHandle {#classmavsdk_1_1_system_1adfb374a9eaaa765cf0813cfa6b40df39}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">System</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::ComponentDiscoveredHandle </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  Handle</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ComponentType</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><p>type for component discovery callback handle</p><h3 id="classmavsdk_1_1_system_1a914c50b413b5bd61d334631096e614ca" tabindex="-1">typedef ComponentDiscoveredIdCallback <a class="header-anchor" href="#classmavsdk_1_1_system_1a914c50b413b5bd61d334631096e614ca" aria-label="Permalink to &quot;typedef ComponentDiscoveredIdCallback {#classmavsdk_1_1_system_1a914c50b413b5bd61d334631096e614ca}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">System</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::ComponentDiscoveredIdCallback </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::function</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ComponentType, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uint8_t</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><p>type for component discovery callback with component ID</p><h3 id="classmavsdk_1_1_system_1abd573ae09348f33e7cd3a006fc26a708" tabindex="-1">typedef ComponentDiscoveredIdHandle <a class="header-anchor" href="#classmavsdk_1_1_system_1abd573ae09348f33e7cd3a006fc26a708" aria-label="Permalink to &quot;typedef ComponentDiscoveredIdHandle {#classmavsdk_1_1_system_1abd573ae09348f33e7cd3a006fc26a708}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">System</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::ComponentDiscoveredIdHandle </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  Handle</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ComponentType, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uint8_t&gt;</span></span></code></pre></div><p>type for component discovery callback handle with component ID</p><h2 id="member-function-documentation" tabindex="-1">Member Function Documentation <a class="header-anchor" href="#member-function-documentation" aria-label="Permalink to &quot;Member Function Documentation&quot;">​</a></h2><h3 id="classmavsdk_1_1_system_1a5c4c30affa7abbe06cc809187f3ddcb3" tabindex="-1">init() <a class="header-anchor" href="#classmavsdk_1_1_system_1a5c4c30affa7abbe06cc809187f3ddcb3" aria-label="Permalink to &quot;init() {#classmavsdk_1_1_system_1a5c4c30affa7abbe06cc809187f3ddcb3}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">System</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">init</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uint8_t</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> system_id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uint8_t</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> component_id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span></span></code></pre></div><p>Initialize the system.</p><p>This is not (and should not be) directly called by application code.</p><p><strong>Parameters</strong></p><ul><li>uint8_t <strong>system_id</strong> - <a href="./classmavsdk_1_1_system.html">System</a> id.</li><li>uint8_t <strong>component_id</strong> - Component id.</li></ul><h3 id="classmavsdk_1_1_system_1a0c3d766baa73f5b35e2950a6f0a38c02" tabindex="-1">has_autopilot() <a class="header-anchor" href="#classmavsdk_1_1_system_1a0c3d766baa73f5b35e2950a6f0a38c02" aria-label="Permalink to &quot;has_autopilot() {#classmavsdk_1_1_system_1a0c3d766baa73f5b35e2950a6f0a38c02}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">bool</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">System</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">has_autopilot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span></span></code></pre></div><p>Checks whether the system has an autopilot.</p><p><strong>Returns</strong></p><p> bool - <code>true</code> if it has an autopilot, <code>false</code> otherwise.</p><h3 id="classmavsdk_1_1_system_1a7fb7ed01204498dcaa2ab7d9cc31acf2" tabindex="-1">is_standalone() <a class="header-anchor" href="#classmavsdk_1_1_system_1a7fb7ed01204498dcaa2ab7d9cc31acf2" aria-label="Permalink to &quot;is_standalone() {#classmavsdk_1_1_system_1a7fb7ed01204498dcaa2ab7d9cc31acf2}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">bool</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">System</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">is_standalone</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span></span></code></pre></div><p>Checks whether the system is a standalone (non-autopilot).</p><p><strong>Returns</strong></p><p> bool - <code>true</code> if stand alone, <code>false</code> otherwise.</p><h3 id="classmavsdk_1_1_system_1a440fd601ed2120e1e41d9eab536a7da8" tabindex="-1">has_camera() <a class="header-anchor" href="#classmavsdk_1_1_system_1a440fd601ed2120e1e41d9eab536a7da8" aria-label="Permalink to &quot;has_camera() {#classmavsdk_1_1_system_1a440fd601ed2120e1e41d9eab536a7da8}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">bool</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">System</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">has_camera</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> camera_id</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span></span></code></pre></div><p>Checks whether the system has a camera with the given camera ID.</p><p>A <a href="./classmavsdk_1_1_system.html">System</a> may have several cameras, with IDs starting from 0. When called without passing a camera ID, it checks whether the system has any camera.</p><p><strong>Parameters</strong></p><ul><li>int <strong>camera_id</strong> - ID of the camera starting from 0 onwards.</li></ul><p><strong>Returns</strong></p><p> bool - <code>true</code> if camera with the given camera ID is found, <code>false</code> otherwise.</p><h3 id="classmavsdk_1_1_system_1ad66c3ecc096970d40c34610e49dba929" tabindex="-1">has_gimbal() <a class="header-anchor" href="#classmavsdk_1_1_system_1ad66c3ecc096970d40c34610e49dba929" aria-label="Permalink to &quot;has_gimbal() {#classmavsdk_1_1_system_1ad66c3ecc096970d40c34610e49dba929}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">bool</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">System</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">has_gimbal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span></span></code></pre></div><p>Checks whether the system has a gimbal.</p><p><strong>Returns</strong></p><p> bool - <code>true</code> if the system has a gimbal, false otherwise.</p><h3 id="classmavsdk_1_1_system_1ad07991ae044bc367e27f544db40d065b" tabindex="-1">is_connected() <a class="header-anchor" href="#classmavsdk_1_1_system_1ad07991ae044bc367e27f544db40d065b" aria-label="Permalink to &quot;is_connected() {#classmavsdk_1_1_system_1ad07991ae044bc367e27f544db40d065b}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">bool</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">System</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">is_connected</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span></span></code></pre></div><p>Checks if the system is connected.</p><p>A system is connected when heartbeats are arriving (discovered and not timed out).</p><p><strong>Returns</strong></p><p> bool - <code>true</code> if the system is connected.</p><h3 id="classmavsdk_1_1_system_1a091d793db29719f4996040886ad951a6" tabindex="-1">get_system_id() <a class="header-anchor" href="#classmavsdk_1_1_system_1a091d793db29719f4996040886ad951a6" aria-label="Permalink to &quot;get_system_id() {#classmavsdk_1_1_system_1a091d793db29719f4996040886ad951a6}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uint8_t</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">System</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get_system_id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span></span></code></pre></div><p>MAVLink <a href="./classmavsdk_1_1_system.html">System</a> ID of connected system.</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>: this is 0 if nothing is connected yet.</p></div><p><strong>Returns</strong></p><p> uint8_t - the system ID.</p><h3 id="classmavsdk_1_1_system_1a8ef8d3f5c4b59aa71b6b0e92587185d4" tabindex="-1">component_ids() <a class="header-anchor" href="#classmavsdk_1_1_system_1a8ef8d3f5c4b59aa71b6b0e92587185d4" aria-label="Permalink to &quot;component_ids() {#classmavsdk_1_1_system_1a8ef8d3f5c4b59aa71b6b0e92587185d4}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uint8_t</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">System</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">component_ids</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span></span></code></pre></div><p>MAVLink component IDs of connected system.</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>: all components that have been seen at least once will be listed.</p></div><p><strong>Returns</strong></p><p> std::vector&lt; uint8_t &gt; - a list of all component ids</p><h3 id="classmavsdk_1_1_system_1aae68747c23976fa7eb63ec0762493263" tabindex="-1">subscribe_is_connected() <a class="header-anchor" href="#classmavsdk_1_1_system_1aae68747c23976fa7eb63ec0762493263" aria-label="Permalink to &quot;subscribe_is_connected() {#classmavsdk_1_1_system_1aae68747c23976fa7eb63ec0762493263}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">IsConnectedHandle</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">System</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">subscribe_is_connected</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> IsConnectedCallback</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &amp;</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">callback</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Subscribe to callback to be called when system connection state changes.</p><p><strong>Parameters</strong></p><ul><li>const <a href="./classmavsdk_1_1_system.html#classmavsdk_1_1_system_1a0e56bb48498100fde0872a3ec376f282">IsConnectedCallback</a>&amp; <strong>callback</strong> - Callback which will be called.</li></ul><p><strong>Returns</strong></p><p> <a href="./classmavsdk_1_1_system.html#classmavsdk_1_1_system_1adedf1d76e922076dfd3ca3c726443efd">IsConnectedHandle</a> -</p><h3 id="classmavsdk_1_1_system_1a2f1927d56c14a7ad44995bd56afb706f" tabindex="-1">unsubscribe_is_connected() <a class="header-anchor" href="#classmavsdk_1_1_system_1a2f1927d56c14a7ad44995bd56afb706f" aria-label="Permalink to &quot;unsubscribe_is_connected() {#classmavsdk_1_1_system_1a2f1927d56c14a7ad44995bd56afb706f}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">System</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">unsubscribe_is_connected</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">IsConnectedHandle</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> handle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Unsubscribe from subscribe_is_connected.</p><p><strong>Parameters</strong></p><ul><li><a href="./classmavsdk_1_1_system.html#classmavsdk_1_1_system_1adedf1d76e922076dfd3ca3c726443efd">IsConnectedHandle</a> <strong>handle</strong> -</li></ul><h3 id="classmavsdk_1_1_system_1a25ede402b74a9412334ff1cab521e7d3" tabindex="-1">subscribe_component_discovered() <a class="header-anchor" href="#classmavsdk_1_1_system_1a25ede402b74a9412334ff1cab521e7d3" aria-label="Permalink to &quot;subscribe_component_discovered() {#classmavsdk_1_1_system_1a25ede402b74a9412334ff1cab521e7d3}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ComponentDiscoveredHandle</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">System</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">subscribe_component_discovered</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ComponentDiscoveredCallback</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &amp;</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">callback</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Subscribe to be called when a component is discovered.</p><p><strong>Parameters</strong></p><ul><li>const <a href="./classmavsdk_1_1_system.html#classmavsdk_1_1_system_1a064172b17193bb9be448e2053c83627b">ComponentDiscoveredCallback</a>&amp; <strong>callback</strong> - a function of type void(ComponentType) which will be called with the component type of the new component.</li></ul><p><strong>Returns</strong></p><p> <a href="./classmavsdk_1_1_system.html#classmavsdk_1_1_system_1adfb374a9eaaa765cf0813cfa6b40df39">ComponentDiscoveredHandle</a> -</p><h3 id="classmavsdk_1_1_system_1a5d62d308534b5e1673779543d02037f3" tabindex="-1">unsubscribe_component_discovered() <a class="header-anchor" href="#classmavsdk_1_1_system_1a5d62d308534b5e1673779543d02037f3" aria-label="Permalink to &quot;unsubscribe_component_discovered() {#classmavsdk_1_1_system_1a5d62d308534b5e1673779543d02037f3}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">System</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">unsubscribe_component_discovered</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ComponentDiscoveredHandle</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> handle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Unsubscribe from subscribe_component_discovered.</p><p><strong>Parameters</strong></p><ul><li><a href="./classmavsdk_1_1_system.html#classmavsdk_1_1_system_1adfb374a9eaaa765cf0813cfa6b40df39">ComponentDiscoveredHandle</a> <strong>handle</strong> -</li></ul><h3 id="classmavsdk_1_1_system_1a1905176f3a6633a8a9fe655f2dcd2d23" tabindex="-1">subscribe_component_discovered_id() <a class="header-anchor" href="#classmavsdk_1_1_system_1a1905176f3a6633a8a9fe655f2dcd2d23" aria-label="Permalink to &quot;subscribe_component_discovered_id() {#classmavsdk_1_1_system_1a1905176f3a6633a8a9fe655f2dcd2d23}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ComponentDiscoveredIdHandle</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">System</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">subscribe_component_discovered_id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ComponentDiscoveredIdCallback</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &amp;</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">callback</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Subscribe to be called when a component is discovered.</p><p><strong>Parameters</strong></p><ul><li>const <a href="./classmavsdk_1_1_system.html#classmavsdk_1_1_system_1a914c50b413b5bd61d334631096e614ca">ComponentDiscoveredIdCallback</a>&amp; <strong>callback</strong> - a function of type void(ComponentType) which will be called with the component type and the component id of the new component.</li></ul><p><strong>Returns</strong></p><p> <a href="./classmavsdk_1_1_system.html#classmavsdk_1_1_system_1abd573ae09348f33e7cd3a006fc26a708">ComponentDiscoveredIdHandle</a> -</p><h3 id="classmavsdk_1_1_system_1a37bca637341bba8b07e8f95c97d122db" tabindex="-1">unsubscribe_component_discovered_id() <a class="header-anchor" href="#classmavsdk_1_1_system_1a37bca637341bba8b07e8f95c97d122db" aria-label="Permalink to &quot;unsubscribe_component_discovered_id() {#classmavsdk_1_1_system_1a37bca637341bba8b07e8f95c97d122db}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">System</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">unsubscribe_component_discovered_id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ComponentDiscoveredIdHandle</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> handle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Unsubscribe from subscribe_component_discovered_id.</p><p><strong>Parameters</strong></p><ul><li><a href="./classmavsdk_1_1_system.html#classmavsdk_1_1_system_1abd573ae09348f33e7cd3a006fc26a708">ComponentDiscoveredIdHandle</a> <strong>handle</strong> -</li></ul><h3 id="classmavsdk_1_1_system_1a7c7177fb0789aefbfb375f4bb12ce824" tabindex="-1">enable_timesync() <a class="header-anchor" href="#classmavsdk_1_1_system_1a7c7177fb0789aefbfb375f4bb12ce824" aria-label="Permalink to &quot;enable_timesync() {#classmavsdk_1_1_system_1a7c7177fb0789aefbfb375f4bb12ce824}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">System</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">enable_timesync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><p>Enable time synchronization using the TIMESYNC messages.</p><h3 id="classmavsdk_1_1_system_1af3ded5464f6025f5d31955e100e15894" tabindex="-1">autopilot_type() <a class="header-anchor" href="#classmavsdk_1_1_system_1af3ded5464f6025f5d31955e100e15894" aria-label="Permalink to &quot;autopilot_type() {#classmavsdk_1_1_system_1af3ded5464f6025f5d31955e100e15894}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Autopilot</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">System</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">autopilot_type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span></span></code></pre></div><p>Get autopilot type.</p><p><strong>Returns</strong></p><p> <a href="./namespacemavsdk.html#namespacemavsdk_1aba05635d1785223a4d7b457ae0407297">Autopilot</a> - autopilot type discovered.</p><h3 id="classmavsdk_1_1_system_1aababe0d2e6c91aef11a06dcdbccdf69e" tabindex="-1">vehicle_type() <a class="header-anchor" href="#classmavsdk_1_1_system_1aababe0d2e6c91aef11a06dcdbccdf69e" aria-label="Permalink to &quot;vehicle_type() {#classmavsdk_1_1_system_1aababe0d2e6c91aef11a06dcdbccdf69e}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Vehicle</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">System</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vehicle_type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span></span></code></pre></div><p>Get vehicle type.</p><p><strong>Returns</strong></p><p> <a href="./namespacemavsdk.html#namespacemavsdk_1a9e3a3a502dc8313cb931a8a44cc6f95b">Vehicle</a> - vehicle type discovered.</p><h3 id="classmavsdk_1_1_system_1ace4603ebad199e8619876993a2ad5237" tabindex="-1">operator=() <a class="header-anchor" href="#classmavsdk_1_1_system_1ace4603ebad199e8619876993a2ad5237" aria-label="Permalink to &quot;operator=() {#classmavsdk_1_1_system_1ace4603ebad199e8619876993a2ad5237}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> System</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &amp;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">System</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">operator</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> System</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=delete</span></span></code></pre></div><p>Equality operator (object is not copyable).</p><p><strong>Parameters</strong></p><ul><li>const <a href="./classmavsdk_1_1_system.html">System</a>&amp; -</li></ul><p><strong>Returns</strong></p><p> const <a href="./classmavsdk_1_1_system.html">System</a> &amp; -</p>',141)]))}const m=a(n,[["render",d]]);export{r as __pageData,m as default};
