import{_ as r,c as a,al as o,o as s}from"./chunks/framework.BVh3rIuO.js";const _=JSON.parse('{"title":"Build mavsdk_server from Source","description":"","frontmatter":{"github_branch":"main"},"headers":[],"relativePath":"en/cpp/guide/build_mavsdk_server.md","filePath":"en/cpp/guide/build_mavsdk_server.md"}'),i={name:"en/cpp/guide/build_mavsdk_server.md"};function t(l,e,d,n,u,c){return s(),a("div",null,e[0]||(e[0]=[o('<h1 id="build-mavsdk-server-from-source" tabindex="-1">Build mavsdk_server from Source <a class="header-anchor" href="#build-mavsdk-server-from-source" aria-label="Permalink to &quot;Build mavsdk_server from Source&quot;">â€‹</a></h1><p>Language wrappers for MAVSDK other than C++ connect to the MAVSDK C++ core using gRPC. This gRPC server around the MAVSDK C++ library is called mavsdk_server (in the past it was referred to as the backend).</p><p>For more information about the architecture, also see <a href="./../contributing/autogen.html">how the auto-generation works</a>.</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>It is generally recommended to use pre-built binaries of mavsdk_server from the <a href="https://github.com/mavlink/MAVSDK/releases" target="_blank" rel="noreferrer">releases page</a>, however, if needed, it can also be built manually from source as described below.</p></div><p>This topic has been split into:</p><ul><li><a href="./build_linux.html">Build on Linux</a></li><li><a href="./build_macos.html">Build on macOS</a></li><li><a href="./build_windows.html">Build on Windows</a></li><li><a href="./build_dockcross.html">Build with dockcross</a> (for cross compilation and Android)</li></ul>',6)]))}const h=r(i,[["render",t]]);export{_ as __pageData,h as default};
