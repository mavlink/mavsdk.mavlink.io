import{_ as a,c as i,al as t,o as e}from"./chunks/framework.BVh3rIuO.js";const k=JSON.parse('{"title":"mavsdk::Mission Class Reference","description":"","frontmatter":{"github_branch":"main"},"headers":[],"relativePath":"en/cpp/api_reference/classmavsdk_1_1_mission.md","filePath":"en/cpp/api_reference/classmavsdk_1_1_mission.md"}'),n={name:"en/cpp/api_reference/classmavsdk_1_1_mission.md"};function l(d,s,h,o,p,c){return e(),i("div",null,s[0]||(s[0]=[t('<h1 id="mavsdk-mission-class-reference" tabindex="-1">mavsdk::Mission Class Reference <a class="header-anchor" href="#mavsdk-mission-class-reference" aria-label="Permalink to &quot;mavsdk::Mission Class Reference&quot;">​</a></h1><p><code>#include: mission.h</code></p><hr><p>Enable waypoint missions.</p><h2 id="data-structures" tabindex="-1">Data Structures <a class="header-anchor" href="#data-structures" aria-label="Permalink to &quot;Data Structures&quot;">​</a></h2><p>struct <a href="./structmavsdk_1_1_mission_1_1_mission_item.html">MissionItem</a></p><p>struct <a href="./structmavsdk_1_1_mission_1_1_mission_plan.html">MissionPlan</a></p><p>struct <a href="./structmavsdk_1_1_mission_1_1_mission_progress.html">MissionProgress</a></p><p>struct <a href="./structmavsdk_1_1_mission_1_1_progress_data.html">ProgressData</a></p><p>struct <a href="./structmavsdk_1_1_mission_1_1_progress_data_or_mission.html">ProgressDataOrMission</a></p><h2 id="public-types" tabindex="-1">Public Types <a class="header-anchor" href="#public-types" aria-label="Permalink to &quot;Public Types&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>enum <a href="#classmavsdk_1_1_mission_1ab3114c63db76bdc37460939a1f3316f6">Result</a></td><td>Possible results returned for action requests.</td></tr><tr><td>std::function&lt; void(<a href="./classmavsdk_1_1_mission.html#classmavsdk_1_1_mission_1ab3114c63db76bdc37460939a1f3316f6">Result</a>)&gt; <a href="#classmavsdk_1_1_mission_1a30091e79f5b67ade138e5be9d65b6591">ResultCallback</a></td><td>Callback type for asynchronous <a href="./classmavsdk_1_1_mission.html">Mission</a> calls.</td></tr><tr><td>std::function&lt; void(<a href="./classmavsdk_1_1_mission.html#classmavsdk_1_1_mission_1ab3114c63db76bdc37460939a1f3316f6">Result</a>, <a href="./structmavsdk_1_1_mission_1_1_progress_data.html">ProgressData</a>)&gt; <a href="#classmavsdk_1_1_mission_1a559c82c81b3b7694973da8a65af24837">UploadMissionWithProgressCallback</a></td><td>Callback type for upload_mission_with_progress_async.</td></tr><tr><td>std::function&lt; void(<a href="./classmavsdk_1_1_mission.html#classmavsdk_1_1_mission_1ab3114c63db76bdc37460939a1f3316f6">Result</a>, <a href="./structmavsdk_1_1_mission_1_1_mission_plan.html">MissionPlan</a>)&gt; <a href="#classmavsdk_1_1_mission_1af40f70b9b4c91aa280bf75fbfc333b3b">DownloadMissionCallback</a></td><td>Callback type for download_mission_async.</td></tr><tr><td>std::function&lt; void(<a href="./classmavsdk_1_1_mission.html#classmavsdk_1_1_mission_1ab3114c63db76bdc37460939a1f3316f6">Result</a>, <a href="./structmavsdk_1_1_mission_1_1_progress_data_or_mission.html">ProgressDataOrMission</a>)&gt; <a href="#classmavsdk_1_1_mission_1ae73dbe775ceaba81183cebdaa1b6779e">DownloadMissionWithProgressCallback</a></td><td>Callback type for download_mission_with_progress_async.</td></tr><tr><td>std::function&lt; void(<a href="./structmavsdk_1_1_mission_1_1_mission_progress.html">MissionProgress</a>)&gt; <a href="#classmavsdk_1_1_mission_1a67e8d00b1b20affca59fd4338c34c0e2">MissionProgressCallback</a></td><td>Callback type for subscribe_mission_progress.</td></tr><tr><td><a href="./classmavsdk_1_1_handle.html">Handle</a>&lt; <a href="./structmavsdk_1_1_mission_1_1_mission_progress.html">MissionProgress</a> &gt; <a href="#classmavsdk_1_1_mission_1aded0ba06c787ad2f30f401a30b240c8a">MissionProgressHandle</a></td><td><a href="./classmavsdk_1_1_handle.html">Handle</a> type for subscribe_mission_progress.</td></tr></tbody></table><h2 id="public-member-functions" tabindex="-1">Public Member Functions <a class="header-anchor" href="#public-member-functions" aria-label="Permalink to &quot;Public Member Functions&quot;">​</a></h2><table tabindex="0"><thead><tr><th style="text-align:right;">Type</th><th>Name</th><th>Description</th></tr></thead><tbody><tr><td style="text-align:right;"> </td><td><a href="#classmavsdk_1_1_mission_1ab02ae9aada51b483e45d88948fe62c29">Mission</a> (<a href="./classmavsdk_1_1_system.html">System</a> &amp; system)</td><td>Constructor. Creates the plugin for a specific <a href="./classmavsdk_1_1_system.html">System</a>.</td></tr><tr><td style="text-align:right;"> </td><td><a href="#classmavsdk_1_1_mission_1a5222f05ac0c65c7455f19e136b8fcb22">Mission</a> (std::shared_ptr&lt; <a href="./classmavsdk_1_1_system.html">System</a> &gt; system)</td><td>Constructor. Creates the plugin for a specific <a href="./classmavsdk_1_1_system.html">System</a>.</td></tr><tr><td style="text-align:right;"> </td><td><a href="#classmavsdk_1_1_mission_1ab8ddd47439bbc63a0a6b175fdad0368e">~Mission</a> () override</td><td>Destructor (internal use only).</td></tr><tr><td style="text-align:right;"> </td><td><a href="#classmavsdk_1_1_mission_1ab4a4a26254fdff0e3f3872f32479fe1c">Mission</a> (const <a href="./classmavsdk_1_1_mission.html">Mission</a> &amp; other)</td><td>Copy constructor.</td></tr><tr><td style="text-align:right;">void</td><td><a href="#classmavsdk_1_1_mission_1a250fc4758d47ec12e025c327dc0eb482">upload_mission_async</a> (<a href="./structmavsdk_1_1_mission_1_1_mission_plan.html">MissionPlan</a> mission_plan, const <a href="./classmavsdk_1_1_mission.html#classmavsdk_1_1_mission_1a30091e79f5b67ade138e5be9d65b6591">ResultCallback</a> callback)</td><td>Upload a list of mission items to the system.</td></tr><tr><td style="text-align:right;"><a href="./classmavsdk_1_1_mission.html#classmavsdk_1_1_mission_1ab3114c63db76bdc37460939a1f3316f6">Result</a></td><td><a href="#classmavsdk_1_1_mission_1a38274b1c1509375a182c44711ee9f7b1">upload_mission</a> (<a href="./structmavsdk_1_1_mission_1_1_mission_plan.html">MissionPlan</a> mission_plan)const</td><td>Upload a list of mission items to the system.</td></tr><tr><td style="text-align:right;">void</td><td><a href="#classmavsdk_1_1_mission_1a0faa587e80a59e8c40d7fc135650749c">upload_mission_with_progress_async</a> (<a href="./structmavsdk_1_1_mission_1_1_mission_plan.html">MissionPlan</a> mission_plan, const <a href="./classmavsdk_1_1_mission.html#classmavsdk_1_1_mission_1a559c82c81b3b7694973da8a65af24837">UploadMissionWithProgressCallback</a> &amp; callback)</td><td>Upload a list of mission items to the system and report upload progress.</td></tr><tr><td style="text-align:right;"><a href="./classmavsdk_1_1_mission.html#classmavsdk_1_1_mission_1ab3114c63db76bdc37460939a1f3316f6">Result</a></td><td><a href="#classmavsdk_1_1_mission_1ab82609426bef51202b2107d33412378c">cancel_mission_upload</a> () const</td><td>Cancel an ongoing mission upload.</td></tr><tr><td style="text-align:right;">void</td><td><a href="#classmavsdk_1_1_mission_1a04e7e7074273b4591a820894c5c4ad43">download_mission_async</a> (const <a href="./classmavsdk_1_1_mission.html#classmavsdk_1_1_mission_1af40f70b9b4c91aa280bf75fbfc333b3b">DownloadMissionCallback</a> callback)</td><td>Download a list of mission items from the system (asynchronous).</td></tr><tr><td style="text-align:right;">std::pair&lt; <a href="./classmavsdk_1_1_mission.html#classmavsdk_1_1_mission_1ab3114c63db76bdc37460939a1f3316f6">Result</a>, <a href="./structmavsdk_1_1_mission_1_1_mission_plan.html">Mission::MissionPlan</a> &gt;</td><td><a href="#classmavsdk_1_1_mission_1adef2001c0053c669bcc5522619ac90f9">download_mission</a> () const</td><td>Download a list of mission items from the system (asynchronous).</td></tr><tr><td style="text-align:right;">void</td><td><a href="#classmavsdk_1_1_mission_1a5b6b93482f2599c08d75d27a31a4f1d9">download_mission_with_progress_async</a> (const <a href="./classmavsdk_1_1_mission.html#classmavsdk_1_1_mission_1ae73dbe775ceaba81183cebdaa1b6779e">DownloadMissionWithProgressCallback</a> &amp; callback)</td><td>Download a list of mission items from the system (asynchronous) and report progress.</td></tr><tr><td style="text-align:right;"><a href="./classmavsdk_1_1_mission.html#classmavsdk_1_1_mission_1ab3114c63db76bdc37460939a1f3316f6">Result</a></td><td><a href="#classmavsdk_1_1_mission_1a0eaaeffe0354156b5abed892f0950bcc">cancel_mission_download</a> () const</td><td>Cancel an ongoing mission download.</td></tr><tr><td style="text-align:right;">void</td><td><a href="#classmavsdk_1_1_mission_1a31ca2fc6b9fe4802dbc3fbebad0bb5d7">start_mission_async</a> (const <a href="./classmavsdk_1_1_mission.html#classmavsdk_1_1_mission_1a30091e79f5b67ade138e5be9d65b6591">ResultCallback</a> callback)</td><td>Start the mission.</td></tr><tr><td style="text-align:right;"><a href="./classmavsdk_1_1_mission.html#classmavsdk_1_1_mission_1ab3114c63db76bdc37460939a1f3316f6">Result</a></td><td><a href="#classmavsdk_1_1_mission_1a927fecc7734810d01cc218153780e6e3">start_mission</a> () const</td><td>Start the mission.</td></tr><tr><td style="text-align:right;">void</td><td><a href="#classmavsdk_1_1_mission_1a4c5679369e215ef21901fc7ffe1ce32b">pause_mission_async</a> (const <a href="./classmavsdk_1_1_mission.html#classmavsdk_1_1_mission_1a30091e79f5b67ade138e5be9d65b6591">ResultCallback</a> callback)</td><td>Pause the mission.</td></tr><tr><td style="text-align:right;"><a href="./classmavsdk_1_1_mission.html#classmavsdk_1_1_mission_1ab3114c63db76bdc37460939a1f3316f6">Result</a></td><td><a href="#classmavsdk_1_1_mission_1ab569500d992d6d859c1c35052db07315">pause_mission</a> () const</td><td>Pause the mission.</td></tr><tr><td style="text-align:right;">void</td><td><a href="#classmavsdk_1_1_mission_1a51d04a808743915e3cac7f35fbd5038f">clear_mission_async</a> (const <a href="./classmavsdk_1_1_mission.html#classmavsdk_1_1_mission_1a30091e79f5b67ade138e5be9d65b6591">ResultCallback</a> callback)</td><td>Clear the mission saved on the vehicle.</td></tr><tr><td style="text-align:right;"><a href="./classmavsdk_1_1_mission.html#classmavsdk_1_1_mission_1ab3114c63db76bdc37460939a1f3316f6">Result</a></td><td><a href="#classmavsdk_1_1_mission_1a3c3f5eac6e864873f4bb0390d1ee9306">clear_mission</a> () const</td><td>Clear the mission saved on the vehicle.</td></tr><tr><td style="text-align:right;">void</td><td><a href="#classmavsdk_1_1_mission_1a81aa356215cb2131c2480dc121a6af7b">set_current_mission_item_async</a> (int32_t index, const <a href="./classmavsdk_1_1_mission.html#classmavsdk_1_1_mission_1a30091e79f5b67ade138e5be9d65b6591">ResultCallback</a> callback)</td><td>Sets the mission item index to go to.</td></tr><tr><td style="text-align:right;"><a href="./classmavsdk_1_1_mission.html#classmavsdk_1_1_mission_1ab3114c63db76bdc37460939a1f3316f6">Result</a></td><td><a href="#classmavsdk_1_1_mission_1a419397edcf63771ddd59a6af231bc8d2">set_current_mission_item</a> (int32_t index)const</td><td>Sets the mission item index to go to.</td></tr><tr><td style="text-align:right;">std::pair&lt; <a href="./classmavsdk_1_1_mission.html#classmavsdk_1_1_mission_1ab3114c63db76bdc37460939a1f3316f6">Result</a>, bool &gt;</td><td><a href="#classmavsdk_1_1_mission_1a8fe0296995ffd2130dceb338f6deb3cf">is_mission_finished</a> () const</td><td>Check if the mission has been finished.</td></tr><tr><td style="text-align:right;"><a href="./classmavsdk_1_1_mission.html#classmavsdk_1_1_mission_1aded0ba06c787ad2f30f401a30b240c8a">MissionProgressHandle</a></td><td><a href="#classmavsdk_1_1_mission_1ac6d3e78de0ea2e6c1db2eaa5f3418660">subscribe_mission_progress</a> (const <a href="./classmavsdk_1_1_mission.html#classmavsdk_1_1_mission_1a67e8d00b1b20affca59fd4338c34c0e2">MissionProgressCallback</a> &amp; callback)</td><td>Subscribe to mission progress updates.</td></tr><tr><td style="text-align:right;">void</td><td><a href="#classmavsdk_1_1_mission_1a2b8bc4dd210506a703afa926f8406880">unsubscribe_mission_progress</a> (<a href="./classmavsdk_1_1_mission.html#classmavsdk_1_1_mission_1aded0ba06c787ad2f30f401a30b240c8a">MissionProgressHandle</a> handle)</td><td>Unsubscribe from subscribe_mission_progress.</td></tr><tr><td style="text-align:right;"><a href="./structmavsdk_1_1_mission_1_1_mission_progress.html">MissionProgress</a></td><td><a href="#classmavsdk_1_1_mission_1a5570443e7c1f08cff1759980ff44b40e">mission_progress</a> () const</td><td>Poll for &#39;<a href="./structmavsdk_1_1_mission_1_1_mission_progress.html">MissionProgress</a>&#39; (blocking).</td></tr><tr><td style="text-align:right;">std::pair&lt; <a href="./classmavsdk_1_1_mission.html#classmavsdk_1_1_mission_1ab3114c63db76bdc37460939a1f3316f6">Result</a>, bool &gt;</td><td><a href="#classmavsdk_1_1_mission_1a15ecbb4a95da4d33b80a78b9d8ec722b">get_return_to_launch_after_mission</a> () const</td><td>Get whether to trigger Return-to-Launch (RTL) after mission is complete.</td></tr><tr><td style="text-align:right;"><a href="./classmavsdk_1_1_mission.html#classmavsdk_1_1_mission_1ab3114c63db76bdc37460939a1f3316f6">Result</a></td><td><a href="#classmavsdk_1_1_mission_1ab4adb09283b3fa64a8829f9a6e34cf37">set_return_to_launch_after_mission</a> (bool enable)const</td><td>Set whether to trigger Return-to-Launch (RTL) after the mission is complete.</td></tr><tr><td style="text-align:right;">const <a href="./classmavsdk_1_1_mission.html">Mission</a> &amp;</td><td><a href="#classmavsdk_1_1_mission_1a264bcda67c38e8e447ce36eee662924e">operator=</a> (const <a href="./classmavsdk_1_1_mission.html">Mission</a> &amp;)=delete</td><td>Equality operator (object is not copyable).</td></tr></tbody></table><h2 id="constructor-destructor-documentation" tabindex="-1">Constructor &amp; Destructor Documentation <a class="header-anchor" href="#constructor-destructor-documentation" aria-label="Permalink to &quot;Constructor &amp; Destructor Documentation&quot;">​</a></h2><h3 id="classmavsdk_1_1_mission_1ab02ae9aada51b483e45d88948fe62c29" tabindex="-1">Mission() <a class="header-anchor" href="#classmavsdk_1_1_mission_1ab02ae9aada51b483e45d88948fe62c29" aria-label="Permalink to &quot;Mission() {#classmavsdk_1_1_mission_1ab02ae9aada51b483e45d88948fe62c29}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Mission</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Mission</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(System </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">system)</span></span></code></pre></div><p>Constructor. Creates the plugin for a specific <a href="./classmavsdk_1_1_system.html">System</a>.</p><p>The plugin is typically created as shown below:</p><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">auto</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mission </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Mission</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(system);</span></span></code></pre></div><p><strong>Parameters</strong></p><ul><li><a href="./classmavsdk_1_1_system.html">System</a>&amp; <strong>system</strong> - The specific system associated with this plugin.</li></ul><h3 id="classmavsdk_1_1_mission_1a5222f05ac0c65c7455f19e136b8fcb22" tabindex="-1">Mission() <a class="header-anchor" href="#classmavsdk_1_1_mission_1a5222f05ac0c65c7455f19e136b8fcb22" aria-label="Permalink to &quot;Mission() {#classmavsdk_1_1_mission_1a5222f05ac0c65c7455f19e136b8fcb22}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Mission</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Mission</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::shared_ptr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> System </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> system)</span></span></code></pre></div><p>Constructor. Creates the plugin for a specific <a href="./classmavsdk_1_1_system.html">System</a>.</p><p>The plugin is typically created as shown below:</p><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">auto</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mission </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Mission</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(system);</span></span></code></pre></div><p><strong>Parameters</strong></p><ul><li>std::shared_ptr&lt; <a href="./classmavsdk_1_1_system.html">System</a> &gt; <strong>system</strong> - The specific system associated with this plugin.</li></ul><h3 id="classmavsdk_1_1_mission_1ab8ddd47439bbc63a0a6b175fdad0368e" tabindex="-1">~Mission() <a class="header-anchor" href="#classmavsdk_1_1_mission_1ab8ddd47439bbc63a0a6b175fdad0368e" aria-label="Permalink to &quot;~Mission() {#classmavsdk_1_1_mission_1ab8ddd47439bbc63a0a6b175fdad0368e}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Mission</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">~</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Mission</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">override</span></span></code></pre></div><p>Destructor (internal use only).</p><h3 id="classmavsdk_1_1_mission_1ab4a4a26254fdff0e3f3872f32479fe1c" tabindex="-1">Mission() <a class="header-anchor" href="#classmavsdk_1_1_mission_1ab4a4a26254fdff0e3f3872f32479fe1c" aria-label="Permalink to &quot;Mission() {#classmavsdk_1_1_mission_1ab4a4a26254fdff0e3f3872f32479fe1c}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Mission</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Mission</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Mission </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">other)</span></span></code></pre></div><p>Copy constructor.</p><p><strong>Parameters</strong></p><ul><li>const <a href="./classmavsdk_1_1_mission.html">Mission</a>&amp; <strong>other</strong> -</li></ul><h2 id="member-typdef-documentation" tabindex="-1">Member Typdef Documentation <a class="header-anchor" href="#member-typdef-documentation" aria-label="Permalink to &quot;Member Typdef Documentation&quot;">​</a></h2><h3 id="classmavsdk_1_1_mission_1a30091e79f5b67ade138e5be9d65b6591" tabindex="-1">typedef ResultCallback <a class="header-anchor" href="#classmavsdk_1_1_mission_1a30091e79f5b67ade138e5be9d65b6591" aria-label="Permalink to &quot;typedef ResultCallback {#classmavsdk_1_1_mission_1a30091e79f5b67ade138e5be9d65b6591}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Mission</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::ResultCallback </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::function</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Result)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><p>Callback type for asynchronous <a href="./classmavsdk_1_1_mission.html">Mission</a> calls.</p><h3 id="classmavsdk_1_1_mission_1a559c82c81b3b7694973da8a65af24837" tabindex="-1">typedef UploadMissionWithProgressCallback <a class="header-anchor" href="#classmavsdk_1_1_mission_1a559c82c81b3b7694973da8a65af24837" aria-label="Permalink to &quot;typedef UploadMissionWithProgressCallback {#classmavsdk_1_1_mission_1a559c82c81b3b7694973da8a65af24837}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Mission</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::UploadMissionWithProgressCallback </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::function</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Result, ProgressData)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><p>Callback type for upload_mission_with_progress_async.</p><h3 id="classmavsdk_1_1_mission_1af40f70b9b4c91aa280bf75fbfc333b3b" tabindex="-1">typedef DownloadMissionCallback <a class="header-anchor" href="#classmavsdk_1_1_mission_1af40f70b9b4c91aa280bf75fbfc333b3b" aria-label="Permalink to &quot;typedef DownloadMissionCallback {#classmavsdk_1_1_mission_1af40f70b9b4c91aa280bf75fbfc333b3b}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Mission</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::DownloadMissionCallback </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::function</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Result, MissionPlan)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><p>Callback type for download_mission_async.</p><h3 id="classmavsdk_1_1_mission_1ae73dbe775ceaba81183cebdaa1b6779e" tabindex="-1">typedef DownloadMissionWithProgressCallback <a class="header-anchor" href="#classmavsdk_1_1_mission_1ae73dbe775ceaba81183cebdaa1b6779e" aria-label="Permalink to &quot;typedef DownloadMissionWithProgressCallback {#classmavsdk_1_1_mission_1ae73dbe775ceaba81183cebdaa1b6779e}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Mission</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::DownloadMissionWithProgressCallback </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::function</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Result, ProgressDataOrMission)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><p>Callback type for download_mission_with_progress_async.</p><h3 id="classmavsdk_1_1_mission_1a67e8d00b1b20affca59fd4338c34c0e2" tabindex="-1">typedef MissionProgressCallback <a class="header-anchor" href="#classmavsdk_1_1_mission_1a67e8d00b1b20affca59fd4338c34c0e2" aria-label="Permalink to &quot;typedef MissionProgressCallback {#classmavsdk_1_1_mission_1a67e8d00b1b20affca59fd4338c34c0e2}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Mission</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::MissionProgressCallback </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::function</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(MissionProgress)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><p>Callback type for subscribe_mission_progress.</p><h3 id="classmavsdk_1_1_mission_1aded0ba06c787ad2f30f401a30b240c8a" tabindex="-1">typedef MissionProgressHandle <a class="header-anchor" href="#classmavsdk_1_1_mission_1aded0ba06c787ad2f30f401a30b240c8a" aria-label="Permalink to &quot;typedef MissionProgressHandle {#classmavsdk_1_1_mission_1aded0ba06c787ad2f30f401a30b240c8a}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Mission</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::MissionProgressHandle </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  Handle</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MissionProgress</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><p><a href="./classmavsdk_1_1_handle.html">Handle</a> type for subscribe_mission_progress.</p><h2 id="member-enumeration-documentation" tabindex="-1">Member Enumeration Documentation <a class="header-anchor" href="#member-enumeration-documentation" aria-label="Permalink to &quot;Member Enumeration Documentation&quot;">​</a></h2><h3 id="classmavsdk_1_1_mission_1ab3114c63db76bdc37460939a1f3316f6" tabindex="-1">enum Result <a class="header-anchor" href="#classmavsdk_1_1_mission_1ab3114c63db76bdc37460939a1f3316f6" aria-label="Permalink to &quot;enum Result {#classmavsdk_1_1_mission_1ab3114c63db76bdc37460939a1f3316f6}&quot;">​</a></h3><p>Possible results returned for action requests.</p><table tabindex="0"><thead><tr><th>Value</th><th>Description</th></tr></thead><tbody><tr><td><span id="classmavsdk_1_1_mission_1ab3114c63db76bdc37460939a1f3316f6a88183b946cc5f0e8c96b2e66e1c74a7e"></span> <code>Unknown</code></td><td>Unknown result.</td></tr><tr><td><span id="classmavsdk_1_1_mission_1ab3114c63db76bdc37460939a1f3316f6a505a83f220c02df2f85c3810cd9ceb38"></span> <code>Success</code></td><td>Request succeeded.</td></tr><tr><td><span id="classmavsdk_1_1_mission_1ab3114c63db76bdc37460939a1f3316f6a902b0d55fddef6f8d651fe1035b7d4bd"></span> <code>Error</code></td><td>Error.</td></tr><tr><td><span id="classmavsdk_1_1_mission_1ab3114c63db76bdc37460939a1f3316f6aecc3de82f27e8e7f65807c69a114efbe"></span> <code>TooManyMissionItems</code></td><td>Too many mission items in the mission.</td></tr><tr><td><span id="classmavsdk_1_1_mission_1ab3114c63db76bdc37460939a1f3316f6ad8a942ef2b04672adfafef0ad817a407"></span> <code>Busy</code></td><td>Vehicle is busy.</td></tr><tr><td><span id="classmavsdk_1_1_mission_1ab3114c63db76bdc37460939a1f3316f6ac85a251cc457840f1e032f1b733e9398"></span> <code>Timeout</code></td><td>Request timed out.</td></tr><tr><td><span id="classmavsdk_1_1_mission_1ab3114c63db76bdc37460939a1f3316f6a253ca7dd096ee0956cccee4d376cab8b"></span> <code>InvalidArgument</code></td><td>Invalid argument.</td></tr><tr><td><span id="classmavsdk_1_1_mission_1ab3114c63db76bdc37460939a1f3316f6ab4080bdf74febf04d578ff105cce9d3f"></span> <code>Unsupported</code></td><td><a href="./classmavsdk_1_1_mission.html">Mission</a> downloaded from the system is not supported.</td></tr><tr><td><span id="classmavsdk_1_1_mission_1ab3114c63db76bdc37460939a1f3316f6a6b0ce476dfc17eed72967386f52ede78"></span> <code>NoMissionAvailable</code></td><td>No mission available on the system.</td></tr><tr><td><span id="classmavsdk_1_1_mission_1ab3114c63db76bdc37460939a1f3316f6aefcaef698baace312f79a53019bd9cf4"></span> <code>UnsupportedMissionCmd</code></td><td>Unsupported mission command.</td></tr><tr><td><span id="classmavsdk_1_1_mission_1ab3114c63db76bdc37460939a1f3316f6a3465fd31285ebd60597cf59bff9db01a"></span> <code>TransferCancelled</code></td><td><a href="./classmavsdk_1_1_mission.html">Mission</a> transfer (upload or download) has been cancelled.</td></tr><tr><td><span id="classmavsdk_1_1_mission_1ab3114c63db76bdc37460939a1f3316f6a1119faf72ba0dfb23aeea644fed960ad"></span> <code>NoSystem</code></td><td>No system connected.</td></tr><tr><td><span id="classmavsdk_1_1_mission_1ab3114c63db76bdc37460939a1f3316f6a10ac3d04253ef7e1ddc73e6091c0cd55"></span> <code>Next</code></td><td>Intermediate message showing progress.</td></tr><tr><td><span id="classmavsdk_1_1_mission_1ab3114c63db76bdc37460939a1f3316f6a58d036b9b7f0e7eb38cfb90f1cc70a73"></span> <code>Denied</code></td><td>Request denied.</td></tr><tr><td><span id="classmavsdk_1_1_mission_1ab3114c63db76bdc37460939a1f3316f6aca3da8f495e4e628912a7798655da6c2"></span> <code>ProtocolError</code></td><td>There was a protocol error.</td></tr><tr><td><span id="classmavsdk_1_1_mission_1ab3114c63db76bdc37460939a1f3316f6a3f5f527103f3b11c1c271363c542432b"></span> <code>IntMessagesNotSupported</code></td><td>The system does not support the MISSION_INT protocol.</td></tr></tbody></table><h2 id="member-function-documentation" tabindex="-1">Member Function Documentation <a class="header-anchor" href="#member-function-documentation" aria-label="Permalink to &quot;Member Function Documentation&quot;">​</a></h2><h3 id="classmavsdk_1_1_mission_1a250fc4758d47ec12e025c327dc0eb482" tabindex="-1">upload_mission_async() <a class="header-anchor" href="#classmavsdk_1_1_mission_1a250fc4758d47ec12e025c327dc0eb482" aria-label="Permalink to &quot;upload_mission_async() {#classmavsdk_1_1_mission_1a250fc4758d47ec12e025c327dc0eb482}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Mission</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">upload_mission_async</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MissionPlan</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> mission_plan</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ResultCallback</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> callback</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Upload a list of mission items to the system.</p><p>The mission items are uploaded to a drone. Once uploaded the mission can be started and executed even if the connection is lost.</p><p>This function is non-blocking. See &#39;upload_mission&#39; for the blocking counterpart.</p><p><strong>Parameters</strong></p><ul><li><a href="./structmavsdk_1_1_mission_1_1_mission_plan.html">MissionPlan</a> <strong>mission_plan</strong> -</li><li>const <a href="./classmavsdk_1_1_mission.html#classmavsdk_1_1_mission_1a30091e79f5b67ade138e5be9d65b6591">ResultCallback</a> <strong>callback</strong> -</li></ul><h3 id="classmavsdk_1_1_mission_1a38274b1c1509375a182c44711ee9f7b1" tabindex="-1">upload_mission() <a class="header-anchor" href="#classmavsdk_1_1_mission_1a38274b1c1509375a182c44711ee9f7b1" aria-label="Permalink to &quot;upload_mission() {#classmavsdk_1_1_mission_1a38274b1c1509375a182c44711ee9f7b1}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Result</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Mission</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">upload_mission</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MissionPlan</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> mission_plan</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span></span></code></pre></div><p>Upload a list of mission items to the system.</p><p>The mission items are uploaded to a drone. Once uploaded the mission can be started and executed even if the connection is lost.</p><p>This function is blocking. See &#39;upload_mission_async&#39; for the non-blocking counterpart.</p><p><strong>Parameters</strong></p><ul><li><a href="./structmavsdk_1_1_mission_1_1_mission_plan.html">MissionPlan</a> <strong>mission_plan</strong> -</li></ul><p><strong>Returns</strong></p><p> <a href="./classmavsdk_1_1_mission.html#classmavsdk_1_1_mission_1ab3114c63db76bdc37460939a1f3316f6">Result</a> - Result of request.</p><h3 id="classmavsdk_1_1_mission_1a0faa587e80a59e8c40d7fc135650749c" tabindex="-1">upload_mission_with_progress_async() <a class="header-anchor" href="#classmavsdk_1_1_mission_1a0faa587e80a59e8c40d7fc135650749c" aria-label="Permalink to &quot;upload_mission_with_progress_async() {#classmavsdk_1_1_mission_1a0faa587e80a59e8c40d7fc135650749c}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Mission</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">upload_mission_with_progress_async</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MissionPlan</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> mission_plan</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> UploadMissionWithProgressCallback</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &amp;</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">callback</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Upload a list of mission items to the system and report upload progress.</p><p>The mission items are uploaded to a drone. Once uploaded the mission can be started and executed even if the connection is lost.</p><p><strong>Parameters</strong></p><ul><li><a href="./structmavsdk_1_1_mission_1_1_mission_plan.html">MissionPlan</a> <strong>mission_plan</strong> -</li><li>const <a href="./classmavsdk_1_1_mission.html#classmavsdk_1_1_mission_1a559c82c81b3b7694973da8a65af24837">UploadMissionWithProgressCallback</a>&amp; <strong>callback</strong> -</li></ul><h3 id="classmavsdk_1_1_mission_1ab82609426bef51202b2107d33412378c" tabindex="-1">cancel_mission_upload() <a class="header-anchor" href="#classmavsdk_1_1_mission_1ab82609426bef51202b2107d33412378c" aria-label="Permalink to &quot;cancel_mission_upload() {#classmavsdk_1_1_mission_1ab82609426bef51202b2107d33412378c}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Result</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Mission</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cancel_mission_upload</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span></span></code></pre></div><p>Cancel an ongoing mission upload.</p><p>This function is blocking.</p><p><strong>Returns</strong></p><p> <a href="./classmavsdk_1_1_mission.html#classmavsdk_1_1_mission_1ab3114c63db76bdc37460939a1f3316f6">Result</a> - Result of request.</p><h3 id="classmavsdk_1_1_mission_1a04e7e7074273b4591a820894c5c4ad43" tabindex="-1">download_mission_async() <a class="header-anchor" href="#classmavsdk_1_1_mission_1a04e7e7074273b4591a820894c5c4ad43" aria-label="Permalink to &quot;download_mission_async() {#classmavsdk_1_1_mission_1a04e7e7074273b4591a820894c5c4ad43}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Mission</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">download_mission_async</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DownloadMissionCallback</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> callback</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Download a list of mission items from the system (asynchronous).</p><p>Will fail if any of the downloaded mission items are not supported by the MAVSDK API.</p><p>This function is non-blocking. See &#39;download_mission&#39; for the blocking counterpart.</p><p><strong>Parameters</strong></p><ul><li>const <a href="./classmavsdk_1_1_mission.html#classmavsdk_1_1_mission_1af40f70b9b4c91aa280bf75fbfc333b3b">DownloadMissionCallback</a> <strong>callback</strong> -</li></ul><h3 id="classmavsdk_1_1_mission_1adef2001c0053c669bcc5522619ac90f9" tabindex="-1">download_mission() <a class="header-anchor" href="#classmavsdk_1_1_mission_1adef2001c0053c669bcc5522619ac90f9" aria-label="Permalink to &quot;download_mission() {#classmavsdk_1_1_mission_1adef2001c0053c669bcc5522619ac90f9}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pair</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Result</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Mission</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MissionPlan</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Mission</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">download_mission</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span></span></code></pre></div><p>Download a list of mission items from the system (asynchronous).</p><p>Will fail if any of the downloaded mission items are not supported by the MAVSDK API.</p><p>This function is blocking. See &#39;download_mission_async&#39; for the non-blocking counterpart.</p><p><strong>Returns</strong></p><p> std::pair&lt; <a href="./classmavsdk_1_1_mission.html#classmavsdk_1_1_mission_1ab3114c63db76bdc37460939a1f3316f6">Result</a>, <a href="./structmavsdk_1_1_mission_1_1_mission_plan.html">Mission::MissionPlan</a> &gt; - Result of request.</p><h3 id="classmavsdk_1_1_mission_1a5b6b93482f2599c08d75d27a31a4f1d9" tabindex="-1">download_mission_with_progress_async() <a class="header-anchor" href="#classmavsdk_1_1_mission_1a5b6b93482f2599c08d75d27a31a4f1d9" aria-label="Permalink to &quot;download_mission_with_progress_async() {#classmavsdk_1_1_mission_1a5b6b93482f2599c08d75d27a31a4f1d9}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Mission</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">download_mission_with_progress_async</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DownloadMissionWithProgressCallback</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &amp;</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">callback</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Download a list of mission items from the system (asynchronous) and report progress.</p><p>Will fail if any of the downloaded mission items are not supported by the MAVSDK API.</p><p><strong>Parameters</strong></p><ul><li>const <a href="./classmavsdk_1_1_mission.html#classmavsdk_1_1_mission_1ae73dbe775ceaba81183cebdaa1b6779e">DownloadMissionWithProgressCallback</a>&amp; <strong>callback</strong> -</li></ul><h3 id="classmavsdk_1_1_mission_1a0eaaeffe0354156b5abed892f0950bcc" tabindex="-1">cancel_mission_download() <a class="header-anchor" href="#classmavsdk_1_1_mission_1a0eaaeffe0354156b5abed892f0950bcc" aria-label="Permalink to &quot;cancel_mission_download() {#classmavsdk_1_1_mission_1a0eaaeffe0354156b5abed892f0950bcc}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Result</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Mission</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cancel_mission_download</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span></span></code></pre></div><p>Cancel an ongoing mission download.</p><p>This function is blocking.</p><p><strong>Returns</strong></p><p> <a href="./classmavsdk_1_1_mission.html#classmavsdk_1_1_mission_1ab3114c63db76bdc37460939a1f3316f6">Result</a> - Result of request.</p><h3 id="classmavsdk_1_1_mission_1a31ca2fc6b9fe4802dbc3fbebad0bb5d7" tabindex="-1">start_mission_async() <a class="header-anchor" href="#classmavsdk_1_1_mission_1a31ca2fc6b9fe4802dbc3fbebad0bb5d7" aria-label="Permalink to &quot;start_mission_async() {#classmavsdk_1_1_mission_1a31ca2fc6b9fe4802dbc3fbebad0bb5d7}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Mission</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">start_mission_async</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ResultCallback</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> callback</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Start the mission.</p><p>A mission must be uploaded to the vehicle before this can be called.</p><p>This function is non-blocking. See &#39;start_mission&#39; for the blocking counterpart.</p><p><strong>Parameters</strong></p><ul><li>const <a href="./classmavsdk_1_1_mission.html#classmavsdk_1_1_mission_1a30091e79f5b67ade138e5be9d65b6591">ResultCallback</a> <strong>callback</strong> -</li></ul><h3 id="classmavsdk_1_1_mission_1a927fecc7734810d01cc218153780e6e3" tabindex="-1">start_mission() <a class="header-anchor" href="#classmavsdk_1_1_mission_1a927fecc7734810d01cc218153780e6e3" aria-label="Permalink to &quot;start_mission() {#classmavsdk_1_1_mission_1a927fecc7734810d01cc218153780e6e3}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Result</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Mission</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">start_mission</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span></span></code></pre></div><p>Start the mission.</p><p>A mission must be uploaded to the vehicle before this can be called.</p><p>This function is blocking. See &#39;start_mission_async&#39; for the non-blocking counterpart.</p><p><strong>Returns</strong></p><p> <a href="./classmavsdk_1_1_mission.html#classmavsdk_1_1_mission_1ab3114c63db76bdc37460939a1f3316f6">Result</a> - Result of request.</p><h3 id="classmavsdk_1_1_mission_1a4c5679369e215ef21901fc7ffe1ce32b" tabindex="-1">pause_mission_async() <a class="header-anchor" href="#classmavsdk_1_1_mission_1a4c5679369e215ef21901fc7ffe1ce32b" aria-label="Permalink to &quot;pause_mission_async() {#classmavsdk_1_1_mission_1a4c5679369e215ef21901fc7ffe1ce32b}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Mission</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pause_mission_async</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ResultCallback</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> callback</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Pause the mission.</p><p>Pausing the mission puts the vehicle into <a href="https://docs.px4.io/en/flight_modes/hold.html" target="_blank" rel="noreferrer">HOLD mode</a>. A multicopter should just hover at the spot while a fixedwing vehicle should loiter around the location where it paused.</p><p>This function is non-blocking. See &#39;pause_mission&#39; for the blocking counterpart.</p><p><strong>Parameters</strong></p><ul><li>const <a href="./classmavsdk_1_1_mission.html#classmavsdk_1_1_mission_1a30091e79f5b67ade138e5be9d65b6591">ResultCallback</a> <strong>callback</strong> -</li></ul><h3 id="classmavsdk_1_1_mission_1ab569500d992d6d859c1c35052db07315" tabindex="-1">pause_mission() <a class="header-anchor" href="#classmavsdk_1_1_mission_1ab569500d992d6d859c1c35052db07315" aria-label="Permalink to &quot;pause_mission() {#classmavsdk_1_1_mission_1ab569500d992d6d859c1c35052db07315}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Result</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Mission</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pause_mission</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span></span></code></pre></div><p>Pause the mission.</p><p>Pausing the mission puts the vehicle into <a href="https://docs.px4.io/en/flight_modes/hold.html" target="_blank" rel="noreferrer">HOLD mode</a>. A multicopter should just hover at the spot while a fixedwing vehicle should loiter around the location where it paused.</p><p>This function is blocking. See &#39;pause_mission_async&#39; for the non-blocking counterpart.</p><p><strong>Returns</strong></p><p> <a href="./classmavsdk_1_1_mission.html#classmavsdk_1_1_mission_1ab3114c63db76bdc37460939a1f3316f6">Result</a> - Result of request.</p><h3 id="classmavsdk_1_1_mission_1a51d04a808743915e3cac7f35fbd5038f" tabindex="-1">clear_mission_async() <a class="header-anchor" href="#classmavsdk_1_1_mission_1a51d04a808743915e3cac7f35fbd5038f" aria-label="Permalink to &quot;clear_mission_async() {#classmavsdk_1_1_mission_1a51d04a808743915e3cac7f35fbd5038f}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Mission</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">clear_mission_async</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ResultCallback</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> callback</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Clear the mission saved on the vehicle.</p><p>This function is non-blocking. See &#39;clear_mission&#39; for the blocking counterpart.</p><p><strong>Parameters</strong></p><ul><li>const <a href="./classmavsdk_1_1_mission.html#classmavsdk_1_1_mission_1a30091e79f5b67ade138e5be9d65b6591">ResultCallback</a> <strong>callback</strong> -</li></ul><h3 id="classmavsdk_1_1_mission_1a3c3f5eac6e864873f4bb0390d1ee9306" tabindex="-1">clear_mission() <a class="header-anchor" href="#classmavsdk_1_1_mission_1a3c3f5eac6e864873f4bb0390d1ee9306" aria-label="Permalink to &quot;clear_mission() {#classmavsdk_1_1_mission_1a3c3f5eac6e864873f4bb0390d1ee9306}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Result</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Mission</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">clear_mission</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span></span></code></pre></div><p>Clear the mission saved on the vehicle.</p><p>This function is blocking. See &#39;clear_mission_async&#39; for the non-blocking counterpart.</p><p><strong>Returns</strong></p><p> <a href="./classmavsdk_1_1_mission.html#classmavsdk_1_1_mission_1ab3114c63db76bdc37460939a1f3316f6">Result</a> - Result of request.</p><h3 id="classmavsdk_1_1_mission_1a81aa356215cb2131c2480dc121a6af7b" tabindex="-1">set_current_mission_item_async() <a class="header-anchor" href="#classmavsdk_1_1_mission_1a81aa356215cb2131c2480dc121a6af7b" aria-label="Permalink to &quot;set_current_mission_item_async() {#classmavsdk_1_1_mission_1a81aa356215cb2131c2480dc121a6af7b}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Mission</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">set_current_mission_item_async</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int32_t</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> index</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ResultCallback</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> callback</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Sets the mission item index to go to.</p><p>By setting the current index to 0, the mission is restarted from the beginning. If it is set to a specific index of a mission item, the mission will be set to this item.</p><p>Note that this is not necessarily true for general missions using MAVLink if loop counters are used.</p><p>This function is non-blocking. See &#39;set_current_mission_item&#39; for the blocking counterpart.</p><p><strong>Parameters</strong></p><ul><li>int32_t <strong>index</strong> -</li><li>const <a href="./classmavsdk_1_1_mission.html#classmavsdk_1_1_mission_1a30091e79f5b67ade138e5be9d65b6591">ResultCallback</a> <strong>callback</strong> -</li></ul><h3 id="classmavsdk_1_1_mission_1a419397edcf63771ddd59a6af231bc8d2" tabindex="-1">set_current_mission_item() <a class="header-anchor" href="#classmavsdk_1_1_mission_1a419397edcf63771ddd59a6af231bc8d2" aria-label="Permalink to &quot;set_current_mission_item() {#classmavsdk_1_1_mission_1a419397edcf63771ddd59a6af231bc8d2}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Result</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Mission</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">set_current_mission_item</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int32_t</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> index</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span></span></code></pre></div><p>Sets the mission item index to go to.</p><p>By setting the current index to 0, the mission is restarted from the beginning. If it is set to a specific index of a mission item, the mission will be set to this item.</p><p>Note that this is not necessarily true for general missions using MAVLink if loop counters are used.</p><p>This function is blocking. See &#39;set_current_mission_item_async&#39; for the non-blocking counterpart.</p><p><strong>Parameters</strong></p><ul><li>int32_t <strong>index</strong> -</li></ul><p><strong>Returns</strong></p><p> <a href="./classmavsdk_1_1_mission.html#classmavsdk_1_1_mission_1ab3114c63db76bdc37460939a1f3316f6">Result</a> - Result of request.</p><h3 id="classmavsdk_1_1_mission_1a8fe0296995ffd2130dceb338f6deb3cf" tabindex="-1">is_mission_finished() <a class="header-anchor" href="#classmavsdk_1_1_mission_1a8fe0296995ffd2130dceb338f6deb3cf" aria-label="Permalink to &quot;is_mission_finished() {#classmavsdk_1_1_mission_1a8fe0296995ffd2130dceb338f6deb3cf}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pair</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Result</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">bool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Mission</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">is_mission_finished</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span></span></code></pre></div><p>Check if the mission has been finished.</p><p>This function is blocking.</p><p><strong>Returns</strong></p><p> std::pair&lt; <a href="./classmavsdk_1_1_mission.html#classmavsdk_1_1_mission_1ab3114c63db76bdc37460939a1f3316f6">Result</a>, bool &gt; - Result of request.</p><h3 id="classmavsdk_1_1_mission_1ac6d3e78de0ea2e6c1db2eaa5f3418660" tabindex="-1">subscribe_mission_progress() <a class="header-anchor" href="#classmavsdk_1_1_mission_1ac6d3e78de0ea2e6c1db2eaa5f3418660" aria-label="Permalink to &quot;subscribe_mission_progress() {#classmavsdk_1_1_mission_1ac6d3e78de0ea2e6c1db2eaa5f3418660}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MissionProgressHandle</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Mission</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">subscribe_mission_progress</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> MissionProgressCallback</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &amp;</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">callback</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Subscribe to mission progress updates.</p><p><strong>Parameters</strong></p><ul><li>const <a href="./classmavsdk_1_1_mission.html#classmavsdk_1_1_mission_1a67e8d00b1b20affca59fd4338c34c0e2">MissionProgressCallback</a>&amp; <strong>callback</strong> -</li></ul><p><strong>Returns</strong></p><p> <a href="./classmavsdk_1_1_mission.html#classmavsdk_1_1_mission_1aded0ba06c787ad2f30f401a30b240c8a">MissionProgressHandle</a> -</p><h3 id="classmavsdk_1_1_mission_1a2b8bc4dd210506a703afa926f8406880" tabindex="-1">unsubscribe_mission_progress() <a class="header-anchor" href="#classmavsdk_1_1_mission_1a2b8bc4dd210506a703afa926f8406880" aria-label="Permalink to &quot;unsubscribe_mission_progress() {#classmavsdk_1_1_mission_1a2b8bc4dd210506a703afa926f8406880}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Mission</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">unsubscribe_mission_progress</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MissionProgressHandle</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> handle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Unsubscribe from subscribe_mission_progress.</p><p><strong>Parameters</strong></p><ul><li><a href="./classmavsdk_1_1_mission.html#classmavsdk_1_1_mission_1aded0ba06c787ad2f30f401a30b240c8a">MissionProgressHandle</a> <strong>handle</strong> -</li></ul><h3 id="classmavsdk_1_1_mission_1a5570443e7c1f08cff1759980ff44b40e" tabindex="-1">mission_progress() <a class="header-anchor" href="#classmavsdk_1_1_mission_1a5570443e7c1f08cff1759980ff44b40e" aria-label="Permalink to &quot;mission_progress() {#classmavsdk_1_1_mission_1a5570443e7c1f08cff1759980ff44b40e}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MissionProgress</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Mission</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mission_progress</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span></span></code></pre></div><p>Poll for &#39;<a href="./structmavsdk_1_1_mission_1_1_mission_progress.html">MissionProgress</a>&#39; (blocking).</p><p><strong>Returns</strong></p><p> <a href="./structmavsdk_1_1_mission_1_1_mission_progress.html">MissionProgress</a> - One <a href="./structmavsdk_1_1_mission_1_1_mission_progress.html">MissionProgress</a> update.</p><h3 id="classmavsdk_1_1_mission_1a15ecbb4a95da4d33b80a78b9d8ec722b" tabindex="-1">get_return_to_launch_after_mission() <a class="header-anchor" href="#classmavsdk_1_1_mission_1a15ecbb4a95da4d33b80a78b9d8ec722b" aria-label="Permalink to &quot;get_return_to_launch_after_mission() {#classmavsdk_1_1_mission_1a15ecbb4a95da4d33b80a78b9d8ec722b}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pair</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Result</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">bool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Mission</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get_return_to_launch_after_mission</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span></span></code></pre></div><p>Get whether to trigger Return-to-Launch (RTL) after mission is complete.</p><p>Before getting this option, it needs to be set, or a mission needs to be downloaded.</p><p>This function is blocking.</p><p><strong>Returns</strong></p><p> std::pair&lt; <a href="./classmavsdk_1_1_mission.html#classmavsdk_1_1_mission_1ab3114c63db76bdc37460939a1f3316f6">Result</a>, bool &gt; - Result of request.</p><h3 id="classmavsdk_1_1_mission_1ab4adb09283b3fa64a8829f9a6e34cf37" tabindex="-1">set_return_to_launch_after_mission() <a class="header-anchor" href="#classmavsdk_1_1_mission_1ab4adb09283b3fa64a8829f9a6e34cf37" aria-label="Permalink to &quot;set_return_to_launch_after_mission() {#classmavsdk_1_1_mission_1ab4adb09283b3fa64a8829f9a6e34cf37}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Result</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Mission</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">set_return_to_launch_after_mission</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">bool</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> enable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span></span></code></pre></div><p>Set whether to trigger Return-to-Launch (RTL) after the mission is complete.</p><p>This will only take effect for the next mission upload, meaning that the mission may have to be uploaded again.</p><p>This function is blocking.</p><p><strong>Parameters</strong></p><ul><li>bool <strong>enable</strong> -</li></ul><p><strong>Returns</strong></p><p> <a href="./classmavsdk_1_1_mission.html#classmavsdk_1_1_mission_1ab3114c63db76bdc37460939a1f3316f6">Result</a> - Result of request.</p><h3 id="classmavsdk_1_1_mission_1a264bcda67c38e8e447ce36eee662924e" tabindex="-1">operator=() <a class="header-anchor" href="#classmavsdk_1_1_mission_1a264bcda67c38e8e447ce36eee662924e" aria-label="Permalink to &quot;operator=() {#classmavsdk_1_1_mission_1a264bcda67c38e8e447ce36eee662924e}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Mission</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &amp;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Mission</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">operator</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Mission</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=delete</span></span></code></pre></div><p>Equality operator (object is not copyable).</p><p><strong>Parameters</strong></p><ul><li>const <a href="./classmavsdk_1_1_mission.html">Mission</a>&amp; -</li></ul><p><strong>Returns</strong></p><p> const <a href="./classmavsdk_1_1_mission.html">Mission</a> &amp; -</p>',219)]))}const _=a(n,[["render",l]]);export{k as __pageData,_ as default};
