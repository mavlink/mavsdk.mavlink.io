import{_ as s,c as a,al as e,o as t}from"./chunks/framework.BVh3rIuO.js";const c=JSON.parse('{"title":"Building MAVSDK on Linux","description":"","frontmatter":{"github_branch":"main"},"headers":[],"relativePath":"en/cpp/guide/build_linux.md","filePath":"en/cpp/guide/build_linux.md"}'),n={name:"en/cpp/guide/build_linux.md"};function l(h,i,d,o,p,r){return t(),a("div",null,i[0]||(i[0]=[e(`<h1 id="building-mavsdk-on-linux" tabindex="-1">Building MAVSDK on Linux <a class="header-anchor" href="#building-mavsdk-on-linux" aria-label="Permalink to &quot;Building MAVSDK on Linux&quot;">​</a></h1><p>This guide explains how to build MAVSDK from source on Linux systems.</p><h2 id="requirements" tabindex="-1">Requirements <a class="header-anchor" href="#requirements" aria-label="Permalink to &quot;Requirements&quot;">​</a></h2><p>The build requirements are git, cmake, and a C++ compiler (GCC or Clang), and python.</p><h3 id="ubuntu" tabindex="-1">Ubuntu <a class="header-anchor" href="#ubuntu" aria-label="Permalink to &quot;Ubuntu&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt-get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt-get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build-essential</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cmake</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> python3</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> python3-pip</span></span></code></pre></div><h3 id="fedora" tabindex="-1">Fedora <a class="header-anchor" href="#fedora" aria-label="Permalink to &quot;Fedora&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dnf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dnf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> groupinstall</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Development Tools&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Development Libraries&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dnf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cmake</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git</span></span></code></pre></div><h2 id="getting-the-source" tabindex="-1">Getting the Source <a class="header-anchor" href="#getting-the-source" aria-label="Permalink to &quot;Getting the Source&quot;">​</a></h2><p>Download the source using git:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/mavlink/MAVSDK.git</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> MAVSDK</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> submodule</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --init</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --recursive</span></span></code></pre></div><h2 id="building-the-mavsdk-library-on-linux" tabindex="-1">Building the MAVSDK library on Linux <a class="header-anchor" href="#building-the-mavsdk-library-on-linux" aria-label="Permalink to &quot;Building the MAVSDK library on Linux&quot;">​</a></h2><h3 id="debug-build" tabindex="-1">Debug Build <a class="header-anchor" href="#debug-build" aria-label="Permalink to &quot;Debug Build&quot;">​</a></h3><p>For development, use the debug build:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cmake</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -DCMAKE_BUILD_TYPE=Debug</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -Bbuild</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -S.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cmake</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --build</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -j8</span></span></code></pre></div><h3 id="release-build" tabindex="-1">Release Build <a class="header-anchor" href="#release-build" aria-label="Permalink to &quot;Release Build&quot;">​</a></h3><p>For production use, build with optimizations enabled:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cmake</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -DCMAKE_BUILD_TYPE=Release</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -Bbuild</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -S.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cmake</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --build</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -j8</span></span></code></pre></div><h2 id="installation" tabindex="-1">Installation <a class="header-anchor" href="#installation" aria-label="Permalink to &quot;Installation&quot;">​</a></h2><h3 id="system-wide-installation" tabindex="-1">System-wide Installation <a class="header-anchor" href="#system-wide-installation" aria-label="Permalink to &quot;System-wide Installation&quot;">​</a></h3><p>To install system-wide in <code>/usr/local</code>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cmake</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --build</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --target</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ldconfig</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # Update linker cache</span></span></code></pre></div><h3 id="local-installation" tabindex="-1">Local Installation <a class="header-anchor" href="#local-installation" aria-label="Permalink to &quot;Local Installation&quot;">​</a></h3><p>To install to a custom location, e.g. <code>install</code></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cmake</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -DCMAKE_BUILD_TYPE=Release</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -DCMAKE_INSTALL_PREFIX=install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -Bbuild</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -S.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cmake</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --build</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --target</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span></code></pre></div><h2 id="build-mavsdk-server-binary-on-linux" tabindex="-1">Build mavsdk_server binary on Linux <a class="header-anchor" href="#build-mavsdk-server-binary-on-linux" aria-label="Permalink to &quot;Build mavsdk_server binary on Linux&quot;">​</a></h2><p>Language wrappers for MAVSDK other than C++ connect to the MAVSDK C++ core using gRPC. This gRPC server around the MAVSDK C++ library is called mavsdk_server (in the past it was referred to as the backend).</p><p>For more information about the architecture, also see <a href="./../contributing/autogen.html">how the auto-generation works</a>.</p><p>In order to include the mavsdk_server in the build, add <code>-DBUILD_MAVSDK_SERVER=ON</code>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cmake</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -DCMAKE_BUILD_TYPE=Release</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -DBUILD_MAVSDK_SERVER=ON</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -Bbuild</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -S.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cmake</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --build</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -j8</span></span></code></pre></div><h2 id="build-options" tabindex="-1">Build Options <a class="header-anchor" href="#build-options" aria-label="Permalink to &quot;Build Options&quot;">​</a></h2><p>During the configure step you can set various flags using <code>-DFLAG=Value</code>:</p><ul><li><code>CMAKE_BUILD_TYPE</code>: Choose between <code>Debug</code>, <code>Release</code>, or <code>RelWithDebInfo</code> (optimizations and debug symbols)</li><li><code>CMAKE_INSTALL_PREFIX</code>: Specify directory to install library artifacts</li><li><code>BUILD_SHARED_LIBS</code>: Set to <code>ON</code> for dynamic libraries (.so), <code>OFF</code> for static libraries (.a)</li><li><code>SUPERBUILD</code>: Set to <code>OFF</code> to use system dependencies instead of third party dependencies</li><li><code>CMAKE_PREFIX_PATH</code>: Set path where dependencies can be found if <code>SUPERBUILD</code> is <code>OFF</code></li><li><code>BUILD_MAVSDK_SERVER</code>: Set to <code>ON</code> to build mavsdk_server</li><li><code>BUILD_WITHOUT_CURL</code>: Set to <code>ON</code> to build without CURL support</li><li><code>ASAN</code>: Set to <code>ON</code> to enable address sanitizer</li><li><code>UBSAN</code>: Set to <code>ON</code> to enable undefined behavior sanitizer</li><li><code>LSAN</code>: Set to <code>ON</code> to enable leak sanitizer</li><li><code>WERROR</code>: Set to <code>ON</code> to treat warnings as errors</li></ul><h2 id="troubleshooting" tabindex="-1">Troubleshooting <a class="header-anchor" href="#troubleshooting" aria-label="Permalink to &quot;Troubleshooting&quot;">​</a></h2><h3 id="git-submodules-out-of-date" tabindex="-1">Git Submodules Out of Date <a class="header-anchor" href="#git-submodules-out-of-date" aria-label="Permalink to &quot;Git Submodules Out of Date&quot;">​</a></h3><p>If you encounter build issues, try updating the submodules:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> submodule</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --recursive</span></span></code></pre></div><h3 id="undefined-references" tabindex="-1">Undefined References <a class="header-anchor" href="#undefined-references" aria-label="Permalink to &quot;Undefined References&quot;">​</a></h3><p>If you get undefined reference errors after installation, update the linker cache:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ldconfig</span></span></code></pre></div><p>And try a clean build by wiping the build directory:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span></span></code></pre></div>`,42)]))}const u=s(n,[["render",l]]);export{c as __pageData,u as default};
