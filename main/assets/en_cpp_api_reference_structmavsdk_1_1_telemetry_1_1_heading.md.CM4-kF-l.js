import{_ as a,c as t,al as i,o as s}from"./chunks/framework.BVh3rIuO.js";const o=JSON.parse('{"title":"mavsdk::Telemetry::Heading Struct Reference","description":"","frontmatter":{"github_branch":"main"},"headers":[],"relativePath":"en/cpp/api_reference/structmavsdk_1_1_telemetry_1_1_heading.md","filePath":"en/cpp/api_reference/structmavsdk_1_1_telemetry_1_1_heading.md"}'),d={name:"en/cpp/api_reference/structmavsdk_1_1_telemetry_1_1_heading.md"};function r(n,e,_,l,c,h){return s(),t("div",null,e[0]||(e[0]=[i('<h1 id="mavsdk-telemetry-heading-struct-reference" tabindex="-1">mavsdk::Telemetry::Heading Struct Reference <a class="header-anchor" href="#mavsdk-telemetry-heading-struct-reference" aria-label="Permalink to &quot;mavsdk::Telemetry::Heading Struct Reference&quot;">​</a></h1><p><code>#include: telemetry.h</code></p><hr><p><a href="./structmavsdk_1_1_telemetry_1_1_heading.html">Heading</a> type used for global position.</p><h2 id="data-fields" tabindex="-1">Data Fields <a class="header-anchor" href="#data-fields" aria-label="Permalink to &quot;Data Fields&quot;">​</a></h2><p>double <a href="#structmavsdk_1_1_telemetry_1_1_heading_1af5dc43d082cf706bc2a4ce26c3d2f453">heading_deg</a> {double(NAN)} - <a href="./structmavsdk_1_1_telemetry_1_1_heading.html">Heading</a> in degrees (range: 0 to +360)</p><h2 id="field-documentation" tabindex="-1">Field Documentation <a class="header-anchor" href="#field-documentation" aria-label="Permalink to &quot;Field Documentation&quot;">​</a></h2><h3 id="structmavsdk_1_1_telemetry_1_1_heading_1af5dc43d082cf706bc2a4ce26c3d2f453" tabindex="-1">heading_deg <a class="header-anchor" href="#structmavsdk_1_1_telemetry_1_1_heading_1af5dc43d082cf706bc2a4ce26c3d2f453" aria-label="Permalink to &quot;heading_deg {#structmavsdk_1_1_telemetry_1_1_heading_1af5dc43d082cf706bc2a4ce26c3d2f453}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">double</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Telemetry</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Heading</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::heading_deg {</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">double</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(NAN)}</span></span></code></pre></div><p><a href="./structmavsdk_1_1_telemetry_1_1_heading.html">Heading</a> in degrees (range: 0 to +360)</p>',10)]))}const m=a(d,[["render",r]]);export{o as __pageData,m as default};
