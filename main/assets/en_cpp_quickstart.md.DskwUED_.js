import{_ as e,c as t,al as s,o as n}from"./chunks/framework.BVh3rIuO.js";const u=JSON.parse('{"title":"C++ QuickStart","description":"","frontmatter":{"github_branch":"main"},"headers":[],"relativePath":"en/cpp/quickstart.md","filePath":"en/cpp/quickstart.md"}'),i={name:"en/cpp/quickstart.md"};function l(o,a,r,p,d,h){return n(),t("div",null,a[0]||(a[0]=[s(`<h1 id="c-quickstart" tabindex="-1">C++ QuickStart <a class="header-anchor" href="#c-quickstart" aria-label="Permalink to &quot;C++ QuickStart&quot;">​</a></h1><p>This quickstart shows you how to build and run a simple MAVSDK C++ example application against a simulated vehicle, and observe the operation using the console and in a ground station.</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>MAVSDK is essentially a C++ library (or rather multiple library files) that you can include and link in your C++ application.</p></div><h2 id="install-mavsdk-library" tabindex="-1">Install MAVSDK library <a class="header-anchor" href="#install-mavsdk-library" aria-label="Permalink to &quot;Install MAVSDK library&quot;">​</a></h2><h3 id="linux" tabindex="-1">Linux <a class="header-anchor" href="#linux" aria-label="Permalink to &quot;Linux&quot;">​</a></h3><p><strong>Ubuntu</strong></p><p>If you have an older version already installed remove that first:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sudo apt remove mavsdk</span></span></code></pre></div><p>The prebuilt C++ library can be downloaded as a <strong>.deb</strong> from <a href="https://github.com/mavlink/MAVSDK/releases" target="_blank" rel="noreferrer">releases</a>, e.g.:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>wget https://github.com/mavlink/MAVSDK/releases/download/v2.6.0/libmavsdk-dev_2.6.0_ubuntu22.04_amd64.deb</span></span>
<span class="line"><span>sudo dpkg -i libmavsdk-dev_2.6.0_ubuntu22.04_amd64.deb</span></span></code></pre></div><h3 id="macos" tabindex="-1">macOS <a class="header-anchor" href="#macos" aria-label="Permalink to &quot;macOS&quot;">​</a></h3><p>Install <a href="https://brew.sh/" target="_blank" rel="noreferrer">Homebrew</a> and use it to install the library:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>brew install mavsdk</span></span></code></pre></div><h3 id="windows" tabindex="-1">Windows <a class="header-anchor" href="#windows" aria-label="Permalink to &quot;Windows&quot;">​</a></h3><p>For Windows you can download the <strong>mavsdk-windows-x64-release.zip</strong> file from <a href="https://github.com/mavlink/MAVSDK/releases" target="_blank" rel="noreferrer">MAVSDK releases</a> containing the headers and library and extract it locally (see <a href="./guide/toolchain.html#sdk_local_install">information how to use a locally installed library</a>).</p><p>For more detailed instructions or other platforms check out the <a href="./guide/installation.html">installation notes</a>.</p><h2 id="simulator" tabindex="-1">Setting up a Simulator <a class="header-anchor" href="#simulator" aria-label="Permalink to &quot;Setting up a Simulator {#simulator}&quot;">​</a></h2><p>The easiest way to try out MAVSDK is to run one of the MAVSDK examples against a simulated version of the vehicle.</p><p>To set up and run the PX4 simulator, you need to either <a href="https://docs.px4.io/master/en/dev_setup/dev_env.html" target="_blank" rel="noreferrer">set up the PX4 SITL developer environment</a>.</p><p>Or use a <a href="https://github.com/JonasVautherin/px4-gazebo-headless" target="_blank" rel="noreferrer">pre-built docker container to run PX4 and the simulator</a>:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>docker run --rm -it jonasvautherin/px4-gazebo-headless:1.11.0</span></span></code></pre></div><h2 id="install-qgroundcontrol" tabindex="-1">Install QGroundControl <a class="header-anchor" href="#install-qgroundcontrol" aria-label="Permalink to &quot;Install QGroundControl&quot;">​</a></h2><p>You can use <em>QGroundControl</em> to connect the simulator and observe vehicle movement and behaviour while the examples are running. <em>QGroundControl</em> will automatically connect to the PX4 simulation as soon as it is started.</p><p>See <a href="https://docs.qgroundcontrol.com/en/getting_started/download_and_install.html" target="_blank" rel="noreferrer">QGroundControl &gt; Download and Install</a> for information about setting up <em>QGroundControl</em> on your platform.</p><h2 id="build_examples" tabindex="-1">Build and Try Example <a class="header-anchor" href="#build_examples" aria-label="Permalink to &quot;Build and Try Example {#build_examples}&quot;">​</a></h2><p>The examples are stored as part of the projects source code. Get them using <em>git</em> in a terminal:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>git clone https://github.com/mavlink/MAVSDK.git --recursive</span></span>
<span class="line"><span>cd MAVSDK</span></span></code></pre></div><p>The examples can be found in the examples directory:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>cd examples</span></span></code></pre></div><p>To build the takeoff and land example, you can do:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> takeoff_and_land/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cmake</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -Bbuild</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -H.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cmake</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --build</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -j4</span></span></code></pre></div><h2 id="running_the_examples" tabindex="-1">Running an Example <a class="header-anchor" href="#running_the_examples" aria-label="Permalink to &quot;Running an Example {#running_the_examples}&quot;">​</a></h2><p>First start PX4 in SITL (Simulation) and <em>QGroundControl</em> as described above.</p><p>Then run the example app (from the <strong>example/takeoff_land/build</strong> directory) as shown:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">build/takeoff_and_land</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> udp://:14540</span></span></code></pre></div><p>The MAVSDK application should connect to PX4, and you will be able to observe the example running in the SDK terminal, SITL terminal, and/or <em>QGroundControl</em>. The expected behaviour is shown here: <a href="./examples/takeoff_and_land.html">Example: Takeoff and Land</a>.</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>The first argument above is the connection string (<code>udp://:14540</code>). This is the standard PX4 UDP port for connecting to offboard APIs (also see <a href="./guide/connections.html">Connecting to Systems</a>).</p></div><h2 id="next-steps" tabindex="-1">Next Steps <a class="header-anchor" href="#next-steps" aria-label="Permalink to &quot;Next Steps&quot;">​</a></h2><p>Once MAVSDK is installed we recommend you:</p><ul><li>Try the <a href="./examples/">other examples</a></li><li>See how to <a href="./guide/toolchain.html">write your own application</a> in C++.</li><li>Browse the <a href="./api_reference/">API reference</a> to get an overview of the functionality.</li></ul>`,40)]))}const m=e(i,[["render",l]]);export{u as __pageData,m as default};
