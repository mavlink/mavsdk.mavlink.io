import{_ as a,c as e,al as t,o as s}from"./chunks/framework.BVh3rIuO.js";const l=JSON.parse('{"title":"mavsdk::Info::Identification Struct Reference","description":"","frontmatter":{"github_branch":"main"},"headers":[],"relativePath":"en/cpp/api_reference/structmavsdk_1_1_info_1_1_identification.md","filePath":"en/cpp/api_reference/structmavsdk_1_1_info_1_1_identification.md"}'),n={name:"en/cpp/api_reference/structmavsdk_1_1_info_1_1_identification.md"};function d(r,i,o,c,_,h){return s(),e("div",null,i[0]||(i[0]=[t('<h1 id="mavsdk-info-identification-struct-reference" tabindex="-1">mavsdk::Info::Identification Struct Reference <a class="header-anchor" href="#mavsdk-info-identification-struct-reference" aria-label="Permalink to &quot;mavsdk::Info::Identification Struct Reference&quot;">​</a></h1><p><code>#include: info.h</code></p><hr><p><a href="./classmavsdk_1_1_system.html">System</a> identification.</p><h2 id="data-fields" tabindex="-1">Data Fields <a class="header-anchor" href="#data-fields" aria-label="Permalink to &quot;Data Fields&quot;">​</a></h2><p>std::string <a href="#structmavsdk_1_1_info_1_1_identification_1a68be9823aae193b5473191d287b5e385">hardware_uid</a> {} - UID of the hardware. This refers to uid2 of MAVLink. If the system does not support uid2 yet, this is all zeros.</p><p>uint64_t <a href="#structmavsdk_1_1_info_1_1_identification_1a2429c1ffc3fbda0d55e85fa5a6f79dc1">legacy_uid</a> {} - Legacy UID of the hardware, referred to as uid in MAVLink (formerly exposed during system discovery as UUID).</p><h2 id="field-documentation" tabindex="-1">Field Documentation <a class="header-anchor" href="#field-documentation" aria-label="Permalink to &quot;Field Documentation&quot;">​</a></h2><h3 id="structmavsdk_1_1_info_1_1_identification_1a68be9823aae193b5473191d287b5e385" tabindex="-1">hardware_uid <a class="header-anchor" href="#structmavsdk_1_1_info_1_1_identification_1a68be9823aae193b5473191d287b5e385" aria-label="Permalink to &quot;hardware_uid {#structmavsdk_1_1_info_1_1_identification_1a68be9823aae193b5473191d287b5e385}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::string </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Info</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Identification</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::hardware_uid {}</span></span></code></pre></div><p>UID of the hardware. This refers to uid2 of MAVLink. If the system does not support uid2 yet, this is all zeros.</p><h3 id="structmavsdk_1_1_info_1_1_identification_1a2429c1ffc3fbda0d55e85fa5a6f79dc1" tabindex="-1">legacy_uid <a class="header-anchor" href="#structmavsdk_1_1_info_1_1_identification_1a2429c1ffc3fbda0d55e85fa5a6f79dc1" aria-label="Permalink to &quot;legacy_uid {#structmavsdk_1_1_info_1_1_identification_1a2429c1ffc3fbda0d55e85fa5a6f79dc1}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uint64_t</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Info</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Identification</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::legacy_uid {}</span></span></code></pre></div><p>Legacy UID of the hardware, referred to as uid in MAVLink (formerly exposed during system discovery as UUID).</p>',14)]))}const p=a(n,[["render",d]]);export{l as __pageData,p as default};
