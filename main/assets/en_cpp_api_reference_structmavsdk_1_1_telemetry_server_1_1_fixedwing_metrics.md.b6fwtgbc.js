import{_ as s,c as t,al as i,o as a}from"./chunks/framework.BVh3rIuO.js";const k=JSON.parse('{"title":"mavsdk::TelemetryServer::FixedwingMetrics Struct Reference","description":"","frontmatter":{"github_branch":"main"},"headers":[],"relativePath":"en/cpp/api_reference/structmavsdk_1_1_telemetry_server_1_1_fixedwing_metrics.md","filePath":"en/cpp/api_reference/structmavsdk_1_1_telemetry_server_1_1_fixedwing_metrics.md"}'),r={name:"en/cpp/api_reference/structmavsdk_1_1_telemetry_server_1_1_fixedwing_metrics.md"};function _(n,e,d,l,c,p){return a(),t("div",null,e[0]||(e[0]=[i('<h1 id="mavsdk-telemetryserver-fixedwingmetrics-struct-reference" tabindex="-1">mavsdk::TelemetryServer::FixedwingMetrics Struct Reference <a class="header-anchor" href="#mavsdk-telemetryserver-fixedwingmetrics-struct-reference" aria-label="Permalink to &quot;mavsdk::TelemetryServer::FixedwingMetrics Struct Reference&quot;">​</a></h1><p><code>#include: telemetry_server.h</code></p><hr><p><a href="./structmavsdk_1_1_telemetry_server_1_1_fixedwing_metrics.html">FixedwingMetrics</a> message type.</p><h2 id="data-fields" tabindex="-1">Data Fields <a class="header-anchor" href="#data-fields" aria-label="Permalink to &quot;Data Fields&quot;">​</a></h2><p>float <a href="#structmavsdk_1_1_telemetry_server_1_1_fixedwing_metrics_1ac93b4a14fbb25992c7bd30ef109c28ff">airspeed_m_s</a> { float(NAN)} - Current indicated airspeed (IAS) in metres per second.</p><p>float <a href="#structmavsdk_1_1_telemetry_server_1_1_fixedwing_metrics_1a98714b66349e101105e6746903bbfd30">throttle_percentage</a> {float(NAN)} - Current throttle setting (0 to 100)</p><p>float <a href="#structmavsdk_1_1_telemetry_server_1_1_fixedwing_metrics_1a8486ccc7e96add636a228399a74b1019">climb_rate_m_s</a> {float(NAN)} - Current climb rate in metres per second.</p><h2 id="field-documentation" tabindex="-1">Field Documentation <a class="header-anchor" href="#field-documentation" aria-label="Permalink to &quot;Field Documentation&quot;">​</a></h2><h3 id="structmavsdk_1_1_telemetry_server_1_1_fixedwing_metrics_1ac93b4a14fbb25992c7bd30ef109c28ff" tabindex="-1">airspeed_m_s <a class="header-anchor" href="#structmavsdk_1_1_telemetry_server_1_1_fixedwing_metrics_1ac93b4a14fbb25992c7bd30ef109c28ff" aria-label="Permalink to &quot;airspeed_m_s {#structmavsdk_1_1_telemetry_server_1_1_fixedwing_metrics_1ac93b4a14fbb25992c7bd30ef109c28ff}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">float</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">TelemetryServer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">FixedwingMetrics</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::airspeed_m_s { </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(NAN)}</span></span></code></pre></div><p>Current indicated airspeed (IAS) in metres per second.</p><h3 id="structmavsdk_1_1_telemetry_server_1_1_fixedwing_metrics_1a98714b66349e101105e6746903bbfd30" tabindex="-1">throttle_percentage <a class="header-anchor" href="#structmavsdk_1_1_telemetry_server_1_1_fixedwing_metrics_1a98714b66349e101105e6746903bbfd30" aria-label="Permalink to &quot;throttle_percentage {#structmavsdk_1_1_telemetry_server_1_1_fixedwing_metrics_1a98714b66349e101105e6746903bbfd30}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">float</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">TelemetryServer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">FixedwingMetrics</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::throttle_percentage {</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(NAN)}</span></span></code></pre></div><p>Current throttle setting (0 to 100)</p><h3 id="structmavsdk_1_1_telemetry_server_1_1_fixedwing_metrics_1a8486ccc7e96add636a228399a74b1019" tabindex="-1">climb_rate_m_s <a class="header-anchor" href="#structmavsdk_1_1_telemetry_server_1_1_fixedwing_metrics_1a8486ccc7e96add636a228399a74b1019" aria-label="Permalink to &quot;climb_rate_m_s {#structmavsdk_1_1_telemetry_server_1_1_fixedwing_metrics_1a8486ccc7e96add636a228399a74b1019}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">float</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">TelemetryServer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">FixedwingMetrics</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::climb_rate_m_s {</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(NAN)}</span></span></code></pre></div><p>Current climb rate in metres per second.</p>',18)]))}const m=s(r,[["render",_]]);export{k as __pageData,m as default};
