import{_ as e,c as s,al as a,o as n}from"./chunks/framework.BVh3rIuO.js";const h=JSON.parse('{"title":"Testing","description":"","frontmatter":{"github_branch":"main"},"headers":[],"relativePath":"en/cpp/guide/test.md","filePath":"en/cpp/guide/test.md"}'),i={name:"en/cpp/guide/test.md"};function l(o,t,r,p,d,c){return n(),s("div",null,t[0]||(t[0]=[a(`<h1 id="testing" tabindex="-1">Testing <a class="header-anchor" href="#testing" aria-label="Permalink to &quot;Testing&quot;">​</a></h1><p>The MAVSDK C++ library has both unit and integration tests, written using the <a href="https://google.github.io/googletest/primer.html" target="_blank" rel="noreferrer">Google C++ Test Framework</a> (<code>gtest</code>). The unit tests are run every time new code is committed to the library, and must pass before the code can be merged.</p><p>This topic shows how to run the existing tests.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>For information on <em>writing</em> tests see: <a href="./../contributing/plugins.html#testing">Writing Plugins &gt; Test Code</a>.</p></div><h2 id="running-unit-tests" tabindex="-1">Running Unit Tests <a class="header-anchor" href="#running-unit-tests" aria-label="Permalink to &quot;Running Unit Tests&quot;">​</a></h2><p>To run all unit tests:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>./build/default/src/unit_tests_runner</span></span></code></pre></div><h2 id="running-integration-tests" tabindex="-1">Running Integration Tests <a class="header-anchor" href="#running-integration-tests" aria-label="Permalink to &quot;Running Integration Tests&quot;">​</a></h2><p>Tests can be run against the simulator (either manually starting PX4 SITL or letting the tests start it automatically) or against a real vehicle.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>To run SITL you will need to install the <em>Gazebo</em> simulator. This is included as part of the standard PX4 installation for <a href="https://docs.px4.io/master/en/dev_setup/dev_env_mac.html" target="_blank" rel="noreferrer">macOS</a> and <a href="https://docs.px4.io/master/en/dev_setup/dev_env_linux_ubuntu.html" target="_blank" rel="noreferrer">Linux</a>. It does not run on Windows.</p></div><h3 id="autostart-px4-sitl" tabindex="-1">Autostart PX4 SITL <a class="header-anchor" href="#autostart-px4-sitl" aria-label="Permalink to &quot;Autostart PX4 SITL&quot;">​</a></h3><p>Make sure that the <a href="https://docs.px4.io/master/en/simulation/gazebo.html" target="_blank" rel="noreferrer">PX4 Gazebo simulation</a> is built and works:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>cd path/to/Firmware/</span></span>
<span class="line"><span>make px4_sitl gazebo</span></span></code></pre></div><p>Then press <strong>Ctrl+C</strong> to stop the simulation and run the integration tests:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>cd path/to/MAVSDK/</span></span>
<span class="line"><span>AUTOSTART_SITL=1 ./build/debug/src/integration_tests/integration_tests_runner</span></span></code></pre></div><p>To run the tests without the 3D viewer (<em>gzclient</em>), use:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>AUTOSTART_SITL=1 HEADLESS=1 ./build/debug/src/integration_tests/integration_tests_runner</span></span></code></pre></div><h3 id="run-px4-sitl-manually" tabindex="-1">Run PX4 SITL Manually <a class="header-anchor" href="#run-px4-sitl-manually" aria-label="Permalink to &quot;Run PX4 SITL Manually&quot;">​</a></h3><p>Build and run the PX4 simulation manually:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>cd path/to/Firmware/</span></span>
<span class="line"><span>make px4_sitl gazebo</span></span></code></pre></div><p>Then run the tests as shown:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>cd path/to/MAVSDK/</span></span>
<span class="line"><span>./build/debug/src/integration_tests/integration_tests_runner</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>The tests are designed to run in simulation, and may not be safe if run on a real vehicle.</p></div><h3 id="gtest-tricks" tabindex="-1">Gtest Tricks <a class="header-anchor" href="#gtest-tricks" aria-label="Permalink to &quot;Gtest Tricks&quot;">​</a></h3><p>To list all integration tests:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>./build/default/src/integration_tests/integration_tests_runner --gtest_list_tests</span></span></code></pre></div><p>To run a single integration test:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>./build/default/src/integration_tests/integration_tests_runner --gtest_filter=&quot;SitlTest.TelemetryAsync&quot;</span></span></code></pre></div><p>To run all telemetry tests:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>./build/default/src/integration_tests/integration_tests_runner --gtest_filter=&quot;SitlTest.Telemetry*&quot;</span></span></code></pre></div>`,30)]))}const g=e(i,[["render",l]]);export{h as __pageData,g as default};
