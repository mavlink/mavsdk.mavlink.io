import{_ as s,c as i,al as t,o as l}from"./chunks/framework.BVh3rIuO.js";const _=JSON.parse('{"title":"mavsdk::Gimbal Class Reference","description":"","frontmatter":{"github_branch":"main"},"headers":[],"relativePath":"en/cpp/api_reference/classmavsdk_1_1_gimbal.md","filePath":"en/cpp/api_reference/classmavsdk_1_1_gimbal.md"}'),e={name:"en/cpp/api_reference/classmavsdk_1_1_gimbal.md"};function d(n,a,h,k,c,r){return l(),i("div",null,a[0]||(a[0]=[t('<h1 id="mavsdk-gimbal-class-reference" tabindex="-1">mavsdk::Gimbal Class Reference <a class="header-anchor" href="#mavsdk-gimbal-class-reference" aria-label="Permalink to &quot;mavsdk::Gimbal Class Reference&quot;">​</a></h1><p><code>#include: gimbal.h</code></p><hr><p>Provide control over a gimbal.</p><h2 id="data-structures" tabindex="-1">Data Structures <a class="header-anchor" href="#data-structures" aria-label="Permalink to &quot;Data Structures&quot;">​</a></h2><p>struct <a href="./structmavsdk_1_1_gimbal_1_1_angular_velocity_body.html">AngularVelocityBody</a></p><p>struct <a href="./structmavsdk_1_1_gimbal_1_1_attitude.html">Attitude</a></p><p>struct <a href="./structmavsdk_1_1_gimbal_1_1_control_status.html">ControlStatus</a></p><p>struct <a href="./structmavsdk_1_1_gimbal_1_1_euler_angle.html">EulerAngle</a></p><p>struct <a href="./structmavsdk_1_1_gimbal_1_1_gimbal_item.html">GimbalItem</a></p><p>struct <a href="./structmavsdk_1_1_gimbal_1_1_gimbal_list.html">GimbalList</a></p><p>struct <a href="./structmavsdk_1_1_gimbal_1_1_quaternion.html">Quaternion</a></p><h2 id="public-types" tabindex="-1">Public Types <a class="header-anchor" href="#public-types" aria-label="Permalink to &quot;Public Types&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>enum <a href="#classmavsdk_1_1_gimbal_1afb92614c5d5915d3960bcea51bec2dca">GimbalMode</a></td><td><a href="./classmavsdk_1_1_gimbal.html">Gimbal</a> mode type.</td></tr><tr><td>enum <a href="#classmavsdk_1_1_gimbal_1a01b721086d7de6089aefdeb0fda4cff3">ControlMode</a></td><td>Control mode.</td></tr><tr><td>enum <a href="#classmavsdk_1_1_gimbal_1a625fee23155be376ebd67853bf9383a2">SendMode</a></td><td>The send mode type.</td></tr><tr><td>enum <a href="#classmavsdk_1_1_gimbal_1aa732ec0bd49ac03b7910199d635f76ac">Result</a></td><td>Possible results returned for gimbal commands.</td></tr><tr><td>std::function&lt; void(<a href="./classmavsdk_1_1_gimbal.html#classmavsdk_1_1_gimbal_1aa732ec0bd49ac03b7910199d635f76ac">Result</a>)&gt; <a href="#classmavsdk_1_1_gimbal_1a88ee7dd17821fb9b12c44b2a3630c197">ResultCallback</a></td><td>Callback type for asynchronous <a href="./classmavsdk_1_1_gimbal.html">Gimbal</a> calls.</td></tr><tr><td>std::function&lt; void(<a href="./structmavsdk_1_1_gimbal_1_1_gimbal_list.html">GimbalList</a>)&gt; <a href="#classmavsdk_1_1_gimbal_1a1656fb54230e1adc61b3a050a423a6c9">GimbalListCallback</a></td><td>Callback type for subscribe_gimbal_list.</td></tr><tr><td><a href="./classmavsdk_1_1_handle.html">Handle</a>&lt; <a href="./structmavsdk_1_1_gimbal_1_1_gimbal_list.html">GimbalList</a> &gt; <a href="#classmavsdk_1_1_gimbal_1a51e98cc1239dd440d37d4dbed78f4ae7">GimbalListHandle</a></td><td><a href="./classmavsdk_1_1_handle.html">Handle</a> type for subscribe_gimbal_list.</td></tr><tr><td>std::function&lt; void(<a href="./structmavsdk_1_1_gimbal_1_1_control_status.html">ControlStatus</a>)&gt; <a href="#classmavsdk_1_1_gimbal_1a2ab2120cb3ff6c6a1f726542bd0d8dea">ControlStatusCallback</a></td><td>Callback type for subscribe_control_status.</td></tr><tr><td><a href="./classmavsdk_1_1_handle.html">Handle</a>&lt; <a href="./structmavsdk_1_1_gimbal_1_1_control_status.html">ControlStatus</a> &gt; <a href="#classmavsdk_1_1_gimbal_1aade6db709ce87cb0ec5536ae243cb50d">ControlStatusHandle</a></td><td><a href="./classmavsdk_1_1_handle.html">Handle</a> type for subscribe_control_status.</td></tr><tr><td>std::function&lt; void(<a href="./structmavsdk_1_1_gimbal_1_1_attitude.html">Attitude</a>)&gt; <a href="#classmavsdk_1_1_gimbal_1a07eafc661a23ee1d55ab0dd86e3c71ed">AttitudeCallback</a></td><td>Callback type for subscribe_attitude.</td></tr><tr><td><a href="./classmavsdk_1_1_handle.html">Handle</a>&lt; <a href="./structmavsdk_1_1_gimbal_1_1_attitude.html">Attitude</a> &gt; <a href="#classmavsdk_1_1_gimbal_1af7c71cdd8516aec8c9d160977f7c5396">AttitudeHandle</a></td><td><a href="./classmavsdk_1_1_handle.html">Handle</a> type for subscribe_attitude.</td></tr></tbody></table><h2 id="public-member-functions" tabindex="-1">Public Member Functions <a class="header-anchor" href="#public-member-functions" aria-label="Permalink to &quot;Public Member Functions&quot;">​</a></h2><table tabindex="0"><thead><tr><th style="text-align:right;">Type</th><th>Name</th><th>Description</th></tr></thead><tbody><tr><td style="text-align:right;"> </td><td><a href="#classmavsdk_1_1_gimbal_1aa33f4df704c7f09698884083c379f787">Gimbal</a> (<a href="./classmavsdk_1_1_system.html">System</a> &amp; system)</td><td>Constructor. Creates the plugin for a specific <a href="./classmavsdk_1_1_system.html">System</a>.</td></tr><tr><td style="text-align:right;"> </td><td><a href="#classmavsdk_1_1_gimbal_1aa3cb6e1e37a2f275ab5cc8ed4dd71d93">Gimbal</a> (std::shared_ptr&lt; <a href="./classmavsdk_1_1_system.html">System</a> &gt; system)</td><td>Constructor. Creates the plugin for a specific <a href="./classmavsdk_1_1_system.html">System</a>.</td></tr><tr><td style="text-align:right;"> </td><td><a href="#classmavsdk_1_1_gimbal_1a3b86d8209172a578f238928b9f5bfdd6">~Gimbal</a> () override</td><td>Destructor (internal use only).</td></tr><tr><td style="text-align:right;"> </td><td><a href="#classmavsdk_1_1_gimbal_1ae69df278ca37deaee22fb13053fd4f2d">Gimbal</a> (const <a href="./classmavsdk_1_1_gimbal.html">Gimbal</a> &amp; other)</td><td>Copy constructor.</td></tr><tr><td style="text-align:right;">void</td><td><a href="#classmavsdk_1_1_gimbal_1a2da4d10fa81ec525dfda9c0036f94302">set_angles_async</a> (int32_t gimbal_id, float roll_deg, float pitch_deg, float yaw_deg, <a href="./classmavsdk_1_1_gimbal.html#classmavsdk_1_1_gimbal_1afb92614c5d5915d3960bcea51bec2dca">GimbalMode</a> gimbal_mode, <a href="./classmavsdk_1_1_gimbal.html#classmavsdk_1_1_gimbal_1a625fee23155be376ebd67853bf9383a2">SendMode</a> send_mode, const <a href="./classmavsdk_1_1_gimbal.html#classmavsdk_1_1_gimbal_1a88ee7dd17821fb9b12c44b2a3630c197">ResultCallback</a> callback)</td><td>Set gimbal roll, pitch and yaw angles.</td></tr><tr><td style="text-align:right;"><a href="./classmavsdk_1_1_gimbal.html#classmavsdk_1_1_gimbal_1aa732ec0bd49ac03b7910199d635f76ac">Result</a></td><td><a href="#classmavsdk_1_1_gimbal_1a481cc6658ef52d40469d71d4b3a1ebda">set_angles</a> (int32_t gimbal_id, float roll_deg, float pitch_deg, float yaw_deg, <a href="./classmavsdk_1_1_gimbal.html#classmavsdk_1_1_gimbal_1afb92614c5d5915d3960bcea51bec2dca">GimbalMode</a> gimbal_mode, <a href="./classmavsdk_1_1_gimbal.html#classmavsdk_1_1_gimbal_1a625fee23155be376ebd67853bf9383a2">SendMode</a> send_mode)const</td><td>Set gimbal roll, pitch and yaw angles.</td></tr><tr><td style="text-align:right;">void</td><td><a href="#classmavsdk_1_1_gimbal_1a0f0751ee5268f95d1833651dff78b956">set_angular_rates_async</a> (int32_t gimbal_id, float roll_rate_deg_s, float pitch_rate_deg_s, float yaw_rate_deg_s, <a href="./classmavsdk_1_1_gimbal.html#classmavsdk_1_1_gimbal_1afb92614c5d5915d3960bcea51bec2dca">GimbalMode</a> gimbal_mode, <a href="./classmavsdk_1_1_gimbal.html#classmavsdk_1_1_gimbal_1a625fee23155be376ebd67853bf9383a2">SendMode</a> send_mode, const <a href="./classmavsdk_1_1_gimbal.html#classmavsdk_1_1_gimbal_1a88ee7dd17821fb9b12c44b2a3630c197">ResultCallback</a> callback)</td><td>Set gimbal angular rates.</td></tr><tr><td style="text-align:right;"><a href="./classmavsdk_1_1_gimbal.html#classmavsdk_1_1_gimbal_1aa732ec0bd49ac03b7910199d635f76ac">Result</a></td><td><a href="#classmavsdk_1_1_gimbal_1ac69110603cc67a3988791f371706b698">set_angular_rates</a> (int32_t gimbal_id, float roll_rate_deg_s, float pitch_rate_deg_s, float yaw_rate_deg_s, <a href="./classmavsdk_1_1_gimbal.html#classmavsdk_1_1_gimbal_1afb92614c5d5915d3960bcea51bec2dca">GimbalMode</a> gimbal_mode, <a href="./classmavsdk_1_1_gimbal.html#classmavsdk_1_1_gimbal_1a625fee23155be376ebd67853bf9383a2">SendMode</a> send_mode)const</td><td>Set gimbal angular rates.</td></tr><tr><td style="text-align:right;">void</td><td><a href="#classmavsdk_1_1_gimbal_1a762050f84df6be7adc1eecae4f1b2e48">set_roi_location_async</a> (int32_t gimbal_id, double latitude_deg, double longitude_deg, float altitude_m, const <a href="./classmavsdk_1_1_gimbal.html#classmavsdk_1_1_gimbal_1a88ee7dd17821fb9b12c44b2a3630c197">ResultCallback</a> callback)</td><td>Set gimbal region of interest (ROI).</td></tr><tr><td style="text-align:right;"><a href="./classmavsdk_1_1_gimbal.html#classmavsdk_1_1_gimbal_1aa732ec0bd49ac03b7910199d635f76ac">Result</a></td><td><a href="#classmavsdk_1_1_gimbal_1a5010c2665f20524d3b86ccfe6b33cdfa">set_roi_location</a> (int32_t gimbal_id, double latitude_deg, double longitude_deg, float altitude_m)const</td><td>Set gimbal region of interest (ROI).</td></tr><tr><td style="text-align:right;">void</td><td><a href="#classmavsdk_1_1_gimbal_1a814363300828b02981bf2e818267c9be">take_control_async</a> (int32_t gimbal_id, <a href="./classmavsdk_1_1_gimbal.html#classmavsdk_1_1_gimbal_1a01b721086d7de6089aefdeb0fda4cff3">ControlMode</a> control_mode, const <a href="./classmavsdk_1_1_gimbal.html#classmavsdk_1_1_gimbal_1a88ee7dd17821fb9b12c44b2a3630c197">ResultCallback</a> callback)</td><td>Take control.</td></tr><tr><td style="text-align:right;"><a href="./classmavsdk_1_1_gimbal.html#classmavsdk_1_1_gimbal_1aa732ec0bd49ac03b7910199d635f76ac">Result</a></td><td><a href="#classmavsdk_1_1_gimbal_1afe512b2ce37eda69a28d285716076db7">take_control</a> (int32_t gimbal_id, <a href="./classmavsdk_1_1_gimbal.html#classmavsdk_1_1_gimbal_1a01b721086d7de6089aefdeb0fda4cff3">ControlMode</a> control_mode)const</td><td>Take control.</td></tr><tr><td style="text-align:right;">void</td><td><a href="#classmavsdk_1_1_gimbal_1a68305d969bc88353513890aa2a7a627f">release_control_async</a> (int32_t gimbal_id, const <a href="./classmavsdk_1_1_gimbal.html#classmavsdk_1_1_gimbal_1a88ee7dd17821fb9b12c44b2a3630c197">ResultCallback</a> callback)</td><td>Release control.</td></tr><tr><td style="text-align:right;"><a href="./classmavsdk_1_1_gimbal.html#classmavsdk_1_1_gimbal_1aa732ec0bd49ac03b7910199d635f76ac">Result</a></td><td><a href="#classmavsdk_1_1_gimbal_1ad0b0665a3502fac6199ac903b24bbd6f">release_control</a> (int32_t gimbal_id)const</td><td>Release control.</td></tr><tr><td style="text-align:right;"><a href="./classmavsdk_1_1_gimbal.html#classmavsdk_1_1_gimbal_1a51e98cc1239dd440d37d4dbed78f4ae7">GimbalListHandle</a></td><td><a href="#classmavsdk_1_1_gimbal_1a4ca185553a4a327f46c317942d2731d0">subscribe_gimbal_list</a> (const <a href="./classmavsdk_1_1_gimbal.html#classmavsdk_1_1_gimbal_1a1656fb54230e1adc61b3a050a423a6c9">GimbalListCallback</a> &amp; callback)</td><td>Subscribe to list of gimbals.</td></tr><tr><td style="text-align:right;">void</td><td><a href="#classmavsdk_1_1_gimbal_1a82e516c2080c56d056cbf7a22ff4e716">unsubscribe_gimbal_list</a> (<a href="./classmavsdk_1_1_gimbal.html#classmavsdk_1_1_gimbal_1a51e98cc1239dd440d37d4dbed78f4ae7">GimbalListHandle</a> handle)</td><td>Unsubscribe from subscribe_gimbal_list.</td></tr><tr><td style="text-align:right;"><a href="./structmavsdk_1_1_gimbal_1_1_gimbal_list.html">GimbalList</a></td><td><a href="#classmavsdk_1_1_gimbal_1ad67df5fc01473dd94797d42c6be368fd">gimbal_list</a> () const</td><td>Poll for &#39;<a href="./structmavsdk_1_1_gimbal_1_1_gimbal_list.html">GimbalList</a>&#39; (blocking).</td></tr><tr><td style="text-align:right;"><a href="./classmavsdk_1_1_gimbal.html#classmavsdk_1_1_gimbal_1aade6db709ce87cb0ec5536ae243cb50d">ControlStatusHandle</a></td><td><a href="#classmavsdk_1_1_gimbal_1ab34d06ee1ea0af89e334c3010aeacfd9">subscribe_control_status</a> (const <a href="./classmavsdk_1_1_gimbal.html#classmavsdk_1_1_gimbal_1a2ab2120cb3ff6c6a1f726542bd0d8dea">ControlStatusCallback</a> &amp; callback)</td><td>Subscribe to control status updates.</td></tr><tr><td style="text-align:right;">void</td><td><a href="#classmavsdk_1_1_gimbal_1a7314f438bd2b91ba98374cd2a1a2b285">unsubscribe_control_status</a> (<a href="./classmavsdk_1_1_gimbal.html#classmavsdk_1_1_gimbal_1aade6db709ce87cb0ec5536ae243cb50d">ControlStatusHandle</a> handle)</td><td>Unsubscribe from subscribe_control_status.</td></tr><tr><td style="text-align:right;">std::pair&lt; <a href="./classmavsdk_1_1_gimbal.html#classmavsdk_1_1_gimbal_1aa732ec0bd49ac03b7910199d635f76ac">Result</a>, <a href="./structmavsdk_1_1_gimbal_1_1_control_status.html">Gimbal::ControlStatus</a> &gt;</td><td><a href="#classmavsdk_1_1_gimbal_1a6c4a10de4ecb79c7116654c1d99236f3">get_control_status</a> (int32_t gimbal_id)const</td><td>Get control status for specific gimbal.</td></tr><tr><td style="text-align:right;"><a href="./classmavsdk_1_1_gimbal.html#classmavsdk_1_1_gimbal_1af7c71cdd8516aec8c9d160977f7c5396">AttitudeHandle</a></td><td><a href="#classmavsdk_1_1_gimbal_1aa3500df0c7adff3819493dd7d38976a3">subscribe_attitude</a> (const <a href="./classmavsdk_1_1_gimbal.html#classmavsdk_1_1_gimbal_1a07eafc661a23ee1d55ab0dd86e3c71ed">AttitudeCallback</a> &amp; callback)</td><td>Subscribe to attitude updates.</td></tr><tr><td style="text-align:right;">void</td><td><a href="#classmavsdk_1_1_gimbal_1a11b1e0d91ca5c8ec50afd802d9d2532e">unsubscribe_attitude</a> (<a href="./classmavsdk_1_1_gimbal.html#classmavsdk_1_1_gimbal_1af7c71cdd8516aec8c9d160977f7c5396">AttitudeHandle</a> handle)</td><td>Unsubscribe from subscribe_attitude.</td></tr><tr><td style="text-align:right;">std::pair&lt; <a href="./classmavsdk_1_1_gimbal.html#classmavsdk_1_1_gimbal_1aa732ec0bd49ac03b7910199d635f76ac">Result</a>, <a href="./structmavsdk_1_1_gimbal_1_1_attitude.html">Gimbal::Attitude</a> &gt;</td><td><a href="#classmavsdk_1_1_gimbal_1a57c6e6c7297e55f5cc660e40e91b898b">get_attitude</a> (int32_t gimbal_id)const</td><td>Get attitude for specific gimbal.</td></tr><tr><td style="text-align:right;">const <a href="./classmavsdk_1_1_gimbal.html">Gimbal</a> &amp;</td><td><a href="#classmavsdk_1_1_gimbal_1a2d16cfd6fbe82b0e34d35133ab5c9617">operator=</a> (const <a href="./classmavsdk_1_1_gimbal.html">Gimbal</a> &amp;)=delete</td><td>Equality operator (object is not copyable).</td></tr></tbody></table><h2 id="constructor-destructor-documentation" tabindex="-1">Constructor &amp; Destructor Documentation <a class="header-anchor" href="#constructor-destructor-documentation" aria-label="Permalink to &quot;Constructor &amp; Destructor Documentation&quot;">​</a></h2><h3 id="classmavsdk_1_1_gimbal_1aa33f4df704c7f09698884083c379f787" tabindex="-1">Gimbal() <a class="header-anchor" href="#classmavsdk_1_1_gimbal_1aa33f4df704c7f09698884083c379f787" aria-label="Permalink to &quot;Gimbal() {#classmavsdk_1_1_gimbal_1aa33f4df704c7f09698884083c379f787}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Gimbal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Gimbal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(System </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">system)</span></span></code></pre></div><p>Constructor. Creates the plugin for a specific <a href="./classmavsdk_1_1_system.html">System</a>.</p><p>The plugin is typically created as shown below:</p><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">auto</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> gimbal </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Gimbal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(system);</span></span></code></pre></div><p><strong>Parameters</strong></p><ul><li><a href="./classmavsdk_1_1_system.html">System</a>&amp; <strong>system</strong> - The specific system associated with this plugin.</li></ul><h3 id="classmavsdk_1_1_gimbal_1aa3cb6e1e37a2f275ab5cc8ed4dd71d93" tabindex="-1">Gimbal() <a class="header-anchor" href="#classmavsdk_1_1_gimbal_1aa3cb6e1e37a2f275ab5cc8ed4dd71d93" aria-label="Permalink to &quot;Gimbal() {#classmavsdk_1_1_gimbal_1aa3cb6e1e37a2f275ab5cc8ed4dd71d93}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Gimbal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Gimbal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::shared_ptr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> System </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> system)</span></span></code></pre></div><p>Constructor. Creates the plugin for a specific <a href="./classmavsdk_1_1_system.html">System</a>.</p><p>The plugin is typically created as shown below:</p><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">auto</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> gimbal </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Gimbal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(system);</span></span></code></pre></div><p><strong>Parameters</strong></p><ul><li>std::shared_ptr&lt; <a href="./classmavsdk_1_1_system.html">System</a> &gt; <strong>system</strong> - The specific system associated with this plugin.</li></ul><h3 id="classmavsdk_1_1_gimbal_1a3b86d8209172a578f238928b9f5bfdd6" tabindex="-1">~Gimbal() <a class="header-anchor" href="#classmavsdk_1_1_gimbal_1a3b86d8209172a578f238928b9f5bfdd6" aria-label="Permalink to &quot;~Gimbal() {#classmavsdk_1_1_gimbal_1a3b86d8209172a578f238928b9f5bfdd6}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Gimbal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">~</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Gimbal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">override</span></span></code></pre></div><p>Destructor (internal use only).</p><h3 id="classmavsdk_1_1_gimbal_1ae69df278ca37deaee22fb13053fd4f2d" tabindex="-1">Gimbal() <a class="header-anchor" href="#classmavsdk_1_1_gimbal_1ae69df278ca37deaee22fb13053fd4f2d" aria-label="Permalink to &quot;Gimbal() {#classmavsdk_1_1_gimbal_1ae69df278ca37deaee22fb13053fd4f2d}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Gimbal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Gimbal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Gimbal </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">other)</span></span></code></pre></div><p>Copy constructor.</p><p><strong>Parameters</strong></p><ul><li>const <a href="./classmavsdk_1_1_gimbal.html">Gimbal</a>&amp; <strong>other</strong> -</li></ul><h2 id="member-typdef-documentation" tabindex="-1">Member Typdef Documentation <a class="header-anchor" href="#member-typdef-documentation" aria-label="Permalink to &quot;Member Typdef Documentation&quot;">​</a></h2><h3 id="classmavsdk_1_1_gimbal_1a88ee7dd17821fb9b12c44b2a3630c197" tabindex="-1">typedef ResultCallback <a class="header-anchor" href="#classmavsdk_1_1_gimbal_1a88ee7dd17821fb9b12c44b2a3630c197" aria-label="Permalink to &quot;typedef ResultCallback {#classmavsdk_1_1_gimbal_1a88ee7dd17821fb9b12c44b2a3630c197}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Gimbal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::ResultCallback </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::function</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Result)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><p>Callback type for asynchronous <a href="./classmavsdk_1_1_gimbal.html">Gimbal</a> calls.</p><h3 id="classmavsdk_1_1_gimbal_1a1656fb54230e1adc61b3a050a423a6c9" tabindex="-1">typedef GimbalListCallback <a class="header-anchor" href="#classmavsdk_1_1_gimbal_1a1656fb54230e1adc61b3a050a423a6c9" aria-label="Permalink to &quot;typedef GimbalListCallback {#classmavsdk_1_1_gimbal_1a1656fb54230e1adc61b3a050a423a6c9}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Gimbal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::GimbalListCallback </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::function</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(GimbalList)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><p>Callback type for subscribe_gimbal_list.</p><h3 id="classmavsdk_1_1_gimbal_1a51e98cc1239dd440d37d4dbed78f4ae7" tabindex="-1">typedef GimbalListHandle <a class="header-anchor" href="#classmavsdk_1_1_gimbal_1a51e98cc1239dd440d37d4dbed78f4ae7" aria-label="Permalink to &quot;typedef GimbalListHandle {#classmavsdk_1_1_gimbal_1a51e98cc1239dd440d37d4dbed78f4ae7}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Gimbal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::GimbalListHandle </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  Handle</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">GimbalList</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><p><a href="./classmavsdk_1_1_handle.html">Handle</a> type for subscribe_gimbal_list.</p><h3 id="classmavsdk_1_1_gimbal_1a2ab2120cb3ff6c6a1f726542bd0d8dea" tabindex="-1">typedef ControlStatusCallback <a class="header-anchor" href="#classmavsdk_1_1_gimbal_1a2ab2120cb3ff6c6a1f726542bd0d8dea" aria-label="Permalink to &quot;typedef ControlStatusCallback {#classmavsdk_1_1_gimbal_1a2ab2120cb3ff6c6a1f726542bd0d8dea}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Gimbal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::ControlStatusCallback </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::function</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ControlStatus)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><p>Callback type for subscribe_control_status.</p><h3 id="classmavsdk_1_1_gimbal_1aade6db709ce87cb0ec5536ae243cb50d" tabindex="-1">typedef ControlStatusHandle <a class="header-anchor" href="#classmavsdk_1_1_gimbal_1aade6db709ce87cb0ec5536ae243cb50d" aria-label="Permalink to &quot;typedef ControlStatusHandle {#classmavsdk_1_1_gimbal_1aade6db709ce87cb0ec5536ae243cb50d}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Gimbal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::ControlStatusHandle </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  Handle</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ControlStatus</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><p><a href="./classmavsdk_1_1_handle.html">Handle</a> type for subscribe_control_status.</p><h3 id="classmavsdk_1_1_gimbal_1a07eafc661a23ee1d55ab0dd86e3c71ed" tabindex="-1">typedef AttitudeCallback <a class="header-anchor" href="#classmavsdk_1_1_gimbal_1a07eafc661a23ee1d55ab0dd86e3c71ed" aria-label="Permalink to &quot;typedef AttitudeCallback {#classmavsdk_1_1_gimbal_1a07eafc661a23ee1d55ab0dd86e3c71ed}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Gimbal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::AttitudeCallback </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::function</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Attitude)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><p>Callback type for subscribe_attitude.</p><h3 id="classmavsdk_1_1_gimbal_1af7c71cdd8516aec8c9d160977f7c5396" tabindex="-1">typedef AttitudeHandle <a class="header-anchor" href="#classmavsdk_1_1_gimbal_1af7c71cdd8516aec8c9d160977f7c5396" aria-label="Permalink to &quot;typedef AttitudeHandle {#classmavsdk_1_1_gimbal_1af7c71cdd8516aec8c9d160977f7c5396}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Gimbal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::AttitudeHandle </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  Handle</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Attitude</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><p><a href="./classmavsdk_1_1_handle.html">Handle</a> type for subscribe_attitude.</p><h2 id="member-enumeration-documentation" tabindex="-1">Member Enumeration Documentation <a class="header-anchor" href="#member-enumeration-documentation" aria-label="Permalink to &quot;Member Enumeration Documentation&quot;">​</a></h2><h3 id="classmavsdk_1_1_gimbal_1afb92614c5d5915d3960bcea51bec2dca" tabindex="-1">enum GimbalMode <a class="header-anchor" href="#classmavsdk_1_1_gimbal_1afb92614c5d5915d3960bcea51bec2dca" aria-label="Permalink to &quot;enum GimbalMode {#classmavsdk_1_1_gimbal_1afb92614c5d5915d3960bcea51bec2dca}&quot;">​</a></h3><p><a href="./classmavsdk_1_1_gimbal.html">Gimbal</a> mode type.</p><table tabindex="0"><thead><tr><th>Value</th><th>Description</th></tr></thead><tbody><tr><td><span id="classmavsdk_1_1_gimbal_1afb92614c5d5915d3960bcea51bec2dcaae370d3502f507d9c9ea57d6fd3c4ed7b"></span> <code>YawFollow</code></td><td>Yaw follow will point the gimbal to the vehicle heading.</td></tr><tr><td><span id="classmavsdk_1_1_gimbal_1afb92614c5d5915d3960bcea51bec2dcaaf0a46b0b7151dca1ab120e02b6e6663e"></span> <code>YawLock</code></td><td>Yaw lock will fix the gimbal pointing to an absolute direction.</td></tr></tbody></table><h3 id="classmavsdk_1_1_gimbal_1a01b721086d7de6089aefdeb0fda4cff3" tabindex="-1">enum ControlMode <a class="header-anchor" href="#classmavsdk_1_1_gimbal_1a01b721086d7de6089aefdeb0fda4cff3" aria-label="Permalink to &quot;enum ControlMode {#classmavsdk_1_1_gimbal_1a01b721086d7de6089aefdeb0fda4cff3}&quot;">​</a></h3><p>Control mode.</p><table tabindex="0"><thead><tr><th>Value</th><th>Description</th></tr></thead><tbody><tr><td><span id="classmavsdk_1_1_gimbal_1a01b721086d7de6089aefdeb0fda4cff3a6adf97f83acf6453d4a6a4b1070f3754"></span> <code>None</code></td><td>Indicates that the component does not have control over the gimbal.</td></tr><tr><td><span id="classmavsdk_1_1_gimbal_1a01b721086d7de6089aefdeb0fda4cff3a074de7e7c226d5c60f8af14c20725352"></span> <code>Primary</code></td><td>To take primary control over the gimbal.</td></tr><tr><td><span id="classmavsdk_1_1_gimbal_1a01b721086d7de6089aefdeb0fda4cff3a0c7d6cf19426e01dcfa32434828ed266"></span> <code>Secondary</code></td><td>To take secondary control over the gimbal.</td></tr></tbody></table><h3 id="classmavsdk_1_1_gimbal_1a625fee23155be376ebd67853bf9383a2" tabindex="-1">enum SendMode <a class="header-anchor" href="#classmavsdk_1_1_gimbal_1a625fee23155be376ebd67853bf9383a2" aria-label="Permalink to &quot;enum SendMode {#classmavsdk_1_1_gimbal_1a625fee23155be376ebd67853bf9383a2}&quot;">​</a></h3><p>The send mode type.</p><table tabindex="0"><thead><tr><th>Value</th><th>Description</th></tr></thead><tbody><tr><td><span id="classmavsdk_1_1_gimbal_1a625fee23155be376ebd67853bf9383a2ae1a9dc9f23534e63de9df0d540ac1611"></span> <code>Once</code></td><td>Send command exactly once with quality of service (use for sporadic commands slower than 1 Hz).</td></tr><tr><td><span id="classmavsdk_1_1_gimbal_1a625fee23155be376ebd67853bf9383a2aeae835e83c0494a376229f254f7d3392"></span> <code>Stream</code></td><td>Stream setpoint without quality of service (use for setpoints faster than 1 Hz)..</td></tr></tbody></table><h3 id="classmavsdk_1_1_gimbal_1aa732ec0bd49ac03b7910199d635f76ac" tabindex="-1">enum Result <a class="header-anchor" href="#classmavsdk_1_1_gimbal_1aa732ec0bd49ac03b7910199d635f76ac" aria-label="Permalink to &quot;enum Result {#classmavsdk_1_1_gimbal_1aa732ec0bd49ac03b7910199d635f76ac}&quot;">​</a></h3><p>Possible results returned for gimbal commands.</p><table tabindex="0"><thead><tr><th>Value</th><th>Description</th></tr></thead><tbody><tr><td><span id="classmavsdk_1_1_gimbal_1aa732ec0bd49ac03b7910199d635f76aca88183b946cc5f0e8c96b2e66e1c74a7e"></span> <code>Unknown</code></td><td>Unknown result.</td></tr><tr><td><span id="classmavsdk_1_1_gimbal_1aa732ec0bd49ac03b7910199d635f76aca505a83f220c02df2f85c3810cd9ceb38"></span> <code>Success</code></td><td>Command was accepted.</td></tr><tr><td><span id="classmavsdk_1_1_gimbal_1aa732ec0bd49ac03b7910199d635f76aca902b0d55fddef6f8d651fe1035b7d4bd"></span> <code>Error</code></td><td>Error occurred sending the command.</td></tr><tr><td><span id="classmavsdk_1_1_gimbal_1aa732ec0bd49ac03b7910199d635f76acac85a251cc457840f1e032f1b733e9398"></span> <code>Timeout</code></td><td>Command timed out.</td></tr><tr><td><span id="classmavsdk_1_1_gimbal_1aa732ec0bd49ac03b7910199d635f76acab4080bdf74febf04d578ff105cce9d3f"></span> <code>Unsupported</code></td><td>Functionality not supported.</td></tr><tr><td><span id="classmavsdk_1_1_gimbal_1aa732ec0bd49ac03b7910199d635f76aca1119faf72ba0dfb23aeea644fed960ad"></span> <code>NoSystem</code></td><td>No system connected.</td></tr><tr><td><span id="classmavsdk_1_1_gimbal_1aa732ec0bd49ac03b7910199d635f76aca253ca7dd096ee0956cccee4d376cab8b"></span> <code>InvalidArgument</code></td><td>Invalid argument.</td></tr></tbody></table><h2 id="member-function-documentation" tabindex="-1">Member Function Documentation <a class="header-anchor" href="#member-function-documentation" aria-label="Permalink to &quot;Member Function Documentation&quot;">​</a></h2><h3 id="classmavsdk_1_1_gimbal_1a2da4d10fa81ec525dfda9c0036f94302" tabindex="-1">set_angles_async() <a class="header-anchor" href="#classmavsdk_1_1_gimbal_1a2da4d10fa81ec525dfda9c0036f94302" aria-label="Permalink to &quot;set_angles_async() {#classmavsdk_1_1_gimbal_1a2da4d10fa81ec525dfda9c0036f94302}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Gimbal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">set_angles_async</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int32_t</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> gimbal_id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">float</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> roll_deg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">float</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> pitch_deg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">float</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> yaw_deg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">GimbalMode</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> gimbal_mode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">SendMode</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> send_mode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ResultCallback</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> callback</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Set gimbal roll, pitch and yaw angles.</p><p>This sets the desired roll, pitch and yaw angles of a gimbal. Will return when the command is accepted, however, it might take the gimbal longer to actually be set to the new angles.</p><p>Note that the roll angle needs to be set to 0 when send_mode is Once.</p><p>This function is non-blocking. See &#39;set_angles&#39; for the blocking counterpart.</p><p><strong>Parameters</strong></p><ul><li>int32_t <strong>gimbal_id</strong> -</li><li>float <strong>roll_deg</strong> -</li><li>float <strong>pitch_deg</strong> -</li><li>float <strong>yaw_deg</strong> -</li><li><a href="./classmavsdk_1_1_gimbal.html#classmavsdk_1_1_gimbal_1afb92614c5d5915d3960bcea51bec2dca">GimbalMode</a> <strong>gimbal_mode</strong> -</li><li><a href="./classmavsdk_1_1_gimbal.html#classmavsdk_1_1_gimbal_1a625fee23155be376ebd67853bf9383a2">SendMode</a> <strong>send_mode</strong> -</li><li>const <a href="./classmavsdk_1_1_gimbal.html#classmavsdk_1_1_gimbal_1a88ee7dd17821fb9b12c44b2a3630c197">ResultCallback</a> <strong>callback</strong> -</li></ul><h3 id="classmavsdk_1_1_gimbal_1a481cc6658ef52d40469d71d4b3a1ebda" tabindex="-1">set_angles() <a class="header-anchor" href="#classmavsdk_1_1_gimbal_1a481cc6658ef52d40469d71d4b3a1ebda" aria-label="Permalink to &quot;set_angles() {#classmavsdk_1_1_gimbal_1a481cc6658ef52d40469d71d4b3a1ebda}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Result</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Gimbal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">set_angles</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int32_t</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> gimbal_id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">float</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> roll_deg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">float</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> pitch_deg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">float</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> yaw_deg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">GimbalMode</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> gimbal_mode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">SendMode</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> send_mode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span></span></code></pre></div><p>Set gimbal roll, pitch and yaw angles.</p><p>This sets the desired roll, pitch and yaw angles of a gimbal. Will return when the command is accepted, however, it might take the gimbal longer to actually be set to the new angles.</p><p>Note that the roll angle needs to be set to 0 when send_mode is Once.</p><p>This function is blocking. See &#39;set_angles_async&#39; for the non-blocking counterpart.</p><p><strong>Parameters</strong></p><ul><li>int32_t <strong>gimbal_id</strong> -</li><li>float <strong>roll_deg</strong> -</li><li>float <strong>pitch_deg</strong> -</li><li>float <strong>yaw_deg</strong> -</li><li><a href="./classmavsdk_1_1_gimbal.html#classmavsdk_1_1_gimbal_1afb92614c5d5915d3960bcea51bec2dca">GimbalMode</a> <strong>gimbal_mode</strong> -</li><li><a href="./classmavsdk_1_1_gimbal.html#classmavsdk_1_1_gimbal_1a625fee23155be376ebd67853bf9383a2">SendMode</a> <strong>send_mode</strong> -</li></ul><p><strong>Returns</strong></p><p> <a href="./classmavsdk_1_1_gimbal.html#classmavsdk_1_1_gimbal_1aa732ec0bd49ac03b7910199d635f76ac">Result</a> - Result of request.</p><h3 id="classmavsdk_1_1_gimbal_1a0f0751ee5268f95d1833651dff78b956" tabindex="-1">set_angular_rates_async() <a class="header-anchor" href="#classmavsdk_1_1_gimbal_1a0f0751ee5268f95d1833651dff78b956" aria-label="Permalink to &quot;set_angular_rates_async() {#classmavsdk_1_1_gimbal_1a0f0751ee5268f95d1833651dff78b956}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Gimbal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">set_angular_rates_async</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int32_t</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> gimbal_id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">float</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> roll_rate_deg_s</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">float</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> pitch_rate_deg_s</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">float</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> yaw_rate_deg_s</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">GimbalMode</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> gimbal_mode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">SendMode</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> send_mode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ResultCallback</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> callback</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Set gimbal angular rates.</p><p>This sets the desired angular rates around roll, pitch and yaw axes of a gimbal. Will return when the command is accepted, however, it might take the gimbal longer to actually reach the angular rate.</p><p>Note that the roll angle needs to be set to 0 when send_mode is Once.</p><p>This function is non-blocking. See &#39;set_angular_rates&#39; for the blocking counterpart.</p><p><strong>Parameters</strong></p><ul><li>int32_t <strong>gimbal_id</strong> -</li><li>float <strong>roll_rate_deg_s</strong> -</li><li>float <strong>pitch_rate_deg_s</strong> -</li><li>float <strong>yaw_rate_deg_s</strong> -</li><li><a href="./classmavsdk_1_1_gimbal.html#classmavsdk_1_1_gimbal_1afb92614c5d5915d3960bcea51bec2dca">GimbalMode</a> <strong>gimbal_mode</strong> -</li><li><a href="./classmavsdk_1_1_gimbal.html#classmavsdk_1_1_gimbal_1a625fee23155be376ebd67853bf9383a2">SendMode</a> <strong>send_mode</strong> -</li><li>const <a href="./classmavsdk_1_1_gimbal.html#classmavsdk_1_1_gimbal_1a88ee7dd17821fb9b12c44b2a3630c197">ResultCallback</a> <strong>callback</strong> -</li></ul><h3 id="classmavsdk_1_1_gimbal_1ac69110603cc67a3988791f371706b698" tabindex="-1">set_angular_rates() <a class="header-anchor" href="#classmavsdk_1_1_gimbal_1ac69110603cc67a3988791f371706b698" aria-label="Permalink to &quot;set_angular_rates() {#classmavsdk_1_1_gimbal_1ac69110603cc67a3988791f371706b698}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Result</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Gimbal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">set_angular_rates</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int32_t</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> gimbal_id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">float</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> roll_rate_deg_s</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">float</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> pitch_rate_deg_s</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">float</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> yaw_rate_deg_s</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">GimbalMode</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> gimbal_mode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">SendMode</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> send_mode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span></span></code></pre></div><p>Set gimbal angular rates.</p><p>This sets the desired angular rates around roll, pitch and yaw axes of a gimbal. Will return when the command is accepted, however, it might take the gimbal longer to actually reach the angular rate.</p><p>Note that the roll angle needs to be set to 0 when send_mode is Once.</p><p>This function is blocking. See &#39;set_angular_rates_async&#39; for the non-blocking counterpart.</p><p><strong>Parameters</strong></p><ul><li>int32_t <strong>gimbal_id</strong> -</li><li>float <strong>roll_rate_deg_s</strong> -</li><li>float <strong>pitch_rate_deg_s</strong> -</li><li>float <strong>yaw_rate_deg_s</strong> -</li><li><a href="./classmavsdk_1_1_gimbal.html#classmavsdk_1_1_gimbal_1afb92614c5d5915d3960bcea51bec2dca">GimbalMode</a> <strong>gimbal_mode</strong> -</li><li><a href="./classmavsdk_1_1_gimbal.html#classmavsdk_1_1_gimbal_1a625fee23155be376ebd67853bf9383a2">SendMode</a> <strong>send_mode</strong> -</li></ul><p><strong>Returns</strong></p><p> <a href="./classmavsdk_1_1_gimbal.html#classmavsdk_1_1_gimbal_1aa732ec0bd49ac03b7910199d635f76ac">Result</a> - Result of request.</p><h3 id="classmavsdk_1_1_gimbal_1a762050f84df6be7adc1eecae4f1b2e48" tabindex="-1">set_roi_location_async() <a class="header-anchor" href="#classmavsdk_1_1_gimbal_1a762050f84df6be7adc1eecae4f1b2e48" aria-label="Permalink to &quot;set_roi_location_async() {#classmavsdk_1_1_gimbal_1a762050f84df6be7adc1eecae4f1b2e48}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Gimbal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">set_roi_location_async</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int32_t</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> gimbal_id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">double</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> latitude_deg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">double</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> longitude_deg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">float</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> altitude_m</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ResultCallback</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> callback</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Set gimbal region of interest (ROI).</p><p>This sets a region of interest that the gimbal will point to. The gimbal will continue to point to the specified region until it receives a new command. The function will return when the command is accepted, however, it might take the gimbal longer to actually rotate to the ROI.</p><p>This function is non-blocking. See &#39;set_roi_location&#39; for the blocking counterpart.</p><p><strong>Parameters</strong></p><ul><li>int32_t <strong>gimbal_id</strong> -</li><li>double <strong>latitude_deg</strong> -</li><li>double <strong>longitude_deg</strong> -</li><li>float <strong>altitude_m</strong> -</li><li>const <a href="./classmavsdk_1_1_gimbal.html#classmavsdk_1_1_gimbal_1a88ee7dd17821fb9b12c44b2a3630c197">ResultCallback</a> <strong>callback</strong> -</li></ul><h3 id="classmavsdk_1_1_gimbal_1a5010c2665f20524d3b86ccfe6b33cdfa" tabindex="-1">set_roi_location() <a class="header-anchor" href="#classmavsdk_1_1_gimbal_1a5010c2665f20524d3b86ccfe6b33cdfa" aria-label="Permalink to &quot;set_roi_location() {#classmavsdk_1_1_gimbal_1a5010c2665f20524d3b86ccfe6b33cdfa}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Result</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Gimbal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">set_roi_location</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int32_t</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> gimbal_id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">double</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> latitude_deg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">double</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> longitude_deg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">float</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> altitude_m</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span></span></code></pre></div><p>Set gimbal region of interest (ROI).</p><p>This sets a region of interest that the gimbal will point to. The gimbal will continue to point to the specified region until it receives a new command. The function will return when the command is accepted, however, it might take the gimbal longer to actually rotate to the ROI.</p><p>This function is blocking. See &#39;set_roi_location_async&#39; for the non-blocking counterpart.</p><p><strong>Parameters</strong></p><ul><li>int32_t <strong>gimbal_id</strong> -</li><li>double <strong>latitude_deg</strong> -</li><li>double <strong>longitude_deg</strong> -</li><li>float <strong>altitude_m</strong> -</li></ul><p><strong>Returns</strong></p><p> <a href="./classmavsdk_1_1_gimbal.html#classmavsdk_1_1_gimbal_1aa732ec0bd49ac03b7910199d635f76ac">Result</a> - Result of request.</p><h3 id="classmavsdk_1_1_gimbal_1a814363300828b02981bf2e818267c9be" tabindex="-1">take_control_async() <a class="header-anchor" href="#classmavsdk_1_1_gimbal_1a814363300828b02981bf2e818267c9be" aria-label="Permalink to &quot;take_control_async() {#classmavsdk_1_1_gimbal_1a814363300828b02981bf2e818267c9be}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Gimbal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">take_control_async</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int32_t</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> gimbal_id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ControlMode</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> control_mode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ResultCallback</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> callback</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Take control.</p><p>There can be only two components in control of a gimbal at any given time. One with &quot;primary&quot; control, and one with &quot;secondary&quot; control. The way the secondary control is implemented is not specified and hence depends on the vehicle.</p><p>Components are expected to be cooperative, which means that they can override each other and should therefore do it carefully.</p><p>This function is non-blocking. See &#39;take_control&#39; for the blocking counterpart.</p><p><strong>Parameters</strong></p><ul><li>int32_t <strong>gimbal_id</strong> -</li><li><a href="./classmavsdk_1_1_gimbal.html#classmavsdk_1_1_gimbal_1a01b721086d7de6089aefdeb0fda4cff3">ControlMode</a> <strong>control_mode</strong> -</li><li>const <a href="./classmavsdk_1_1_gimbal.html#classmavsdk_1_1_gimbal_1a88ee7dd17821fb9b12c44b2a3630c197">ResultCallback</a> <strong>callback</strong> -</li></ul><h3 id="classmavsdk_1_1_gimbal_1afe512b2ce37eda69a28d285716076db7" tabindex="-1">take_control() <a class="header-anchor" href="#classmavsdk_1_1_gimbal_1afe512b2ce37eda69a28d285716076db7" aria-label="Permalink to &quot;take_control() {#classmavsdk_1_1_gimbal_1afe512b2ce37eda69a28d285716076db7}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Result</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Gimbal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">take_control</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int32_t</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> gimbal_id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ControlMode</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> control_mode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span></span></code></pre></div><p>Take control.</p><p>There can be only two components in control of a gimbal at any given time. One with &quot;primary&quot; control, and one with &quot;secondary&quot; control. The way the secondary control is implemented is not specified and hence depends on the vehicle.</p><p>Components are expected to be cooperative, which means that they can override each other and should therefore do it carefully.</p><p>This function is blocking. See &#39;take_control_async&#39; for the non-blocking counterpart.</p><p><strong>Parameters</strong></p><ul><li>int32_t <strong>gimbal_id</strong> -</li><li><a href="./classmavsdk_1_1_gimbal.html#classmavsdk_1_1_gimbal_1a01b721086d7de6089aefdeb0fda4cff3">ControlMode</a> <strong>control_mode</strong> -</li></ul><p><strong>Returns</strong></p><p> <a href="./classmavsdk_1_1_gimbal.html#classmavsdk_1_1_gimbal_1aa732ec0bd49ac03b7910199d635f76ac">Result</a> - Result of request.</p><h3 id="classmavsdk_1_1_gimbal_1a68305d969bc88353513890aa2a7a627f" tabindex="-1">release_control_async() <a class="header-anchor" href="#classmavsdk_1_1_gimbal_1a68305d969bc88353513890aa2a7a627f" aria-label="Permalink to &quot;release_control_async() {#classmavsdk_1_1_gimbal_1a68305d969bc88353513890aa2a7a627f}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Gimbal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">release_control_async</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int32_t</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> gimbal_id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ResultCallback</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> callback</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Release control.</p><p>Release control, such that other components can control the gimbal.</p><p>This function is non-blocking. See &#39;release_control&#39; for the blocking counterpart.</p><p><strong>Parameters</strong></p><ul><li>int32_t <strong>gimbal_id</strong> -</li><li>const <a href="./classmavsdk_1_1_gimbal.html#classmavsdk_1_1_gimbal_1a88ee7dd17821fb9b12c44b2a3630c197">ResultCallback</a> <strong>callback</strong> -</li></ul><h3 id="classmavsdk_1_1_gimbal_1ad0b0665a3502fac6199ac903b24bbd6f" tabindex="-1">release_control() <a class="header-anchor" href="#classmavsdk_1_1_gimbal_1ad0b0665a3502fac6199ac903b24bbd6f" aria-label="Permalink to &quot;release_control() {#classmavsdk_1_1_gimbal_1ad0b0665a3502fac6199ac903b24bbd6f}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Result</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Gimbal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">release_control</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int32_t</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> gimbal_id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span></span></code></pre></div><p>Release control.</p><p>Release control, such that other components can control the gimbal.</p><p>This function is blocking. See &#39;release_control_async&#39; for the non-blocking counterpart.</p><p><strong>Parameters</strong></p><ul><li>int32_t <strong>gimbal_id</strong> -</li></ul><p><strong>Returns</strong></p><p> <a href="./classmavsdk_1_1_gimbal.html#classmavsdk_1_1_gimbal_1aa732ec0bd49ac03b7910199d635f76ac">Result</a> - Result of request.</p><h3 id="classmavsdk_1_1_gimbal_1a4ca185553a4a327f46c317942d2731d0" tabindex="-1">subscribe_gimbal_list() <a class="header-anchor" href="#classmavsdk_1_1_gimbal_1a4ca185553a4a327f46c317942d2731d0" aria-label="Permalink to &quot;subscribe_gimbal_list() {#classmavsdk_1_1_gimbal_1a4ca185553a4a327f46c317942d2731d0}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">GimbalListHandle</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Gimbal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">subscribe_gimbal_list</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> GimbalListCallback</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &amp;</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">callback</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Subscribe to list of gimbals.</p><p>This allows to find out what gimbals are connected to the system. Based on the gimbal ID, we can then address a specific gimbal.</p><p><strong>Parameters</strong></p><ul><li>const <a href="./classmavsdk_1_1_gimbal.html#classmavsdk_1_1_gimbal_1a1656fb54230e1adc61b3a050a423a6c9">GimbalListCallback</a>&amp; <strong>callback</strong> -</li></ul><p><strong>Returns</strong></p><p> <a href="./classmavsdk_1_1_gimbal.html#classmavsdk_1_1_gimbal_1a51e98cc1239dd440d37d4dbed78f4ae7">GimbalListHandle</a> -</p><h3 id="classmavsdk_1_1_gimbal_1a82e516c2080c56d056cbf7a22ff4e716" tabindex="-1">unsubscribe_gimbal_list() <a class="header-anchor" href="#classmavsdk_1_1_gimbal_1a82e516c2080c56d056cbf7a22ff4e716" aria-label="Permalink to &quot;unsubscribe_gimbal_list() {#classmavsdk_1_1_gimbal_1a82e516c2080c56d056cbf7a22ff4e716}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Gimbal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">unsubscribe_gimbal_list</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">GimbalListHandle</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> handle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Unsubscribe from subscribe_gimbal_list.</p><p><strong>Parameters</strong></p><ul><li><a href="./classmavsdk_1_1_gimbal.html#classmavsdk_1_1_gimbal_1a51e98cc1239dd440d37d4dbed78f4ae7">GimbalListHandle</a> <strong>handle</strong> -</li></ul><h3 id="classmavsdk_1_1_gimbal_1ad67df5fc01473dd94797d42c6be368fd" tabindex="-1">gimbal_list() <a class="header-anchor" href="#classmavsdk_1_1_gimbal_1ad67df5fc01473dd94797d42c6be368fd" aria-label="Permalink to &quot;gimbal_list() {#classmavsdk_1_1_gimbal_1ad67df5fc01473dd94797d42c6be368fd}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">GimbalList</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Gimbal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">gimbal_list</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span></span></code></pre></div><p>Poll for &#39;<a href="./structmavsdk_1_1_gimbal_1_1_gimbal_list.html">GimbalList</a>&#39; (blocking).</p><p><strong>Returns</strong></p><p> <a href="./structmavsdk_1_1_gimbal_1_1_gimbal_list.html">GimbalList</a> - One <a href="./structmavsdk_1_1_gimbal_1_1_gimbal_list.html">GimbalList</a> update.</p><h3 id="classmavsdk_1_1_gimbal_1ab34d06ee1ea0af89e334c3010aeacfd9" tabindex="-1">subscribe_control_status() <a class="header-anchor" href="#classmavsdk_1_1_gimbal_1ab34d06ee1ea0af89e334c3010aeacfd9" aria-label="Permalink to &quot;subscribe_control_status() {#classmavsdk_1_1_gimbal_1ab34d06ee1ea0af89e334c3010aeacfd9}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ControlStatusHandle</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Gimbal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">subscribe_control_status</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ControlStatusCallback</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &amp;</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">callback</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Subscribe to control status updates.</p><p>This allows a component to know if it has primary, secondary or no control over the gimbal. Also, it gives the system and component ids of the other components in control (if any).</p><p><strong>Parameters</strong></p><ul><li>const <a href="./classmavsdk_1_1_gimbal.html#classmavsdk_1_1_gimbal_1a2ab2120cb3ff6c6a1f726542bd0d8dea">ControlStatusCallback</a>&amp; <strong>callback</strong> -</li></ul><p><strong>Returns</strong></p><p> <a href="./classmavsdk_1_1_gimbal.html#classmavsdk_1_1_gimbal_1aade6db709ce87cb0ec5536ae243cb50d">ControlStatusHandle</a> -</p><h3 id="classmavsdk_1_1_gimbal_1a7314f438bd2b91ba98374cd2a1a2b285" tabindex="-1">unsubscribe_control_status() <a class="header-anchor" href="#classmavsdk_1_1_gimbal_1a7314f438bd2b91ba98374cd2a1a2b285" aria-label="Permalink to &quot;unsubscribe_control_status() {#classmavsdk_1_1_gimbal_1a7314f438bd2b91ba98374cd2a1a2b285}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Gimbal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">unsubscribe_control_status</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ControlStatusHandle</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> handle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Unsubscribe from subscribe_control_status.</p><p><strong>Parameters</strong></p><ul><li><a href="./classmavsdk_1_1_gimbal.html#classmavsdk_1_1_gimbal_1aade6db709ce87cb0ec5536ae243cb50d">ControlStatusHandle</a> <strong>handle</strong> -</li></ul><h3 id="classmavsdk_1_1_gimbal_1a6c4a10de4ecb79c7116654c1d99236f3" tabindex="-1">get_control_status() <a class="header-anchor" href="#classmavsdk_1_1_gimbal_1a6c4a10de4ecb79c7116654c1d99236f3" aria-label="Permalink to &quot;get_control_status() {#classmavsdk_1_1_gimbal_1a6c4a10de4ecb79c7116654c1d99236f3}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pair</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Result</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Gimbal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ControlStatus</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Gimbal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get_control_status</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int32_t</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> gimbal_id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span></span></code></pre></div><p>Get control status for specific gimbal.</p><p>This function is blocking.</p><p><strong>Parameters</strong></p><ul><li>int32_t <strong>gimbal_id</strong> -</li></ul><p><strong>Returns</strong></p><p> std::pair&lt; <a href="./classmavsdk_1_1_gimbal.html#classmavsdk_1_1_gimbal_1aa732ec0bd49ac03b7910199d635f76ac">Result</a>, <a href="./structmavsdk_1_1_gimbal_1_1_control_status.html">Gimbal::ControlStatus</a> &gt; - Result of request.</p><h3 id="classmavsdk_1_1_gimbal_1aa3500df0c7adff3819493dd7d38976a3" tabindex="-1">subscribe_attitude() <a class="header-anchor" href="#classmavsdk_1_1_gimbal_1aa3500df0c7adff3819493dd7d38976a3" aria-label="Permalink to &quot;subscribe_attitude() {#classmavsdk_1_1_gimbal_1aa3500df0c7adff3819493dd7d38976a3}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">AttitudeHandle</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Gimbal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">subscribe_attitude</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> AttitudeCallback</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &amp;</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">callback</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Subscribe to attitude updates.</p><p>This gets you the gimbal&#39;s attitude and angular rate.</p><p><strong>Parameters</strong></p><ul><li>const <a href="./classmavsdk_1_1_gimbal.html#classmavsdk_1_1_gimbal_1a07eafc661a23ee1d55ab0dd86e3c71ed">AttitudeCallback</a>&amp; <strong>callback</strong> -</li></ul><p><strong>Returns</strong></p><p> <a href="./classmavsdk_1_1_gimbal.html#classmavsdk_1_1_gimbal_1af7c71cdd8516aec8c9d160977f7c5396">AttitudeHandle</a> -</p><h3 id="classmavsdk_1_1_gimbal_1a11b1e0d91ca5c8ec50afd802d9d2532e" tabindex="-1">unsubscribe_attitude() <a class="header-anchor" href="#classmavsdk_1_1_gimbal_1a11b1e0d91ca5c8ec50afd802d9d2532e" aria-label="Permalink to &quot;unsubscribe_attitude() {#classmavsdk_1_1_gimbal_1a11b1e0d91ca5c8ec50afd802d9d2532e}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Gimbal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">unsubscribe_attitude</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">AttitudeHandle</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> handle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Unsubscribe from subscribe_attitude.</p><p><strong>Parameters</strong></p><ul><li><a href="./classmavsdk_1_1_gimbal.html#classmavsdk_1_1_gimbal_1af7c71cdd8516aec8c9d160977f7c5396">AttitudeHandle</a> <strong>handle</strong> -</li></ul><h3 id="classmavsdk_1_1_gimbal_1a57c6e6c7297e55f5cc660e40e91b898b" tabindex="-1">get_attitude() <a class="header-anchor" href="#classmavsdk_1_1_gimbal_1a57c6e6c7297e55f5cc660e40e91b898b" aria-label="Permalink to &quot;get_attitude() {#classmavsdk_1_1_gimbal_1a57c6e6c7297e55f5cc660e40e91b898b}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pair</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Result</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Gimbal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Attitude</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Gimbal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get_attitude</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int32_t</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> gimbal_id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span></span></code></pre></div><p>Get attitude for specific gimbal.</p><p>This function is blocking.</p><p><strong>Parameters</strong></p><ul><li>int32_t <strong>gimbal_id</strong> -</li></ul><p><strong>Returns</strong></p><p> std::pair&lt; <a href="./classmavsdk_1_1_gimbal.html#classmavsdk_1_1_gimbal_1aa732ec0bd49ac03b7910199d635f76ac">Result</a>, <a href="./structmavsdk_1_1_gimbal_1_1_attitude.html">Gimbal::Attitude</a> &gt; - Result of request.</p><h3 id="classmavsdk_1_1_gimbal_1a2d16cfd6fbe82b0e34d35133ab5c9617" tabindex="-1">operator=() <a class="header-anchor" href="#classmavsdk_1_1_gimbal_1a2d16cfd6fbe82b0e34d35133ab5c9617" aria-label="Permalink to &quot;operator=() {#classmavsdk_1_1_gimbal_1a2d16cfd6fbe82b0e34d35133ab5c9617}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Gimbal</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &amp;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Gimbal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">operator</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Gimbal</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=delete</span></span></code></pre></div><p>Equality operator (object is not copyable).</p><p><strong>Parameters</strong></p><ul><li>const <a href="./classmavsdk_1_1_gimbal.html">Gimbal</a>&amp; -</li></ul><p><strong>Returns</strong></p><p> const <a href="./classmavsdk_1_1_gimbal.html">Gimbal</a> &amp; -</p>',228)]))}const o=s(e,[["render",d]]);export{_ as __pageData,o as default};
