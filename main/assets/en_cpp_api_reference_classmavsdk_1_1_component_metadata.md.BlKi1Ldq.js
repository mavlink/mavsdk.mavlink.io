import{_ as t,c as s,al as e,o as i}from"./chunks/framework.BVh3rIuO.js";const m=JSON.parse('{"title":"mavsdk::ComponentMetadata Class Reference","description":"","frontmatter":{"github_branch":"main"},"headers":[],"relativePath":"en/cpp/api_reference/classmavsdk_1_1_component_metadata.md","filePath":"en/cpp/api_reference/classmavsdk_1_1_component_metadata.md"}'),d={name:"en/cpp/api_reference/classmavsdk_1_1_component_metadata.md"};function n(l,a,p,o,c,h){return i(),s("div",null,a[0]||(a[0]=[e('<h1 id="mavsdk-componentmetadata-class-reference" tabindex="-1">mavsdk::ComponentMetadata Class Reference <a class="header-anchor" href="#mavsdk-componentmetadata-class-reference" aria-label="Permalink to &quot;mavsdk::ComponentMetadata Class Reference&quot;">​</a></h1><p><code>#include: component_metadata.h</code></p><hr><p>Access component metadata json definitions, such as parameters.</p><h2 id="data-structures" tabindex="-1">Data Structures <a class="header-anchor" href="#data-structures" aria-label="Permalink to &quot;Data Structures&quot;">​</a></h2><p>struct <a href="./structmavsdk_1_1_component_metadata_1_1_metadata_data.html">MetadataData</a></p><p>struct <a href="./structmavsdk_1_1_component_metadata_1_1_metadata_update.html">MetadataUpdate</a></p><h2 id="public-types" tabindex="-1">Public Types <a class="header-anchor" href="#public-types" aria-label="Permalink to &quot;Public Types&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>enum <a href="#classmavsdk_1_1_component_metadata_1a0d85236afbbb3dc6b2dd46351a6b38bc">MetadataType</a></td><td>The metadata type.</td></tr><tr><td>enum <a href="#classmavsdk_1_1_component_metadata_1af7b6ff8c58634fac8d2670f2b882ef44">Result</a></td><td>Possible results returned.</td></tr><tr><td>std::function&lt; void(<a href="./classmavsdk_1_1_component_metadata.html#classmavsdk_1_1_component_metadata_1af7b6ff8c58634fac8d2670f2b882ef44">Result</a>)&gt; <a href="#classmavsdk_1_1_component_metadata_1aca3d0432b9711666398eb1e3acdab327">ResultCallback</a></td><td>Callback type for asynchronous <a href="./classmavsdk_1_1_component_metadata.html">ComponentMetadata</a> calls.</td></tr><tr><td>std::function&lt; void(<a href="./structmavsdk_1_1_component_metadata_1_1_metadata_update.html">MetadataUpdate</a>)&gt; <a href="#classmavsdk_1_1_component_metadata_1aba4946a5e2219b6b24a9dd3ce4f9ace1">MetadataAvailableCallback</a></td><td>Callback type for subscribe_metadata_available.</td></tr><tr><td><a href="./classmavsdk_1_1_handle.html">Handle</a>&lt; <a href="./structmavsdk_1_1_component_metadata_1_1_metadata_update.html">MetadataUpdate</a> &gt; <a href="#classmavsdk_1_1_component_metadata_1a374204a0542af5f4a73bf36e25513910">MetadataAvailableHandle</a></td><td><a href="./classmavsdk_1_1_handle.html">Handle</a> type for subscribe_metadata_available.</td></tr></tbody></table><h2 id="public-member-functions" tabindex="-1">Public Member Functions <a class="header-anchor" href="#public-member-functions" aria-label="Permalink to &quot;Public Member Functions&quot;">​</a></h2><table tabindex="0"><thead><tr><th style="text-align:right;">Type</th><th>Name</th><th>Description</th></tr></thead><tbody><tr><td style="text-align:right;"> </td><td><a href="#classmavsdk_1_1_component_metadata_1a1d5efd4730ac6cc96131195675e76dd9">ComponentMetadata</a> (<a href="./classmavsdk_1_1_system.html">System</a> &amp; system)</td><td>Constructor. Creates the plugin for a specific <a href="./classmavsdk_1_1_system.html">System</a>.</td></tr><tr><td style="text-align:right;"> </td><td><a href="#classmavsdk_1_1_component_metadata_1aa6ecff15e5832fbcd023d140a5583341">ComponentMetadata</a> (std::shared_ptr&lt; <a href="./classmavsdk_1_1_system.html">System</a> &gt; system)</td><td>Constructor. Creates the plugin for a specific <a href="./classmavsdk_1_1_system.html">System</a>.</td></tr><tr><td style="text-align:right;"> </td><td><a href="#classmavsdk_1_1_component_metadata_1aac93ac109e9327015fd199646df75a73">~ComponentMetadata</a> () override</td><td>Destructor (internal use only).</td></tr><tr><td style="text-align:right;"> </td><td><a href="#classmavsdk_1_1_component_metadata_1a3b145559b5d92068e1bc9f7689223a48">ComponentMetadata</a> (const <a href="./classmavsdk_1_1_component_metadata.html">ComponentMetadata</a> &amp; other)</td><td>Copy constructor.</td></tr><tr><td style="text-align:right;">void</td><td><a href="#classmavsdk_1_1_component_metadata_1a1237d1aad4d8ab70470cf3390370625a">request_component</a> (uint32_t compid)const</td><td>Request metadata from a specific component. This is used to start requesting metadata from a component. The metadata can later be accessed via subscription (see below) or GetMetadata.</td></tr><tr><td style="text-align:right;">void</td><td><a href="#classmavsdk_1_1_component_metadata_1a7620b5ef1adb417b6fea0222c44d2c33">request_autopilot_component</a> () const</td><td>Request metadata from the autopilot component. This is used to start requesting metadata from the autopilot. The metadata can later be accessed via subscription (see below) or GetMetadata.</td></tr><tr><td style="text-align:right;"><a href="./classmavsdk_1_1_component_metadata.html#classmavsdk_1_1_component_metadata_1a374204a0542af5f4a73bf36e25513910">MetadataAvailableHandle</a></td><td><a href="#classmavsdk_1_1_component_metadata_1a622e41c77a19b137ae8dfd40bdb44ee5">subscribe_metadata_available</a> (const <a href="./classmavsdk_1_1_component_metadata.html#classmavsdk_1_1_component_metadata_1aba4946a5e2219b6b24a9dd3ce4f9ace1">MetadataAvailableCallback</a> &amp; callback)</td><td>Register a callback that gets called when metadata is available.</td></tr><tr><td style="text-align:right;">void</td><td><a href="#classmavsdk_1_1_component_metadata_1a1245bcbb6d6edc650fe7e0b7035d90f4">unsubscribe_metadata_available</a> (<a href="./classmavsdk_1_1_component_metadata.html#classmavsdk_1_1_component_metadata_1a374204a0542af5f4a73bf36e25513910">MetadataAvailableHandle</a> handle)</td><td>Unsubscribe from subscribe_metadata_available.</td></tr><tr><td style="text-align:right;">std::pair&lt; <a href="./classmavsdk_1_1_component_metadata.html#classmavsdk_1_1_component_metadata_1af7b6ff8c58634fac8d2670f2b882ef44">Result</a>, <a href="./structmavsdk_1_1_component_metadata_1_1_metadata_data.html">ComponentMetadata::MetadataData</a> &gt;</td><td><a href="#classmavsdk_1_1_component_metadata_1a2a268428596fe70a97b6be3ec0d4046d">get_metadata</a> (uint32_t compid, <a href="./classmavsdk_1_1_component_metadata.html#classmavsdk_1_1_component_metadata_1a0d85236afbbb3dc6b2dd46351a6b38bc">MetadataType</a> metadata_type)const</td><td>Access metadata. This can be used if you know the metadata is available already, otherwise use the subscription to get notified when it becomes available.</td></tr><tr><td style="text-align:right;">const <a href="./classmavsdk_1_1_component_metadata.html">ComponentMetadata</a> &amp;</td><td><a href="#classmavsdk_1_1_component_metadata_1a2be7fadaa2dad61f558430278ecf51bb">operator=</a> (const <a href="./classmavsdk_1_1_component_metadata.html">ComponentMetadata</a> &amp;)=delete</td><td>Equality operator (object is not copyable).</td></tr></tbody></table><h2 id="constructor-destructor-documentation" tabindex="-1">Constructor &amp; Destructor Documentation <a class="header-anchor" href="#constructor-destructor-documentation" aria-label="Permalink to &quot;Constructor &amp; Destructor Documentation&quot;">​</a></h2><h3 id="classmavsdk_1_1_component_metadata_1a1d5efd4730ac6cc96131195675e76dd9" tabindex="-1">ComponentMetadata() <a class="header-anchor" href="#classmavsdk_1_1_component_metadata_1a1d5efd4730ac6cc96131195675e76dd9" aria-label="Permalink to &quot;ComponentMetadata() {#classmavsdk_1_1_component_metadata_1a1d5efd4730ac6cc96131195675e76dd9}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ComponentMetadata</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ComponentMetadata</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(System </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">system)</span></span></code></pre></div><p>Constructor. Creates the plugin for a specific <a href="./classmavsdk_1_1_system.html">System</a>.</p><p>The plugin is typically created as shown below:</p><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">auto</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> component_metadata </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ComponentMetadata</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(system);</span></span></code></pre></div><p><strong>Parameters</strong></p><ul><li><a href="./classmavsdk_1_1_system.html">System</a>&amp; <strong>system</strong> - The specific system associated with this plugin.</li></ul><h3 id="classmavsdk_1_1_component_metadata_1aa6ecff15e5832fbcd023d140a5583341" tabindex="-1">ComponentMetadata() <a class="header-anchor" href="#classmavsdk_1_1_component_metadata_1aa6ecff15e5832fbcd023d140a5583341" aria-label="Permalink to &quot;ComponentMetadata() {#classmavsdk_1_1_component_metadata_1aa6ecff15e5832fbcd023d140a5583341}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ComponentMetadata</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ComponentMetadata</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::shared_ptr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> System </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> system)</span></span></code></pre></div><p>Constructor. Creates the plugin for a specific <a href="./classmavsdk_1_1_system.html">System</a>.</p><p>The plugin is typically created as shown below:</p><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">auto</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> component_metadata </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ComponentMetadata</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(system);</span></span></code></pre></div><p><strong>Parameters</strong></p><ul><li>std::shared_ptr&lt; <a href="./classmavsdk_1_1_system.html">System</a> &gt; <strong>system</strong> - The specific system associated with this plugin.</li></ul><h3 id="classmavsdk_1_1_component_metadata_1aac93ac109e9327015fd199646df75a73" tabindex="-1">~ComponentMetadata() <a class="header-anchor" href="#classmavsdk_1_1_component_metadata_1aac93ac109e9327015fd199646df75a73" aria-label="Permalink to &quot;~ComponentMetadata() {#classmavsdk_1_1_component_metadata_1aac93ac109e9327015fd199646df75a73}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ComponentMetadata</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">~</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ComponentMetadata</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">override</span></span></code></pre></div><p>Destructor (internal use only).</p><h3 id="classmavsdk_1_1_component_metadata_1a3b145559b5d92068e1bc9f7689223a48" tabindex="-1">ComponentMetadata() <a class="header-anchor" href="#classmavsdk_1_1_component_metadata_1a3b145559b5d92068e1bc9f7689223a48" aria-label="Permalink to &quot;ComponentMetadata() {#classmavsdk_1_1_component_metadata_1a3b145559b5d92068e1bc9f7689223a48}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ComponentMetadata</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ComponentMetadata</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ComponentMetadata </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">other)</span></span></code></pre></div><p>Copy constructor.</p><p><strong>Parameters</strong></p><ul><li>const <a href="./classmavsdk_1_1_component_metadata.html">ComponentMetadata</a>&amp; <strong>other</strong> -</li></ul><h2 id="member-typdef-documentation" tabindex="-1">Member Typdef Documentation <a class="header-anchor" href="#member-typdef-documentation" aria-label="Permalink to &quot;Member Typdef Documentation&quot;">​</a></h2><h3 id="classmavsdk_1_1_component_metadata_1aca3d0432b9711666398eb1e3acdab327" tabindex="-1">typedef ResultCallback <a class="header-anchor" href="#classmavsdk_1_1_component_metadata_1aca3d0432b9711666398eb1e3acdab327" aria-label="Permalink to &quot;typedef ResultCallback {#classmavsdk_1_1_component_metadata_1aca3d0432b9711666398eb1e3acdab327}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ComponentMetadata</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::ResultCallback </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::function</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Result)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><p>Callback type for asynchronous <a href="./classmavsdk_1_1_component_metadata.html">ComponentMetadata</a> calls.</p><h3 id="classmavsdk_1_1_component_metadata_1aba4946a5e2219b6b24a9dd3ce4f9ace1" tabindex="-1">typedef MetadataAvailableCallback <a class="header-anchor" href="#classmavsdk_1_1_component_metadata_1aba4946a5e2219b6b24a9dd3ce4f9ace1" aria-label="Permalink to &quot;typedef MetadataAvailableCallback {#classmavsdk_1_1_component_metadata_1aba4946a5e2219b6b24a9dd3ce4f9ace1}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ComponentMetadata</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::MetadataAvailableCallback </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::function</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(MetadataUpdate)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><p>Callback type for subscribe_metadata_available.</p><h3 id="classmavsdk_1_1_component_metadata_1a374204a0542af5f4a73bf36e25513910" tabindex="-1">typedef MetadataAvailableHandle <a class="header-anchor" href="#classmavsdk_1_1_component_metadata_1a374204a0542af5f4a73bf36e25513910" aria-label="Permalink to &quot;typedef MetadataAvailableHandle {#classmavsdk_1_1_component_metadata_1a374204a0542af5f4a73bf36e25513910}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ComponentMetadata</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::MetadataAvailableHandle </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  Handle</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MetadataUpdate</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><p><a href="./classmavsdk_1_1_handle.html">Handle</a> type for subscribe_metadata_available.</p><h2 id="member-enumeration-documentation" tabindex="-1">Member Enumeration Documentation <a class="header-anchor" href="#member-enumeration-documentation" aria-label="Permalink to &quot;Member Enumeration Documentation&quot;">​</a></h2><h3 id="classmavsdk_1_1_component_metadata_1a0d85236afbbb3dc6b2dd46351a6b38bc" tabindex="-1">enum MetadataType <a class="header-anchor" href="#classmavsdk_1_1_component_metadata_1a0d85236afbbb3dc6b2dd46351a6b38bc" aria-label="Permalink to &quot;enum MetadataType {#classmavsdk_1_1_component_metadata_1a0d85236afbbb3dc6b2dd46351a6b38bc}&quot;">​</a></h3><p>The metadata type.</p><table tabindex="0"><thead><tr><th>Value</th><th>Description</th></tr></thead><tbody><tr><td><span id="classmavsdk_1_1_component_metadata_1a0d85236afbbb3dc6b2dd46351a6b38bcaddd135693fb2c479c7a756317837042b"></span> <code>AllCompleted</code></td><td>This is set in the subscription callback when all metadata types completed for a given component ID.</td></tr><tr><td><span id="classmavsdk_1_1_component_metadata_1a0d85236afbbb3dc6b2dd46351a6b38bca83f499a540b1323009c200d6f8cc9396"></span> <code>Parameter</code></td><td>Parameter metadata.</td></tr><tr><td><span id="classmavsdk_1_1_component_metadata_1a0d85236afbbb3dc6b2dd46351a6b38bca87f9f735a1d36793ceaecd4e47124b63"></span> <code>Events</code></td><td>Event definitions.</td></tr><tr><td><span id="classmavsdk_1_1_component_metadata_1a0d85236afbbb3dc6b2dd46351a6b38bcabc26da9b4558294f17ead5c532d12b80"></span> <code>Actuators</code></td><td>Actuator definitions.</td></tr></tbody></table><h3 id="classmavsdk_1_1_component_metadata_1af7b6ff8c58634fac8d2670f2b882ef44" tabindex="-1">enum Result <a class="header-anchor" href="#classmavsdk_1_1_component_metadata_1af7b6ff8c58634fac8d2670f2b882ef44" aria-label="Permalink to &quot;enum Result {#classmavsdk_1_1_component_metadata_1af7b6ff8c58634fac8d2670f2b882ef44}&quot;">​</a></h3><p>Possible results returned.</p><table tabindex="0"><thead><tr><th>Value</th><th>Description</th></tr></thead><tbody><tr><td><span id="classmavsdk_1_1_component_metadata_1af7b6ff8c58634fac8d2670f2b882ef44a505a83f220c02df2f85c3810cd9ceb38"></span> <code>Success</code></td><td>Success.</td></tr><tr><td><span id="classmavsdk_1_1_component_metadata_1af7b6ff8c58634fac8d2670f2b882ef44a534ceac854da4ba59c4dc41b7ab732dc"></span> <code>NotAvailable</code></td><td>Not available.</td></tr><tr><td><span id="classmavsdk_1_1_component_metadata_1af7b6ff8c58634fac8d2670f2b882ef44a094a6f6b0868122a9dd008cb91c083e4"></span> <code>ConnectionError</code></td><td>Connection error.</td></tr><tr><td><span id="classmavsdk_1_1_component_metadata_1af7b6ff8c58634fac8d2670f2b882ef44ab4080bdf74febf04d578ff105cce9d3f"></span> <code>Unsupported</code></td><td>Unsupported.</td></tr><tr><td><span id="classmavsdk_1_1_component_metadata_1af7b6ff8c58634fac8d2670f2b882ef44a58d036b9b7f0e7eb38cfb90f1cc70a73"></span> <code>Denied</code></td><td>Denied.</td></tr><tr><td><span id="classmavsdk_1_1_component_metadata_1af7b6ff8c58634fac8d2670f2b882ef44ad7c8c85bf79bbe1b7188497c32c3b0ca"></span> <code>Failed</code></td><td>Failed.</td></tr><tr><td><span id="classmavsdk_1_1_component_metadata_1af7b6ff8c58634fac8d2670f2b882ef44ac85a251cc457840f1e032f1b733e9398"></span> <code>Timeout</code></td><td>Timeout.</td></tr><tr><td><span id="classmavsdk_1_1_component_metadata_1af7b6ff8c58634fac8d2670f2b882ef44a1119faf72ba0dfb23aeea644fed960ad"></span> <code>NoSystem</code></td><td>No system.</td></tr><tr><td><span id="classmavsdk_1_1_component_metadata_1af7b6ff8c58634fac8d2670f2b882ef44ac534a66e591207038fe31a2a9e0164b7"></span> <code>NotRequested</code></td><td>Not requested.</td></tr></tbody></table><h2 id="member-function-documentation" tabindex="-1">Member Function Documentation <a class="header-anchor" href="#member-function-documentation" aria-label="Permalink to &quot;Member Function Documentation&quot;">​</a></h2><h3 id="classmavsdk_1_1_component_metadata_1a1237d1aad4d8ab70470cf3390370625a" tabindex="-1">request_component() <a class="header-anchor" href="#classmavsdk_1_1_component_metadata_1a1237d1aad4d8ab70470cf3390370625a" aria-label="Permalink to &quot;request_component() {#classmavsdk_1_1_component_metadata_1a1237d1aad4d8ab70470cf3390370625a}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ComponentMetadata</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">request_component</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uint32_t</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> compid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span></span></code></pre></div><p>Request metadata from a specific component. This is used to start requesting metadata from a component. The metadata can later be accessed via subscription (see below) or GetMetadata.</p><p>This function is blocking.</p><p><strong>Parameters</strong></p><ul><li>uint32_t <strong>compid</strong> -</li></ul><h3 id="classmavsdk_1_1_component_metadata_1a7620b5ef1adb417b6fea0222c44d2c33" tabindex="-1">request_autopilot_component() <a class="header-anchor" href="#classmavsdk_1_1_component_metadata_1a7620b5ef1adb417b6fea0222c44d2c33" aria-label="Permalink to &quot;request_autopilot_component() {#classmavsdk_1_1_component_metadata_1a7620b5ef1adb417b6fea0222c44d2c33}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ComponentMetadata</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">request_autopilot_component</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span></span></code></pre></div><p>Request metadata from the autopilot component. This is used to start requesting metadata from the autopilot. The metadata can later be accessed via subscription (see below) or GetMetadata.</p><p>This function is blocking.</p><h3 id="classmavsdk_1_1_component_metadata_1a622e41c77a19b137ae8dfd40bdb44ee5" tabindex="-1">subscribe_metadata_available() <a class="header-anchor" href="#classmavsdk_1_1_component_metadata_1a622e41c77a19b137ae8dfd40bdb44ee5" aria-label="Permalink to &quot;subscribe_metadata_available() {#classmavsdk_1_1_component_metadata_1a622e41c77a19b137ae8dfd40bdb44ee5}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MetadataAvailableHandle</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ComponentMetadata</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">subscribe_metadata_available</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> MetadataAvailableCallback</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &amp;</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">callback</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Register a callback that gets called when metadata is available.</p><p><strong>Parameters</strong></p><ul><li>const <a href="./classmavsdk_1_1_component_metadata.html#classmavsdk_1_1_component_metadata_1aba4946a5e2219b6b24a9dd3ce4f9ace1">MetadataAvailableCallback</a>&amp; <strong>callback</strong> -</li></ul><p><strong>Returns</strong></p><p> <a href="./classmavsdk_1_1_component_metadata.html#classmavsdk_1_1_component_metadata_1a374204a0542af5f4a73bf36e25513910">MetadataAvailableHandle</a> -</p><h3 id="classmavsdk_1_1_component_metadata_1a1245bcbb6d6edc650fe7e0b7035d90f4" tabindex="-1">unsubscribe_metadata_available() <a class="header-anchor" href="#classmavsdk_1_1_component_metadata_1a1245bcbb6d6edc650fe7e0b7035d90f4" aria-label="Permalink to &quot;unsubscribe_metadata_available() {#classmavsdk_1_1_component_metadata_1a1245bcbb6d6edc650fe7e0b7035d90f4}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ComponentMetadata</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">unsubscribe_metadata_available</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MetadataAvailableHandle</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> handle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Unsubscribe from subscribe_metadata_available.</p><p><strong>Parameters</strong></p><ul><li><a href="./classmavsdk_1_1_component_metadata.html#classmavsdk_1_1_component_metadata_1a374204a0542af5f4a73bf36e25513910">MetadataAvailableHandle</a> <strong>handle</strong> -</li></ul><h3 id="classmavsdk_1_1_component_metadata_1a2a268428596fe70a97b6be3ec0d4046d" tabindex="-1">get_metadata() <a class="header-anchor" href="#classmavsdk_1_1_component_metadata_1a2a268428596fe70a97b6be3ec0d4046d" aria-label="Permalink to &quot;get_metadata() {#classmavsdk_1_1_component_metadata_1a2a268428596fe70a97b6be3ec0d4046d}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pair</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Result</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ComponentMetadata</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MetadataData</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ComponentMetadata</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get_metadata</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uint32_t</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> compid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MetadataType</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> metadata_type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span></span></code></pre></div><p>Access metadata. This can be used if you know the metadata is available already, otherwise use the subscription to get notified when it becomes available.</p><p>This function is blocking.</p><p><strong>Parameters</strong></p><ul><li>uint32_t <strong>compid</strong> -</li><li><a href="./classmavsdk_1_1_component_metadata.html#classmavsdk_1_1_component_metadata_1a0d85236afbbb3dc6b2dd46351a6b38bc">MetadataType</a> <strong>metadata_type</strong> -</li></ul><p><strong>Returns</strong></p><p> std::pair&lt; <a href="./classmavsdk_1_1_component_metadata.html#classmavsdk_1_1_component_metadata_1af7b6ff8c58634fac8d2670f2b882ef44">Result</a>, <a href="./structmavsdk_1_1_component_metadata_1_1_metadata_data.html">ComponentMetadata::MetadataData</a> &gt; - Result of request.</p><h3 id="classmavsdk_1_1_component_metadata_1a2be7fadaa2dad61f558430278ecf51bb" tabindex="-1">operator=() <a class="header-anchor" href="#classmavsdk_1_1_component_metadata_1a2be7fadaa2dad61f558430278ecf51bb" aria-label="Permalink to &quot;operator=() {#classmavsdk_1_1_component_metadata_1a2be7fadaa2dad61f558430278ecf51bb}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ComponentMetadata</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &amp;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ComponentMetadata</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">operator</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ComponentMetadata</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=delete</span></span></code></pre></div><p>Equality operator (object is not copyable).</p><p><strong>Parameters</strong></p><ul><li>const <a href="./classmavsdk_1_1_component_metadata.html">ComponentMetadata</a>&amp; -</li></ul><p><strong>Returns</strong></p><p> const <a href="./classmavsdk_1_1_component_metadata.html">ComponentMetadata</a> &amp; -</p>',89)]))}const k=t(d,[["render",n]]);export{m as __pageData,k as default};
