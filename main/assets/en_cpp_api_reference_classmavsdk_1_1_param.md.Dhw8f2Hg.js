import{_ as s,c as t,al as i,o as e}from"./chunks/framework.BVh3rIuO.js";const o=JSON.parse('{"title":"mavsdk::Param Class Reference","description":"","frontmatter":{"github_branch":"main"},"headers":[],"relativePath":"en/cpp/api_reference/classmavsdk_1_1_param.md","filePath":"en/cpp/api_reference/classmavsdk_1_1_param.md"}'),l={name:"en/cpp/api_reference/classmavsdk_1_1_param.md"};function r(p,a,d,n,h,k){return e(),t("div",null,a[0]||(a[0]=[i('<h1 id="mavsdk-param-class-reference" tabindex="-1">mavsdk::Param Class Reference <a class="header-anchor" href="#mavsdk-param-class-reference" aria-label="Permalink to &quot;mavsdk::Param Class Reference&quot;">​</a></h1><p><code>#include: param.h</code></p><hr><p>Provide raw access to get and set parameters.</p><h2 id="data-structures" tabindex="-1">Data Structures <a class="header-anchor" href="#data-structures" aria-label="Permalink to &quot;Data Structures&quot;">​</a></h2><p>struct <a href="./structmavsdk_1_1_param_1_1_all_params.html">AllParams</a></p><p>struct <a href="./structmavsdk_1_1_param_1_1_custom_param.html">CustomParam</a></p><p>struct <a href="./structmavsdk_1_1_param_1_1_float_param.html">FloatParam</a></p><p>struct <a href="./structmavsdk_1_1_param_1_1_int_param.html">IntParam</a></p><h2 id="public-types" tabindex="-1">Public Types <a class="header-anchor" href="#public-types" aria-label="Permalink to &quot;Public Types&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>enum <a href="#classmavsdk_1_1_param_1a37807968ecb40a732b4fec83792bd5c8">ProtocolVersion</a></td><td>Parameter version.</td></tr><tr><td>enum <a href="#classmavsdk_1_1_param_1afde69c8b60c41e2f21db148d211881df">Result</a></td><td>Possible results returned for param requests.</td></tr><tr><td>std::function&lt; void(<a href="./classmavsdk_1_1_param.html#classmavsdk_1_1_param_1afde69c8b60c41e2f21db148d211881df">Result</a>)&gt; <a href="#classmavsdk_1_1_param_1a7047374c38d4220e8709c2b10275f860">ResultCallback</a></td><td>Callback type for asynchronous <a href="./classmavsdk_1_1_param.html">Param</a> calls.</td></tr></tbody></table><h2 id="public-member-functions" tabindex="-1">Public Member Functions <a class="header-anchor" href="#public-member-functions" aria-label="Permalink to &quot;Public Member Functions&quot;">​</a></h2><table tabindex="0"><thead><tr><th style="text-align:right;">Type</th><th>Name</th><th>Description</th></tr></thead><tbody><tr><td style="text-align:right;"> </td><td><a href="#classmavsdk_1_1_param_1a3f15c8d0c238a68cd97a49ba5c3ea1ef">Param</a> (<a href="./classmavsdk_1_1_system.html">System</a> &amp; system)</td><td>Constructor. Creates the plugin for a specific <a href="./classmavsdk_1_1_system.html">System</a>.</td></tr><tr><td style="text-align:right;"> </td><td><a href="#classmavsdk_1_1_param_1a08e40eaf4052555d28f2404cc7ede680">Param</a> (std::shared_ptr&lt; <a href="./classmavsdk_1_1_system.html">System</a> &gt; system)</td><td>Constructor. Creates the plugin for a specific <a href="./classmavsdk_1_1_system.html">System</a>.</td></tr><tr><td style="text-align:right;"> </td><td><a href="#classmavsdk_1_1_param_1a33f67b5c3daea8ca3af8c573f4e07153">~Param</a> () override</td><td>Destructor (internal use only).</td></tr><tr><td style="text-align:right;"> </td><td><a href="#classmavsdk_1_1_param_1ab7a03a825118c944d31c562594826f72">Param</a> (const <a href="./classmavsdk_1_1_param.html">Param</a> &amp; other)</td><td>Copy constructor.</td></tr><tr><td style="text-align:right;">std::pair&lt; <a href="./classmavsdk_1_1_param.html#classmavsdk_1_1_param_1afde69c8b60c41e2f21db148d211881df">Result</a>, int32_t &gt;</td><td><a href="#classmavsdk_1_1_param_1a554099a07baa9e4765824005f47bef94">get_param_int</a> (std::string name)const</td><td>Get an int parameter.</td></tr><tr><td style="text-align:right;"><a href="./classmavsdk_1_1_param.html#classmavsdk_1_1_param_1afde69c8b60c41e2f21db148d211881df">Result</a></td><td><a href="#classmavsdk_1_1_param_1af8124bae8b4649605a51fe2943ae8414">set_param_int</a> (std::string name, int32_t value)const</td><td>Set an int parameter.</td></tr><tr><td style="text-align:right;">std::pair&lt; <a href="./classmavsdk_1_1_param.html#classmavsdk_1_1_param_1afde69c8b60c41e2f21db148d211881df">Result</a>, float &gt;</td><td><a href="#classmavsdk_1_1_param_1ac8efd0381aa1cc2e4461dfb256797619">get_param_float</a> (std::string name)const</td><td>Get a float parameter.</td></tr><tr><td style="text-align:right;"><a href="./classmavsdk_1_1_param.html#classmavsdk_1_1_param_1afde69c8b60c41e2f21db148d211881df">Result</a></td><td><a href="#classmavsdk_1_1_param_1a58a2f14fbcda2bf73815dbc2a31528bf">set_param_float</a> (std::string name, float value)const</td><td>Set a float parameter.</td></tr><tr><td style="text-align:right;">std::pair&lt; <a href="./classmavsdk_1_1_param.html#classmavsdk_1_1_param_1afde69c8b60c41e2f21db148d211881df">Result</a>, std::string &gt;</td><td><a href="#classmavsdk_1_1_param_1a7914d3856a9e6d9b91d7f5483a260f4d">get_param_custom</a> (std::string name)const</td><td>Get a custom parameter.</td></tr><tr><td style="text-align:right;"><a href="./classmavsdk_1_1_param.html#classmavsdk_1_1_param_1afde69c8b60c41e2f21db148d211881df">Result</a></td><td><a href="#classmavsdk_1_1_param_1abb9cc4e4e14d33a93b23295f836de39e">set_param_custom</a> (std::string name, std::string value)const</td><td>Set a custom parameter.</td></tr><tr><td style="text-align:right;"><a href="./structmavsdk_1_1_param_1_1_all_params.html">Param::AllParams</a></td><td><a href="#classmavsdk_1_1_param_1ab9259e1f91809aa574404131aa540fd8">get_all_params</a> () const</td><td>Get all parameters.</td></tr><tr><td style="text-align:right;"><a href="./classmavsdk_1_1_param.html#classmavsdk_1_1_param_1afde69c8b60c41e2f21db148d211881df">Result</a></td><td><a href="#classmavsdk_1_1_param_1a2ef2e607225d54c6fedd21a9b483937f">select_component</a> (int32_t component_id, <a href="./classmavsdk_1_1_param.html#classmavsdk_1_1_param_1a37807968ecb40a732b4fec83792bd5c8">ProtocolVersion</a> protocol_version)const</td><td>Select component ID of parameter component to talk to and param protocol version.</td></tr><tr><td style="text-align:right;">const <a href="./classmavsdk_1_1_param.html">Param</a> &amp;</td><td><a href="#classmavsdk_1_1_param_1a4d75b066cb985d3a38cc8221e18aa608">operator=</a> (const <a href="./classmavsdk_1_1_param.html">Param</a> &amp;)=delete</td><td>Equality operator (object is not copyable).</td></tr></tbody></table><h2 id="constructor-destructor-documentation" tabindex="-1">Constructor &amp; Destructor Documentation <a class="header-anchor" href="#constructor-destructor-documentation" aria-label="Permalink to &quot;Constructor &amp; Destructor Documentation&quot;">​</a></h2><h3 id="classmavsdk_1_1_param_1a3f15c8d0c238a68cd97a49ba5c3ea1ef" tabindex="-1">Param() <a class="header-anchor" href="#classmavsdk_1_1_param_1a3f15c8d0c238a68cd97a49ba5c3ea1ef" aria-label="Permalink to &quot;Param() {#classmavsdk_1_1_param_1a3f15c8d0c238a68cd97a49ba5c3ea1ef}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Param</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Param</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(System </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">system)</span></span></code></pre></div><p>Constructor. Creates the plugin for a specific <a href="./classmavsdk_1_1_system.html">System</a>.</p><p>The plugin is typically created as shown below:</p><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">auto</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> param </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Param</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(system);</span></span></code></pre></div><p><strong>Parameters</strong></p><ul><li><a href="./classmavsdk_1_1_system.html">System</a>&amp; <strong>system</strong> - The specific system associated with this plugin.</li></ul><h3 id="classmavsdk_1_1_param_1a08e40eaf4052555d28f2404cc7ede680" tabindex="-1">Param() <a class="header-anchor" href="#classmavsdk_1_1_param_1a08e40eaf4052555d28f2404cc7ede680" aria-label="Permalink to &quot;Param() {#classmavsdk_1_1_param_1a08e40eaf4052555d28f2404cc7ede680}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Param</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Param</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::shared_ptr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> System </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> system)</span></span></code></pre></div><p>Constructor. Creates the plugin for a specific <a href="./classmavsdk_1_1_system.html">System</a>.</p><p>The plugin is typically created as shown below:</p><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">auto</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> param </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Param</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(system);</span></span></code></pre></div><p><strong>Parameters</strong></p><ul><li>std::shared_ptr&lt; <a href="./classmavsdk_1_1_system.html">System</a> &gt; <strong>system</strong> - The specific system associated with this plugin.</li></ul><h3 id="classmavsdk_1_1_param_1a33f67b5c3daea8ca3af8c573f4e07153" tabindex="-1">~Param() <a class="header-anchor" href="#classmavsdk_1_1_param_1a33f67b5c3daea8ca3af8c573f4e07153" aria-label="Permalink to &quot;~Param() {#classmavsdk_1_1_param_1a33f67b5c3daea8ca3af8c573f4e07153}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Param</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">~</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Param</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">override</span></span></code></pre></div><p>Destructor (internal use only).</p><h3 id="classmavsdk_1_1_param_1ab7a03a825118c944d31c562594826f72" tabindex="-1">Param() <a class="header-anchor" href="#classmavsdk_1_1_param_1ab7a03a825118c944d31c562594826f72" aria-label="Permalink to &quot;Param() {#classmavsdk_1_1_param_1ab7a03a825118c944d31c562594826f72}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Param</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Param</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Param </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">other)</span></span></code></pre></div><p>Copy constructor.</p><p><strong>Parameters</strong></p><ul><li>const <a href="./classmavsdk_1_1_param.html">Param</a>&amp; <strong>other</strong> -</li></ul><h2 id="member-typdef-documentation" tabindex="-1">Member Typdef Documentation <a class="header-anchor" href="#member-typdef-documentation" aria-label="Permalink to &quot;Member Typdef Documentation&quot;">​</a></h2><h3 id="classmavsdk_1_1_param_1a7047374c38d4220e8709c2b10275f860" tabindex="-1">typedef ResultCallback <a class="header-anchor" href="#classmavsdk_1_1_param_1a7047374c38d4220e8709c2b10275f860" aria-label="Permalink to &quot;typedef ResultCallback {#classmavsdk_1_1_param_1a7047374c38d4220e8709c2b10275f860}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Param</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::ResultCallback </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::function</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Result)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><p>Callback type for asynchronous <a href="./classmavsdk_1_1_param.html">Param</a> calls.</p><h2 id="member-enumeration-documentation" tabindex="-1">Member Enumeration Documentation <a class="header-anchor" href="#member-enumeration-documentation" aria-label="Permalink to &quot;Member Enumeration Documentation&quot;">​</a></h2><h3 id="classmavsdk_1_1_param_1a37807968ecb40a732b4fec83792bd5c8" tabindex="-1">enum ProtocolVersion <a class="header-anchor" href="#classmavsdk_1_1_param_1a37807968ecb40a732b4fec83792bd5c8" aria-label="Permalink to &quot;enum ProtocolVersion {#classmavsdk_1_1_param_1a37807968ecb40a732b4fec83792bd5c8}&quot;">​</a></h3><p>Parameter version.</p><table tabindex="0"><thead><tr><th>Value</th><th>Description</th></tr></thead><tbody><tr><td><span id="classmavsdk_1_1_param_1a37807968ecb40a732b4fec83792bd5c8ab4daca084ad9eabfc8de231929477ed6"></span> <code>V1</code></td><td>Original v1 version.</td></tr><tr><td><span id="classmavsdk_1_1_param_1a37807968ecb40a732b4fec83792bd5c8a84ab79217fad62904ab3f60586129611"></span> <code>Ext</code></td><td>Extended param version.</td></tr></tbody></table><h3 id="classmavsdk_1_1_param_1afde69c8b60c41e2f21db148d211881df" tabindex="-1">enum Result <a class="header-anchor" href="#classmavsdk_1_1_param_1afde69c8b60c41e2f21db148d211881df" aria-label="Permalink to &quot;enum Result {#classmavsdk_1_1_param_1afde69c8b60c41e2f21db148d211881df}&quot;">​</a></h3><p>Possible results returned for param requests.</p><table tabindex="0"><thead><tr><th>Value</th><th>Description</th></tr></thead><tbody><tr><td><span id="classmavsdk_1_1_param_1afde69c8b60c41e2f21db148d211881dfa88183b946cc5f0e8c96b2e66e1c74a7e"></span> <code>Unknown</code></td><td>Unknown result.</td></tr><tr><td><span id="classmavsdk_1_1_param_1afde69c8b60c41e2f21db148d211881dfa505a83f220c02df2f85c3810cd9ceb38"></span> <code>Success</code></td><td>Request succeeded.</td></tr><tr><td><span id="classmavsdk_1_1_param_1afde69c8b60c41e2f21db148d211881dfac85a251cc457840f1e032f1b733e9398"></span> <code>Timeout</code></td><td>Request timed out.</td></tr><tr><td><span id="classmavsdk_1_1_param_1afde69c8b60c41e2f21db148d211881dfa094a6f6b0868122a9dd008cb91c083e4"></span> <code>ConnectionError</code></td><td>Connection error.</td></tr><tr><td><span id="classmavsdk_1_1_param_1afde69c8b60c41e2f21db148d211881dfafdf152936dcbf201445440856357f6ac"></span> <code>WrongType</code></td><td>Wrong type.</td></tr><tr><td><span id="classmavsdk_1_1_param_1afde69c8b60c41e2f21db148d211881dfaa2b5cfc4e45ca036892b3dadc483e655"></span> <code>ParamNameTooLong</code></td><td>Parameter name too long (&gt; 16).</td></tr><tr><td><span id="classmavsdk_1_1_param_1afde69c8b60c41e2f21db148d211881dfa1119faf72ba0dfb23aeea644fed960ad"></span> <code>NoSystem</code></td><td>No system connected.</td></tr><tr><td><span id="classmavsdk_1_1_param_1afde69c8b60c41e2f21db148d211881dfa1fc93bc695e2e3e1903029eb77228234"></span> <code>ParamValueTooLong</code></td><td><a href="./classmavsdk_1_1_param.html">Param</a> value too long (&gt; 128).</td></tr><tr><td><span id="classmavsdk_1_1_param_1afde69c8b60c41e2f21db148d211881dfad7c8c85bf79bbe1b7188497c32c3b0ca"></span> <code>Failed</code></td><td>Operation failed..</td></tr></tbody></table><h2 id="member-function-documentation" tabindex="-1">Member Function Documentation <a class="header-anchor" href="#member-function-documentation" aria-label="Permalink to &quot;Member Function Documentation&quot;">​</a></h2><h3 id="classmavsdk_1_1_param_1a554099a07baa9e4765824005f47bef94" tabindex="-1">get_param_int() <a class="header-anchor" href="#classmavsdk_1_1_param_1a554099a07baa9e4765824005f47bef94" aria-label="Permalink to &quot;get_param_int() {#classmavsdk_1_1_param_1a554099a07baa9e4765824005f47bef94}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pair</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Result</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int32_t</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Param</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get_param_int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">string</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span></span></code></pre></div><p>Get an int parameter.</p><p>If the type is wrong, the result will be <code>WRONG_TYPE</code>.</p><p>This function is blocking.</p><p><strong>Parameters</strong></p><ul><li>std::string <strong>name</strong> -</li></ul><p><strong>Returns</strong></p><p> std::pair&lt; <a href="./classmavsdk_1_1_param.html#classmavsdk_1_1_param_1afde69c8b60c41e2f21db148d211881df">Result</a>, int32_t &gt; - Result of request.</p><h3 id="classmavsdk_1_1_param_1af8124bae8b4649605a51fe2943ae8414" tabindex="-1">set_param_int() <a class="header-anchor" href="#classmavsdk_1_1_param_1af8124bae8b4649605a51fe2943ae8414" aria-label="Permalink to &quot;set_param_int() {#classmavsdk_1_1_param_1af8124bae8b4649605a51fe2943ae8414}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Result</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Param</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">set_param_int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">string</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int32_t</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span></span></code></pre></div><p>Set an int parameter.</p><p>If the type is wrong, the result will be <code>WRONG_TYPE</code>.</p><p>This function is blocking.</p><p><strong>Parameters</strong></p><ul><li>std::string <strong>name</strong> -</li><li>int32_t <strong>value</strong> -</li></ul><p><strong>Returns</strong></p><p> <a href="./classmavsdk_1_1_param.html#classmavsdk_1_1_param_1afde69c8b60c41e2f21db148d211881df">Result</a> - Result of request.</p><h3 id="classmavsdk_1_1_param_1ac8efd0381aa1cc2e4461dfb256797619" tabindex="-1">get_param_float() <a class="header-anchor" href="#classmavsdk_1_1_param_1ac8efd0381aa1cc2e4461dfb256797619" aria-label="Permalink to &quot;get_param_float() {#classmavsdk_1_1_param_1ac8efd0381aa1cc2e4461dfb256797619}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pair</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Result</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Param</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get_param_float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">string</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span></span></code></pre></div><p>Get a float parameter.</p><p>If the type is wrong, the result will be <code>WRONG_TYPE</code>.</p><p>This function is blocking.</p><p><strong>Parameters</strong></p><ul><li>std::string <strong>name</strong> -</li></ul><p><strong>Returns</strong></p><p> std::pair&lt; <a href="./classmavsdk_1_1_param.html#classmavsdk_1_1_param_1afde69c8b60c41e2f21db148d211881df">Result</a>, float &gt; - Result of request.</p><h3 id="classmavsdk_1_1_param_1a58a2f14fbcda2bf73815dbc2a31528bf" tabindex="-1">set_param_float() <a class="header-anchor" href="#classmavsdk_1_1_param_1a58a2f14fbcda2bf73815dbc2a31528bf" aria-label="Permalink to &quot;set_param_float() {#classmavsdk_1_1_param_1a58a2f14fbcda2bf73815dbc2a31528bf}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Result</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Param</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">set_param_float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">string</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">float</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span></span></code></pre></div><p>Set a float parameter.</p><p>If the type is wrong, the result will be <code>WRONG_TYPE</code>.</p><p>This function is blocking.</p><p><strong>Parameters</strong></p><ul><li>std::string <strong>name</strong> -</li><li>float <strong>value</strong> -</li></ul><p><strong>Returns</strong></p><p> <a href="./classmavsdk_1_1_param.html#classmavsdk_1_1_param_1afde69c8b60c41e2f21db148d211881df">Result</a> - Result of request.</p><h3 id="classmavsdk_1_1_param_1a7914d3856a9e6d9b91d7f5483a260f4d" tabindex="-1">get_param_custom() <a class="header-anchor" href="#classmavsdk_1_1_param_1a7914d3856a9e6d9b91d7f5483a260f4d" aria-label="Permalink to &quot;get_param_custom() {#classmavsdk_1_1_param_1a7914d3856a9e6d9b91d7f5483a260f4d}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pair</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Result</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Param</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get_param_custom</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">string</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span></span></code></pre></div><p>Get a custom parameter.</p><p>If the type is wrong, the result will be <code>WRONG_TYPE</code>.</p><p>This function is blocking.</p><p><strong>Parameters</strong></p><ul><li>std::string <strong>name</strong> -</li></ul><p><strong>Returns</strong></p><p> std::pair&lt; <a href="./classmavsdk_1_1_param.html#classmavsdk_1_1_param_1afde69c8b60c41e2f21db148d211881df">Result</a>, std::string &gt; - Result of request.</p><h3 id="classmavsdk_1_1_param_1abb9cc4e4e14d33a93b23295f836de39e" tabindex="-1">set_param_custom() <a class="header-anchor" href="#classmavsdk_1_1_param_1abb9cc4e4e14d33a93b23295f836de39e" aria-label="Permalink to &quot;set_param_custom() {#classmavsdk_1_1_param_1abb9cc4e4e14d33a93b23295f836de39e}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Result</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Param</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">set_param_custom</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">string</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">string</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span></span></code></pre></div><p>Set a custom parameter.</p><p>If the type is wrong, the result will be <code>WRONG_TYPE</code>.</p><p>This function is blocking.</p><p><strong>Parameters</strong></p><ul><li>std::string <strong>name</strong> -</li><li>std::string <strong>value</strong> -</li></ul><p><strong>Returns</strong></p><p> <a href="./classmavsdk_1_1_param.html#classmavsdk_1_1_param_1afde69c8b60c41e2f21db148d211881df">Result</a> - Result of request.</p><h3 id="classmavsdk_1_1_param_1ab9259e1f91809aa574404131aa540fd8" tabindex="-1">get_all_params() <a class="header-anchor" href="#classmavsdk_1_1_param_1ab9259e1f91809aa574404131aa540fd8" aria-label="Permalink to &quot;get_all_params() {#classmavsdk_1_1_param_1ab9259e1f91809aa574404131aa540fd8}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Param</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">AllParams</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Param</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get_all_params</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span></span></code></pre></div><p>Get all parameters.</p><p>This function is blocking.</p><p><strong>Returns</strong></p><p> <a href="./structmavsdk_1_1_param_1_1_all_params.html">Param::AllParams</a> - Result of request.</p><h3 id="classmavsdk_1_1_param_1a2ef2e607225d54c6fedd21a9b483937f" tabindex="-1">select_component() <a class="header-anchor" href="#classmavsdk_1_1_param_1a2ef2e607225d54c6fedd21a9b483937f" aria-label="Permalink to &quot;select_component() {#classmavsdk_1_1_param_1a2ef2e607225d54c6fedd21a9b483937f}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Result</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Param</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">select_component</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int32_t</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> component_id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ProtocolVersion</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> protocol_version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span></span></code></pre></div><p>Select component ID of parameter component to talk to and param protocol version.</p><p>Default is the autopilot component (1), and Version (0).</p><p>This function is blocking.</p><p><strong>Parameters</strong></p><ul><li>int32_t <strong>component_id</strong> -</li><li><a href="./classmavsdk_1_1_param.html#classmavsdk_1_1_param_1a37807968ecb40a732b4fec83792bd5c8">ProtocolVersion</a> <strong>protocol_version</strong> -</li></ul><p><strong>Returns</strong></p><p> <a href="./classmavsdk_1_1_param.html#classmavsdk_1_1_param_1afde69c8b60c41e2f21db148d211881df">Result</a> - Result of request.</p><h3 id="classmavsdk_1_1_param_1a4d75b066cb985d3a38cc8221e18aa608" tabindex="-1">operator=() <a class="header-anchor" href="#classmavsdk_1_1_param_1a4d75b066cb985d3a38cc8221e18aa608" aria-label="Permalink to &quot;operator=() {#classmavsdk_1_1_param_1a4d75b066cb985d3a38cc8221e18aa608}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Param</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Param</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">operator</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Param</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=delete</span></span></code></pre></div><p>Equality operator (object is not copyable).</p><p><strong>Parameters</strong></p><ul><li>const <a href="./classmavsdk_1_1_param.html">Param</a>&amp; -</li></ul><p><strong>Returns</strong></p><p> const <a href="./classmavsdk_1_1_param.html">Param</a> &amp; -</p>',124)]))}const m=s(l,[["render",r]]);export{o as __pageData,m as default};
