import{_ as s,c as i,al as t,o as e}from"./chunks/framework.BVh3rIuO.js";const o=JSON.parse('{"title":"mavsdk::Gimbal Class Reference","description":"","frontmatter":{"github_branch":"main"},"headers":[],"relativePath":"en/cpp/api_reference/classmavsdk_1_1_gimbal.md","filePath":"en/cpp/api_reference/classmavsdk_1_1_gimbal.md"}'),l={name:"en/cpp/api_reference/classmavsdk_1_1_gimbal.md"};function d(n,a,h,c,r,p){return e(),i("div",null,a[0]||(a[0]=[t('<h1 id="mavsdk-gimbal-class-reference" tabindex="-1">mavsdk::Gimbal Class Reference <a class="header-anchor" href="#mavsdk-gimbal-class-reference" aria-label="Permalink to &quot;mavsdk::Gimbal Class Reference&quot;">​</a></h1><p><code>#include: gimbal.h</code></p><hr><p>Provide control over a gimbal.</p><h2 id="data-structures" tabindex="-1">Data Structures <a class="header-anchor" href="#data-structures" aria-label="Permalink to &quot;Data Structures&quot;">​</a></h2><p>struct <a href="./structmavsdk_1_1_gimbal_1_1_control_status.html">ControlStatus</a></p><h2 id="public-types" tabindex="-1">Public Types <a class="header-anchor" href="#public-types" aria-label="Permalink to &quot;Public Types&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>enum <a href="#classmavsdk_1_1_gimbal_1afb92614c5d5915d3960bcea51bec2dca">GimbalMode</a></td><td><a href="./classmavsdk_1_1_gimbal.html">Gimbal</a> mode type.</td></tr><tr><td>enum <a href="#classmavsdk_1_1_gimbal_1a01b721086d7de6089aefdeb0fda4cff3">ControlMode</a></td><td>Control mode.</td></tr><tr><td>enum <a href="#classmavsdk_1_1_gimbal_1aa732ec0bd49ac03b7910199d635f76ac">Result</a></td><td>Possible results returned for gimbal commands.</td></tr><tr><td>std::function&lt; void(<a href="./classmavsdk_1_1_gimbal.html#classmavsdk_1_1_gimbal_1aa732ec0bd49ac03b7910199d635f76ac">Result</a>)&gt; <a href="#classmavsdk_1_1_gimbal_1a88ee7dd17821fb9b12c44b2a3630c197">ResultCallback</a></td><td>Callback type for asynchronous <a href="./classmavsdk_1_1_gimbal.html">Gimbal</a> calls.</td></tr><tr><td>std::function&lt; void(<a href="./structmavsdk_1_1_gimbal_1_1_control_status.html">ControlStatus</a>)&gt; <a href="#classmavsdk_1_1_gimbal_1a1645ab20c41161e6c47620b7352eef62">ControlCallback</a></td><td>Callback type for subscribe_control.</td></tr><tr><td><a href="./classmavsdk_1_1_handle.html">Handle</a>&lt; <a href="./structmavsdk_1_1_gimbal_1_1_control_status.html">ControlStatus</a> &gt; <a href="#classmavsdk_1_1_gimbal_1accab76c321008685a455ccff45811397">ControlHandle</a></td><td><a href="./classmavsdk_1_1_handle.html">Handle</a> type for subscribe_control.</td></tr></tbody></table><h2 id="public-member-functions" tabindex="-1">Public Member Functions <a class="header-anchor" href="#public-member-functions" aria-label="Permalink to &quot;Public Member Functions&quot;">​</a></h2><table tabindex="0"><thead><tr><th style="text-align:right;">Type</th><th>Name</th><th>Description</th></tr></thead><tbody><tr><td style="text-align:right;"> </td><td><a href="#classmavsdk_1_1_gimbal_1aa33f4df704c7f09698884083c379f787">Gimbal</a> (<a href="./classmavsdk_1_1_system.html">System</a> &amp; system)</td><td>Constructor. Creates the plugin for a specific <a href="./classmavsdk_1_1_system.html">System</a>.</td></tr><tr><td style="text-align:right;"> </td><td><a href="#classmavsdk_1_1_gimbal_1aa3cb6e1e37a2f275ab5cc8ed4dd71d93">Gimbal</a> (std::shared_ptr&lt; <a href="./classmavsdk_1_1_system.html">System</a> &gt; system)</td><td>Constructor. Creates the plugin for a specific <a href="./classmavsdk_1_1_system.html">System</a>.</td></tr><tr><td style="text-align:right;"> </td><td><a href="#classmavsdk_1_1_gimbal_1a3b86d8209172a578f238928b9f5bfdd6">~Gimbal</a> () override</td><td>Destructor (internal use only).</td></tr><tr><td style="text-align:right;"> </td><td><a href="#classmavsdk_1_1_gimbal_1ae69df278ca37deaee22fb13053fd4f2d">Gimbal</a> (const <a href="./classmavsdk_1_1_gimbal.html">Gimbal</a> &amp; other)</td><td>Copy constructor.</td></tr><tr><td style="text-align:right;">void</td><td><a href="#classmavsdk_1_1_gimbal_1a325a49cc256359013cbc917b3576f292">set_pitch_and_yaw_async</a> (float pitch_deg, float yaw_deg, const <a href="./classmavsdk_1_1_gimbal.html#classmavsdk_1_1_gimbal_1a88ee7dd17821fb9b12c44b2a3630c197">ResultCallback</a> callback)</td><td>Set gimbal pitch and yaw angles.</td></tr><tr><td style="text-align:right;"><a href="./classmavsdk_1_1_gimbal.html#classmavsdk_1_1_gimbal_1aa732ec0bd49ac03b7910199d635f76ac">Result</a></td><td><a href="#classmavsdk_1_1_gimbal_1ad65ba3258833fe78f2939b9b72dc3b88">set_pitch_and_yaw</a> (float pitch_deg, float yaw_deg)const</td><td>Set gimbal pitch and yaw angles.</td></tr><tr><td style="text-align:right;">void</td><td><a href="#classmavsdk_1_1_gimbal_1a161b3f85cd9fa30439774ef47a10c51d">set_pitch_rate_and_yaw_rate_async</a> (float pitch_rate_deg_s, float yaw_rate_deg_s, const <a href="./classmavsdk_1_1_gimbal.html#classmavsdk_1_1_gimbal_1a88ee7dd17821fb9b12c44b2a3630c197">ResultCallback</a> callback)</td><td>Set gimbal angular rates around pitch and yaw axes.</td></tr><tr><td style="text-align:right;"><a href="./classmavsdk_1_1_gimbal.html#classmavsdk_1_1_gimbal_1aa732ec0bd49ac03b7910199d635f76ac">Result</a></td><td><a href="#classmavsdk_1_1_gimbal_1a2ad12582d192d8594d7da315e2729129">set_pitch_rate_and_yaw_rate</a> (float pitch_rate_deg_s, float yaw_rate_deg_s)const</td><td>Set gimbal angular rates around pitch and yaw axes.</td></tr><tr><td style="text-align:right;">void</td><td><a href="#classmavsdk_1_1_gimbal_1ad69853994c134b0e88d0f94744254066">set_mode_async</a> (<a href="./classmavsdk_1_1_gimbal.html#classmavsdk_1_1_gimbal_1afb92614c5d5915d3960bcea51bec2dca">GimbalMode</a> gimbal_mode, const <a href="./classmavsdk_1_1_gimbal.html#classmavsdk_1_1_gimbal_1a88ee7dd17821fb9b12c44b2a3630c197">ResultCallback</a> callback)</td><td>Set gimbal mode.</td></tr><tr><td style="text-align:right;"><a href="./classmavsdk_1_1_gimbal.html#classmavsdk_1_1_gimbal_1aa732ec0bd49ac03b7910199d635f76ac">Result</a></td><td><a href="#classmavsdk_1_1_gimbal_1a037285883ceba14e0df9c7f8c19f4423">set_mode</a> (<a href="./classmavsdk_1_1_gimbal.html#classmavsdk_1_1_gimbal_1afb92614c5d5915d3960bcea51bec2dca">GimbalMode</a> gimbal_mode)const</td><td>Set gimbal mode.</td></tr><tr><td style="text-align:right;">void</td><td><a href="#classmavsdk_1_1_gimbal_1ab3c42a7042231e48dfab881030fe30c0">set_roi_location_async</a> (double latitude_deg, double longitude_deg, float altitude_m, const <a href="./classmavsdk_1_1_gimbal.html#classmavsdk_1_1_gimbal_1a88ee7dd17821fb9b12c44b2a3630c197">ResultCallback</a> callback)</td><td>Set gimbal region of interest (ROI).</td></tr><tr><td style="text-align:right;"><a href="./classmavsdk_1_1_gimbal.html#classmavsdk_1_1_gimbal_1aa732ec0bd49ac03b7910199d635f76ac">Result</a></td><td><a href="#classmavsdk_1_1_gimbal_1a035ddc270efce19a9be54b98add57919">set_roi_location</a> (double latitude_deg, double longitude_deg, float altitude_m)const</td><td>Set gimbal region of interest (ROI).</td></tr><tr><td style="text-align:right;">void</td><td><a href="#classmavsdk_1_1_gimbal_1a331139df593e8ccef0f8ca7652f2d2bc">take_control_async</a> (<a href="./classmavsdk_1_1_gimbal.html#classmavsdk_1_1_gimbal_1a01b721086d7de6089aefdeb0fda4cff3">ControlMode</a> control_mode, const <a href="./classmavsdk_1_1_gimbal.html#classmavsdk_1_1_gimbal_1a88ee7dd17821fb9b12c44b2a3630c197">ResultCallback</a> callback)</td><td>Take control.</td></tr><tr><td style="text-align:right;"><a href="./classmavsdk_1_1_gimbal.html#classmavsdk_1_1_gimbal_1aa732ec0bd49ac03b7910199d635f76ac">Result</a></td><td><a href="#classmavsdk_1_1_gimbal_1a7dabe20d1bceb7031440fefba59cd707">take_control</a> (<a href="./classmavsdk_1_1_gimbal.html#classmavsdk_1_1_gimbal_1a01b721086d7de6089aefdeb0fda4cff3">ControlMode</a> control_mode)const</td><td>Take control.</td></tr><tr><td style="text-align:right;">void</td><td><a href="#classmavsdk_1_1_gimbal_1aa58402c4e2d9506dbe9839ef8cbfb920">release_control_async</a> (const <a href="./classmavsdk_1_1_gimbal.html#classmavsdk_1_1_gimbal_1a88ee7dd17821fb9b12c44b2a3630c197">ResultCallback</a> callback)</td><td>Release control.</td></tr><tr><td style="text-align:right;"><a href="./classmavsdk_1_1_gimbal.html#classmavsdk_1_1_gimbal_1aa732ec0bd49ac03b7910199d635f76ac">Result</a></td><td><a href="#classmavsdk_1_1_gimbal_1ab994d4130b2956e2d33613ffb2127335">release_control</a> () const</td><td>Release control.</td></tr><tr><td style="text-align:right;"><a href="./classmavsdk_1_1_gimbal.html#classmavsdk_1_1_gimbal_1accab76c321008685a455ccff45811397">ControlHandle</a></td><td><a href="#classmavsdk_1_1_gimbal_1aafd016582be5b63d9b378d414f2faf30">subscribe_control</a> (const <a href="./classmavsdk_1_1_gimbal.html#classmavsdk_1_1_gimbal_1a1645ab20c41161e6c47620b7352eef62">ControlCallback</a> &amp; callback)</td><td>Subscribe to control status updates.</td></tr><tr><td style="text-align:right;">void</td><td><a href="#classmavsdk_1_1_gimbal_1a899b442fafac1d83b9450bd219f6975e">unsubscribe_control</a> (<a href="./classmavsdk_1_1_gimbal.html#classmavsdk_1_1_gimbal_1accab76c321008685a455ccff45811397">ControlHandle</a> handle)</td><td>Unsubscribe from subscribe_control.</td></tr><tr><td style="text-align:right;"><a href="./structmavsdk_1_1_gimbal_1_1_control_status.html">ControlStatus</a></td><td><a href="#classmavsdk_1_1_gimbal_1aae172788140e37d6125b224f5e79829e">control</a> () const</td><td>Poll for &#39;<a href="./structmavsdk_1_1_gimbal_1_1_control_status.html">ControlStatus</a>&#39; (blocking).</td></tr><tr><td style="text-align:right;">const <a href="./classmavsdk_1_1_gimbal.html">Gimbal</a> &amp;</td><td><a href="#classmavsdk_1_1_gimbal_1ac9a6e1936f58ce8f957be7c6bcc0d134">operator=</a> (const <a href="./classmavsdk_1_1_gimbal.html">Gimbal</a> &amp;)=delete</td><td>Equality operator (object is not copyable).</td></tr></tbody></table><h2 id="constructor-destructor-documentation" tabindex="-1">Constructor &amp; Destructor Documentation <a class="header-anchor" href="#constructor-destructor-documentation" aria-label="Permalink to &quot;Constructor &amp; Destructor Documentation&quot;">​</a></h2><h3 id="classmavsdk_1_1_gimbal_1aa33f4df704c7f09698884083c379f787" tabindex="-1">Gimbal() <a class="header-anchor" href="#classmavsdk_1_1_gimbal_1aa33f4df704c7f09698884083c379f787" aria-label="Permalink to &quot;Gimbal() {#classmavsdk_1_1_gimbal_1aa33f4df704c7f09698884083c379f787}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Gimbal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Gimbal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(System </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">system)</span></span></code></pre></div><p>Constructor. Creates the plugin for a specific <a href="./classmavsdk_1_1_system.html">System</a>.</p><p>The plugin is typically created as shown below:</p><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">auto</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> gimbal </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Gimbal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(system);</span></span></code></pre></div><p><strong>Parameters</strong></p><ul><li><a href="./classmavsdk_1_1_system.html">System</a>&amp; <strong>system</strong> - The specific system associated with this plugin.</li></ul><h3 id="classmavsdk_1_1_gimbal_1aa3cb6e1e37a2f275ab5cc8ed4dd71d93" tabindex="-1">Gimbal() <a class="header-anchor" href="#classmavsdk_1_1_gimbal_1aa3cb6e1e37a2f275ab5cc8ed4dd71d93" aria-label="Permalink to &quot;Gimbal() {#classmavsdk_1_1_gimbal_1aa3cb6e1e37a2f275ab5cc8ed4dd71d93}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Gimbal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Gimbal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::shared_ptr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> System </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> system)</span></span></code></pre></div><p>Constructor. Creates the plugin for a specific <a href="./classmavsdk_1_1_system.html">System</a>.</p><p>The plugin is typically created as shown below:</p><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">auto</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> gimbal </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Gimbal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(system);</span></span></code></pre></div><p><strong>Parameters</strong></p><ul><li>std::shared_ptr&lt; <a href="./classmavsdk_1_1_system.html">System</a> &gt; <strong>system</strong> - The specific system associated with this plugin.</li></ul><h3 id="classmavsdk_1_1_gimbal_1a3b86d8209172a578f238928b9f5bfdd6" tabindex="-1">~Gimbal() <a class="header-anchor" href="#classmavsdk_1_1_gimbal_1a3b86d8209172a578f238928b9f5bfdd6" aria-label="Permalink to &quot;~Gimbal() {#classmavsdk_1_1_gimbal_1a3b86d8209172a578f238928b9f5bfdd6}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Gimbal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">~</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Gimbal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">override</span></span></code></pre></div><p>Destructor (internal use only).</p><h3 id="classmavsdk_1_1_gimbal_1ae69df278ca37deaee22fb13053fd4f2d" tabindex="-1">Gimbal() <a class="header-anchor" href="#classmavsdk_1_1_gimbal_1ae69df278ca37deaee22fb13053fd4f2d" aria-label="Permalink to &quot;Gimbal() {#classmavsdk_1_1_gimbal_1ae69df278ca37deaee22fb13053fd4f2d}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Gimbal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Gimbal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Gimbal </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">other)</span></span></code></pre></div><p>Copy constructor.</p><p><strong>Parameters</strong></p><ul><li>const <a href="./classmavsdk_1_1_gimbal.html">Gimbal</a>&amp; <strong>other</strong> -</li></ul><h2 id="member-typdef-documentation" tabindex="-1">Member Typdef Documentation <a class="header-anchor" href="#member-typdef-documentation" aria-label="Permalink to &quot;Member Typdef Documentation&quot;">​</a></h2><h3 id="classmavsdk_1_1_gimbal_1a88ee7dd17821fb9b12c44b2a3630c197" tabindex="-1">typedef ResultCallback <a class="header-anchor" href="#classmavsdk_1_1_gimbal_1a88ee7dd17821fb9b12c44b2a3630c197" aria-label="Permalink to &quot;typedef ResultCallback {#classmavsdk_1_1_gimbal_1a88ee7dd17821fb9b12c44b2a3630c197}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Gimbal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::ResultCallback </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::function</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Result)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><p>Callback type for asynchronous <a href="./classmavsdk_1_1_gimbal.html">Gimbal</a> calls.</p><h3 id="classmavsdk_1_1_gimbal_1a1645ab20c41161e6c47620b7352eef62" tabindex="-1">typedef ControlCallback <a class="header-anchor" href="#classmavsdk_1_1_gimbal_1a1645ab20c41161e6c47620b7352eef62" aria-label="Permalink to &quot;typedef ControlCallback {#classmavsdk_1_1_gimbal_1a1645ab20c41161e6c47620b7352eef62}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Gimbal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::ControlCallback </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::function</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ControlStatus)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><p>Callback type for subscribe_control.</p><h3 id="classmavsdk_1_1_gimbal_1accab76c321008685a455ccff45811397" tabindex="-1">typedef ControlHandle <a class="header-anchor" href="#classmavsdk_1_1_gimbal_1accab76c321008685a455ccff45811397" aria-label="Permalink to &quot;typedef ControlHandle {#classmavsdk_1_1_gimbal_1accab76c321008685a455ccff45811397}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Gimbal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::ControlHandle </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  Handle</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ControlStatus</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><p><a href="./classmavsdk_1_1_handle.html">Handle</a> type for subscribe_control.</p><h2 id="member-enumeration-documentation" tabindex="-1">Member Enumeration Documentation <a class="header-anchor" href="#member-enumeration-documentation" aria-label="Permalink to &quot;Member Enumeration Documentation&quot;">​</a></h2><h3 id="classmavsdk_1_1_gimbal_1afb92614c5d5915d3960bcea51bec2dca" tabindex="-1">enum GimbalMode <a class="header-anchor" href="#classmavsdk_1_1_gimbal_1afb92614c5d5915d3960bcea51bec2dca" aria-label="Permalink to &quot;enum GimbalMode {#classmavsdk_1_1_gimbal_1afb92614c5d5915d3960bcea51bec2dca}&quot;">​</a></h3><p><a href="./classmavsdk_1_1_gimbal.html">Gimbal</a> mode type.</p><table tabindex="0"><thead><tr><th>Value</th><th>Description</th></tr></thead><tbody><tr><td><span id="classmavsdk_1_1_gimbal_1afb92614c5d5915d3960bcea51bec2dcaae370d3502f507d9c9ea57d6fd3c4ed7b"></span> <code>YawFollow</code></td><td>Yaw follow will point the gimbal to the vehicle heading.</td></tr><tr><td><span id="classmavsdk_1_1_gimbal_1afb92614c5d5915d3960bcea51bec2dcaaf0a46b0b7151dca1ab120e02b6e6663e"></span> <code>YawLock</code></td><td>Yaw lock will fix the gimbal pointing to an absolute direction.</td></tr></tbody></table><h3 id="classmavsdk_1_1_gimbal_1a01b721086d7de6089aefdeb0fda4cff3" tabindex="-1">enum ControlMode <a class="header-anchor" href="#classmavsdk_1_1_gimbal_1a01b721086d7de6089aefdeb0fda4cff3" aria-label="Permalink to &quot;enum ControlMode {#classmavsdk_1_1_gimbal_1a01b721086d7de6089aefdeb0fda4cff3}&quot;">​</a></h3><p>Control mode.</p><table tabindex="0"><thead><tr><th>Value</th><th>Description</th></tr></thead><tbody><tr><td><span id="classmavsdk_1_1_gimbal_1a01b721086d7de6089aefdeb0fda4cff3a6adf97f83acf6453d4a6a4b1070f3754"></span> <code>None</code></td><td>Indicates that the component does not have control over the gimbal.</td></tr><tr><td><span id="classmavsdk_1_1_gimbal_1a01b721086d7de6089aefdeb0fda4cff3a074de7e7c226d5c60f8af14c20725352"></span> <code>Primary</code></td><td>To take primary control over the gimbal.</td></tr><tr><td><span id="classmavsdk_1_1_gimbal_1a01b721086d7de6089aefdeb0fda4cff3a0c7d6cf19426e01dcfa32434828ed266"></span> <code>Secondary</code></td><td>To take secondary control over the gimbal.</td></tr></tbody></table><h3 id="classmavsdk_1_1_gimbal_1aa732ec0bd49ac03b7910199d635f76ac" tabindex="-1">enum Result <a class="header-anchor" href="#classmavsdk_1_1_gimbal_1aa732ec0bd49ac03b7910199d635f76ac" aria-label="Permalink to &quot;enum Result {#classmavsdk_1_1_gimbal_1aa732ec0bd49ac03b7910199d635f76ac}&quot;">​</a></h3><p>Possible results returned for gimbal commands.</p><table tabindex="0"><thead><tr><th>Value</th><th>Description</th></tr></thead><tbody><tr><td><span id="classmavsdk_1_1_gimbal_1aa732ec0bd49ac03b7910199d635f76aca88183b946cc5f0e8c96b2e66e1c74a7e"></span> <code>Unknown</code></td><td>Unknown result.</td></tr><tr><td><span id="classmavsdk_1_1_gimbal_1aa732ec0bd49ac03b7910199d635f76aca505a83f220c02df2f85c3810cd9ceb38"></span> <code>Success</code></td><td>Command was accepted.</td></tr><tr><td><span id="classmavsdk_1_1_gimbal_1aa732ec0bd49ac03b7910199d635f76aca902b0d55fddef6f8d651fe1035b7d4bd"></span> <code>Error</code></td><td>Error occurred sending the command.</td></tr><tr><td><span id="classmavsdk_1_1_gimbal_1aa732ec0bd49ac03b7910199d635f76acac85a251cc457840f1e032f1b733e9398"></span> <code>Timeout</code></td><td>Command timed out.</td></tr><tr><td><span id="classmavsdk_1_1_gimbal_1aa732ec0bd49ac03b7910199d635f76acab4080bdf74febf04d578ff105cce9d3f"></span> <code>Unsupported</code></td><td>Functionality not supported.</td></tr><tr><td><span id="classmavsdk_1_1_gimbal_1aa732ec0bd49ac03b7910199d635f76aca1119faf72ba0dfb23aeea644fed960ad"></span> <code>NoSystem</code></td><td>No system connected.</td></tr></tbody></table><h2 id="member-function-documentation" tabindex="-1">Member Function Documentation <a class="header-anchor" href="#member-function-documentation" aria-label="Permalink to &quot;Member Function Documentation&quot;">​</a></h2><h3 id="classmavsdk_1_1_gimbal_1a325a49cc256359013cbc917b3576f292" tabindex="-1">set_pitch_and_yaw_async() <a class="header-anchor" href="#classmavsdk_1_1_gimbal_1a325a49cc256359013cbc917b3576f292" aria-label="Permalink to &quot;set_pitch_and_yaw_async() {#classmavsdk_1_1_gimbal_1a325a49cc256359013cbc917b3576f292}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Gimbal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">set_pitch_and_yaw_async</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">float</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> pitch_deg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">float</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> yaw_deg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ResultCallback</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> callback</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Set gimbal pitch and yaw angles.</p><p>This sets the desired pitch and yaw angles of a gimbal. Will return when the command is accepted, however, it might take the gimbal longer to actually be set to the new angles.</p><p>This function is non-blocking. See &#39;set_pitch_and_yaw&#39; for the blocking counterpart.</p><p><strong>Parameters</strong></p><ul><li>float <strong>pitch_deg</strong> -</li><li>float <strong>yaw_deg</strong> -</li><li>const <a href="./classmavsdk_1_1_gimbal.html#classmavsdk_1_1_gimbal_1a88ee7dd17821fb9b12c44b2a3630c197">ResultCallback</a> <strong>callback</strong> -</li></ul><h3 id="classmavsdk_1_1_gimbal_1ad65ba3258833fe78f2939b9b72dc3b88" tabindex="-1">set_pitch_and_yaw() <a class="header-anchor" href="#classmavsdk_1_1_gimbal_1ad65ba3258833fe78f2939b9b72dc3b88" aria-label="Permalink to &quot;set_pitch_and_yaw() {#classmavsdk_1_1_gimbal_1ad65ba3258833fe78f2939b9b72dc3b88}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Result</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Gimbal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">set_pitch_and_yaw</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">float</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> pitch_deg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">float</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> yaw_deg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span></span></code></pre></div><p>Set gimbal pitch and yaw angles.</p><p>This sets the desired pitch and yaw angles of a gimbal. Will return when the command is accepted, however, it might take the gimbal longer to actually be set to the new angles.</p><p>This function is blocking. See &#39;set_pitch_and_yaw_async&#39; for the non-blocking counterpart.</p><p><strong>Parameters</strong></p><ul><li>float <strong>pitch_deg</strong> -</li><li>float <strong>yaw_deg</strong> -</li></ul><p><strong>Returns</strong></p><p> <a href="./classmavsdk_1_1_gimbal.html#classmavsdk_1_1_gimbal_1aa732ec0bd49ac03b7910199d635f76ac">Result</a> - Result of request.</p><h3 id="classmavsdk_1_1_gimbal_1a161b3f85cd9fa30439774ef47a10c51d" tabindex="-1">set_pitch_rate_and_yaw_rate_async() <a class="header-anchor" href="#classmavsdk_1_1_gimbal_1a161b3f85cd9fa30439774ef47a10c51d" aria-label="Permalink to &quot;set_pitch_rate_and_yaw_rate_async() {#classmavsdk_1_1_gimbal_1a161b3f85cd9fa30439774ef47a10c51d}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Gimbal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">set_pitch_rate_and_yaw_rate_async</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">float</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> pitch_rate_deg_s</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">float</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> yaw_rate_deg_s</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ResultCallback</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> callback</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Set gimbal angular rates around pitch and yaw axes.</p><p>This sets the desired angular rates around pitch and yaw axes of a gimbal. Will return when the command is accepted, however, it might take the gimbal longer to actually reach the angular rate.</p><p>This function is non-blocking. See &#39;set_pitch_rate_and_yaw_rate&#39; for the blocking counterpart.</p><p><strong>Parameters</strong></p><ul><li>float <strong>pitch_rate_deg_s</strong> -</li><li>float <strong>yaw_rate_deg_s</strong> -</li><li>const <a href="./classmavsdk_1_1_gimbal.html#classmavsdk_1_1_gimbal_1a88ee7dd17821fb9b12c44b2a3630c197">ResultCallback</a> <strong>callback</strong> -</li></ul><h3 id="classmavsdk_1_1_gimbal_1a2ad12582d192d8594d7da315e2729129" tabindex="-1">set_pitch_rate_and_yaw_rate() <a class="header-anchor" href="#classmavsdk_1_1_gimbal_1a2ad12582d192d8594d7da315e2729129" aria-label="Permalink to &quot;set_pitch_rate_and_yaw_rate() {#classmavsdk_1_1_gimbal_1a2ad12582d192d8594d7da315e2729129}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Result</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Gimbal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">set_pitch_rate_and_yaw_rate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">float</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> pitch_rate_deg_s</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">float</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> yaw_rate_deg_s</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span></span></code></pre></div><p>Set gimbal angular rates around pitch and yaw axes.</p><p>This sets the desired angular rates around pitch and yaw axes of a gimbal. Will return when the command is accepted, however, it might take the gimbal longer to actually reach the angular rate.</p><p>This function is blocking. See &#39;set_pitch_rate_and_yaw_rate_async&#39; for the non-blocking counterpart.</p><p><strong>Parameters</strong></p><ul><li>float <strong>pitch_rate_deg_s</strong> -</li><li>float <strong>yaw_rate_deg_s</strong> -</li></ul><p><strong>Returns</strong></p><p> <a href="./classmavsdk_1_1_gimbal.html#classmavsdk_1_1_gimbal_1aa732ec0bd49ac03b7910199d635f76ac">Result</a> - Result of request.</p><h3 id="classmavsdk_1_1_gimbal_1ad69853994c134b0e88d0f94744254066" tabindex="-1">set_mode_async() <a class="header-anchor" href="#classmavsdk_1_1_gimbal_1ad69853994c134b0e88d0f94744254066" aria-label="Permalink to &quot;set_mode_async() {#classmavsdk_1_1_gimbal_1ad69853994c134b0e88d0f94744254066}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Gimbal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">set_mode_async</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">GimbalMode</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> gimbal_mode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ResultCallback</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> callback</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Set gimbal mode.</p><p>This sets the desired yaw mode of a gimbal. Will return when the command is accepted. However, it might take the gimbal longer to actually be set to the new angles.</p><p>This function is non-blocking. See &#39;set_mode&#39; for the blocking counterpart.</p><p><strong>Parameters</strong></p><ul><li><a href="./classmavsdk_1_1_gimbal.html#classmavsdk_1_1_gimbal_1afb92614c5d5915d3960bcea51bec2dca">GimbalMode</a> <strong>gimbal_mode</strong> -</li><li>const <a href="./classmavsdk_1_1_gimbal.html#classmavsdk_1_1_gimbal_1a88ee7dd17821fb9b12c44b2a3630c197">ResultCallback</a> <strong>callback</strong> -</li></ul><h3 id="classmavsdk_1_1_gimbal_1a037285883ceba14e0df9c7f8c19f4423" tabindex="-1">set_mode() <a class="header-anchor" href="#classmavsdk_1_1_gimbal_1a037285883ceba14e0df9c7f8c19f4423" aria-label="Permalink to &quot;set_mode() {#classmavsdk_1_1_gimbal_1a037285883ceba14e0df9c7f8c19f4423}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Result</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Gimbal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">set_mode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">GimbalMode</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> gimbal_mode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span></span></code></pre></div><p>Set gimbal mode.</p><p>This sets the desired yaw mode of a gimbal. Will return when the command is accepted. However, it might take the gimbal longer to actually be set to the new angles.</p><p>This function is blocking. See &#39;set_mode_async&#39; for the non-blocking counterpart.</p><p><strong>Parameters</strong></p><ul><li><a href="./classmavsdk_1_1_gimbal.html#classmavsdk_1_1_gimbal_1afb92614c5d5915d3960bcea51bec2dca">GimbalMode</a> <strong>gimbal_mode</strong> -</li></ul><p><strong>Returns</strong></p><p> <a href="./classmavsdk_1_1_gimbal.html#classmavsdk_1_1_gimbal_1aa732ec0bd49ac03b7910199d635f76ac">Result</a> - Result of request.</p><h3 id="classmavsdk_1_1_gimbal_1ab3c42a7042231e48dfab881030fe30c0" tabindex="-1">set_roi_location_async() <a class="header-anchor" href="#classmavsdk_1_1_gimbal_1ab3c42a7042231e48dfab881030fe30c0" aria-label="Permalink to &quot;set_roi_location_async() {#classmavsdk_1_1_gimbal_1ab3c42a7042231e48dfab881030fe30c0}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Gimbal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">set_roi_location_async</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">double</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> latitude_deg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">double</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> longitude_deg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">float</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> altitude_m</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ResultCallback</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> callback</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Set gimbal region of interest (ROI).</p><p>This sets a region of interest that the gimbal will point to. The gimbal will continue to point to the specified region until it receives a new command. The function will return when the command is accepted, however, it might take the gimbal longer to actually rotate to the ROI.</p><p>This function is non-blocking. See &#39;set_roi_location&#39; for the blocking counterpart.</p><p><strong>Parameters</strong></p><ul><li>double <strong>latitude_deg</strong> -</li><li>double <strong>longitude_deg</strong> -</li><li>float <strong>altitude_m</strong> -</li><li>const <a href="./classmavsdk_1_1_gimbal.html#classmavsdk_1_1_gimbal_1a88ee7dd17821fb9b12c44b2a3630c197">ResultCallback</a> <strong>callback</strong> -</li></ul><h3 id="classmavsdk_1_1_gimbal_1a035ddc270efce19a9be54b98add57919" tabindex="-1">set_roi_location() <a class="header-anchor" href="#classmavsdk_1_1_gimbal_1a035ddc270efce19a9be54b98add57919" aria-label="Permalink to &quot;set_roi_location() {#classmavsdk_1_1_gimbal_1a035ddc270efce19a9be54b98add57919}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Result</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Gimbal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">set_roi_location</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">double</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> latitude_deg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">double</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> longitude_deg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">float</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> altitude_m</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span></span></code></pre></div><p>Set gimbal region of interest (ROI).</p><p>This sets a region of interest that the gimbal will point to. The gimbal will continue to point to the specified region until it receives a new command. The function will return when the command is accepted, however, it might take the gimbal longer to actually rotate to the ROI.</p><p>This function is blocking. See &#39;set_roi_location_async&#39; for the non-blocking counterpart.</p><p><strong>Parameters</strong></p><ul><li>double <strong>latitude_deg</strong> -</li><li>double <strong>longitude_deg</strong> -</li><li>float <strong>altitude_m</strong> -</li></ul><p><strong>Returns</strong></p><p> <a href="./classmavsdk_1_1_gimbal.html#classmavsdk_1_1_gimbal_1aa732ec0bd49ac03b7910199d635f76ac">Result</a> - Result of request.</p><h3 id="classmavsdk_1_1_gimbal_1a331139df593e8ccef0f8ca7652f2d2bc" tabindex="-1">take_control_async() <a class="header-anchor" href="#classmavsdk_1_1_gimbal_1a331139df593e8ccef0f8ca7652f2d2bc" aria-label="Permalink to &quot;take_control_async() {#classmavsdk_1_1_gimbal_1a331139df593e8ccef0f8ca7652f2d2bc}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Gimbal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">take_control_async</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ControlMode</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> control_mode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ResultCallback</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> callback</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Take control.</p><p>There can be only two components in control of a gimbal at any given time. One with &quot;primary&quot; control, and one with &quot;secondary&quot; control. The way the secondary control is implemented is not specified and hence depends on the vehicle.</p><p>Components are expected to be cooperative, which means that they can override each other and should therefore do it carefully.</p><p>This function is non-blocking. See &#39;take_control&#39; for the blocking counterpart.</p><p><strong>Parameters</strong></p><ul><li><a href="./classmavsdk_1_1_gimbal.html#classmavsdk_1_1_gimbal_1a01b721086d7de6089aefdeb0fda4cff3">ControlMode</a> <strong>control_mode</strong> -</li><li>const <a href="./classmavsdk_1_1_gimbal.html#classmavsdk_1_1_gimbal_1a88ee7dd17821fb9b12c44b2a3630c197">ResultCallback</a> <strong>callback</strong> -</li></ul><h3 id="classmavsdk_1_1_gimbal_1a7dabe20d1bceb7031440fefba59cd707" tabindex="-1">take_control() <a class="header-anchor" href="#classmavsdk_1_1_gimbal_1a7dabe20d1bceb7031440fefba59cd707" aria-label="Permalink to &quot;take_control() {#classmavsdk_1_1_gimbal_1a7dabe20d1bceb7031440fefba59cd707}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Result</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Gimbal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">take_control</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ControlMode</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> control_mode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span></span></code></pre></div><p>Take control.</p><p>There can be only two components in control of a gimbal at any given time. One with &quot;primary&quot; control, and one with &quot;secondary&quot; control. The way the secondary control is implemented is not specified and hence depends on the vehicle.</p><p>Components are expected to be cooperative, which means that they can override each other and should therefore do it carefully.</p><p>This function is blocking. See &#39;take_control_async&#39; for the non-blocking counterpart.</p><p><strong>Parameters</strong></p><ul><li><a href="./classmavsdk_1_1_gimbal.html#classmavsdk_1_1_gimbal_1a01b721086d7de6089aefdeb0fda4cff3">ControlMode</a> <strong>control_mode</strong> -</li></ul><p><strong>Returns</strong></p><p> <a href="./classmavsdk_1_1_gimbal.html#classmavsdk_1_1_gimbal_1aa732ec0bd49ac03b7910199d635f76ac">Result</a> - Result of request.</p><h3 id="classmavsdk_1_1_gimbal_1aa58402c4e2d9506dbe9839ef8cbfb920" tabindex="-1">release_control_async() <a class="header-anchor" href="#classmavsdk_1_1_gimbal_1aa58402c4e2d9506dbe9839ef8cbfb920" aria-label="Permalink to &quot;release_control_async() {#classmavsdk_1_1_gimbal_1aa58402c4e2d9506dbe9839ef8cbfb920}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Gimbal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">release_control_async</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ResultCallback</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> callback</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Release control.</p><p>Release control, such that other components can control the gimbal.</p><p>This function is non-blocking. See &#39;release_control&#39; for the blocking counterpart.</p><p><strong>Parameters</strong></p><ul><li>const <a href="./classmavsdk_1_1_gimbal.html#classmavsdk_1_1_gimbal_1a88ee7dd17821fb9b12c44b2a3630c197">ResultCallback</a> <strong>callback</strong> -</li></ul><h3 id="classmavsdk_1_1_gimbal_1ab994d4130b2956e2d33613ffb2127335" tabindex="-1">release_control() <a class="header-anchor" href="#classmavsdk_1_1_gimbal_1ab994d4130b2956e2d33613ffb2127335" aria-label="Permalink to &quot;release_control() {#classmavsdk_1_1_gimbal_1ab994d4130b2956e2d33613ffb2127335}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Result</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Gimbal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">release_control</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span></span></code></pre></div><p>Release control.</p><p>Release control, such that other components can control the gimbal.</p><p>This function is blocking. See &#39;release_control_async&#39; for the non-blocking counterpart.</p><p><strong>Returns</strong></p><p> <a href="./classmavsdk_1_1_gimbal.html#classmavsdk_1_1_gimbal_1aa732ec0bd49ac03b7910199d635f76ac">Result</a> - Result of request.</p><h3 id="classmavsdk_1_1_gimbal_1aafd016582be5b63d9b378d414f2faf30" tabindex="-1">subscribe_control() <a class="header-anchor" href="#classmavsdk_1_1_gimbal_1aafd016582be5b63d9b378d414f2faf30" aria-label="Permalink to &quot;subscribe_control() {#classmavsdk_1_1_gimbal_1aafd016582be5b63d9b378d414f2faf30}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ControlHandle</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Gimbal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">subscribe_control</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ControlCallback</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &amp;</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">callback</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Subscribe to control status updates.</p><p>This allows a component to know if it has primary, secondary or no control over the gimbal. Also, it gives the system and component ids of the other components in control (if any).</p><p><strong>Parameters</strong></p><ul><li>const <a href="./classmavsdk_1_1_gimbal.html#classmavsdk_1_1_gimbal_1a1645ab20c41161e6c47620b7352eef62">ControlCallback</a>&amp; <strong>callback</strong> -</li></ul><p><strong>Returns</strong></p><p> <a href="./classmavsdk_1_1_gimbal.html#classmavsdk_1_1_gimbal_1accab76c321008685a455ccff45811397">ControlHandle</a> -</p><h3 id="classmavsdk_1_1_gimbal_1a899b442fafac1d83b9450bd219f6975e" tabindex="-1">unsubscribe_control() <a class="header-anchor" href="#classmavsdk_1_1_gimbal_1a899b442fafac1d83b9450bd219f6975e" aria-label="Permalink to &quot;unsubscribe_control() {#classmavsdk_1_1_gimbal_1a899b442fafac1d83b9450bd219f6975e}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Gimbal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">unsubscribe_control</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ControlHandle</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> handle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Unsubscribe from subscribe_control.</p><p><strong>Parameters</strong></p><ul><li><a href="./classmavsdk_1_1_gimbal.html#classmavsdk_1_1_gimbal_1accab76c321008685a455ccff45811397">ControlHandle</a> <strong>handle</strong> -</li></ul><h3 id="classmavsdk_1_1_gimbal_1aae172788140e37d6125b224f5e79829e" tabindex="-1">control() <a class="header-anchor" href="#classmavsdk_1_1_gimbal_1aae172788140e37d6125b224f5e79829e" aria-label="Permalink to &quot;control() {#classmavsdk_1_1_gimbal_1aae172788140e37d6125b224f5e79829e}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ControlStatus</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Gimbal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">control</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span></span></code></pre></div><p>Poll for &#39;<a href="./structmavsdk_1_1_gimbal_1_1_control_status.html">ControlStatus</a>&#39; (blocking).</p><p><strong>Returns</strong></p><p> <a href="./structmavsdk_1_1_gimbal_1_1_control_status.html">ControlStatus</a> - One <a href="./structmavsdk_1_1_gimbal_1_1_control_status.html">ControlStatus</a> update.</p><h3 id="classmavsdk_1_1_gimbal_1ac9a6e1936f58ce8f957be7c6bcc0d134" tabindex="-1">operator=() <a class="header-anchor" href="#classmavsdk_1_1_gimbal_1ac9a6e1936f58ce8f957be7c6bcc0d134" aria-label="Permalink to &quot;operator=() {#classmavsdk_1_1_gimbal_1ac9a6e1936f58ce8f957be7c6bcc0d134}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Gimbal</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Gimbal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">operator</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Gimbal</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=delete</span></span></code></pre></div><p>Equality operator (object is not copyable).</p><p><strong>Parameters</strong></p><ul><li>const <a href="./classmavsdk_1_1_gimbal.html">Gimbal</a>&amp; -</li></ul><p><strong>Returns</strong></p><p> const <a href="./classmavsdk_1_1_gimbal.html">Gimbal</a> &amp; -</p>',175)]))}const _=s(l,[["render",d]]);export{o as __pageData,_ as default};
