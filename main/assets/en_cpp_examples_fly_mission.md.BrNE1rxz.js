import{_ as n,c as a,al as p,o as e}from"./chunks/framework.BVh3rIuO.js";const i="/main/assets/fly_mission_example_qgc.mPp45O0s.jpg",h=JSON.parse('{"title":"Example: Fly Mission","description":"","frontmatter":{"github_branch":"main"},"headers":[],"relativePath":"en/cpp/examples/fly_mission.md","filePath":"en/cpp/examples/fly_mission.md"}'),l={name:"en/cpp/examples/fly_mission.md"};function t(o,s,c,m,u,d){return e(),a("div",null,s[0]||(s[0]=[p('<h1 id="example-fly-mission" tabindex="-1">Example: Fly Mission <a class="header-anchor" href="#example-fly-mission" aria-label="Permalink to &quot;Example: Fly Mission&quot;">​</a></h1><p>The <a href="https://github.com/mavlink/MAVSDK/tree/main/examples/fly_mission" target="_blank" rel="noreferrer">Fly Mission</a> example shows how to create, upload, and run, pause, and restart missions using the SDK.</p><p><img src="'+i+`" alt="Fly Mission QGC Screenshot"></p><h2 id="run_example" tabindex="-1">Running the Example <a class="header-anchor" href="#run_example" aria-label="Permalink to &quot;Running the Example {#run_example}&quot;">​</a></h2><p>The example is built and run in the normal way (<a href="./../examples/#trying_the_examples">as described here</a>).</p><p>The example terminal output should be similar to that shown below:</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>This is from a debug build of the SDK. A release build will omit the &quot;Debug&quot; messages.</p></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>$ ./fly_mission udp://:14540</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Waiting to discover system...</span></span>
<span class="line"><span>[09:36:08|Info ] New device on: 127.0.0.1:14557 (udp_connection.cpp:208)</span></span>
<span class="line"><span>[09:36:08|Debug] New: System ID: 1 Comp ID: 1 (dronecode_sdk_impl.cpp:292)</span></span>
<span class="line"><span>[09:36:08|Debug] Component Autopilot added. (system_impl.cpp:339)</span></span>
<span class="line"><span>[09:36:08|Debug] MAVLink: info: [logger] file: rootfs/fs/microsd/log/2018-07-09/1 (system_impl.cpp:277)</span></span>
<span class="line"><span>[09:36:09|Debug] Found 1 component(s). (system_impl.cpp:466)</span></span>
<span class="line"><span>[09:36:09|Debug] Discovered 4294967298 (system_impl.cpp:468)</span></span>
<span class="line"><span>Discovered system with UUID: 4294967298</span></span>
<span class="line"><span>Waiting for system to be ready</span></span>
<span class="line"><span>System ready</span></span>
<span class="line"><span>Creating and uploading mission</span></span>
<span class="line"><span>Uploading mission...</span></span>
<span class="line"><span>[09:36:10|Debug] Send mission item 0 (mission_impl.cpp:898)</span></span>
<span class="line"><span>[09:36:10|Debug] Send mission item 1 (mission_impl.cpp:898)</span></span>
<span class="line"><span>...</span></span>
<span class="line"><span>[09:36:10|Debug] Send mission item 19 (mission_impl.cpp:898)</span></span>
<span class="line"><span>[09:36:10|Debug] Send mission item 20 (mission_impl.cpp:898)</span></span>
<span class="line"><span>[09:36:10|Debug] Send mission item 21 (mission_impl.cpp:898)</span></span>
<span class="line"><span>[09:36:10|Debug] Send mission item 22 (mission_impl.cpp:898)</span></span>
<span class="line"><span>[09:36:10|Info ] Mission accepted (mission_impl.cpp:163)</span></span>
<span class="line"><span>Mission uploaded.</span></span>
<span class="line"><span>Arming...</span></span>
<span class="line"><span>[09:36:10|Debug] MAVLink: info: ARMED by arm/disarm component command (system_impl.cpp:277)</span></span>
<span class="line"><span>Armed.</span></span>
<span class="line"><span>Starting mission.</span></span>
<span class="line"><span>Started mission.</span></span>
<span class="line"><span>Mission status update: 0 / 6</span></span>
<span class="line"><span>[09:36:10|Debug] MAVLink: info: Executing Mission (system_impl.cpp:277)</span></span>
<span class="line"><span>[09:36:10|Debug] MAVLink: info: Takeoff to 10.0 meters above home. (system_impl.cpp:277)</span></span>
<span class="line"><span>[09:36:10|Debug] MAVLink: info: Takeoff detected (system_impl.cpp:277)</span></span>
<span class="line"><span>Mission status update: 0 / 6</span></span>
<span class="line"><span>Mission status update: 0 / 6</span></span>
<span class="line"><span>Mission status update: 1 / 6</span></span>
<span class="line"><span>...</span></span>
<span class="line"><span>Mission status update: 1 / 6</span></span>
<span class="line"><span>Mission status update: 2 / 6</span></span>
<span class="line"><span>Mission status update: 2 / 6</span></span>
<span class="line"><span>Pausing mission...</span></span>
<span class="line"><span>Mission paused.</span></span>
<span class="line"><span>[09:36:28|Debug] MAVLink: critical: MANUAL CONTROL LOST (at t=41381ms) (system_impl.cpp:277)</span></span>
<span class="line"><span>[09:36:28|Debug] MAVLink: info: MANUAL CONTROL REGAINED after 541ms (system_impl.cpp:277)</span></span>
<span class="line"><span>Resuming mission...</span></span>
<span class="line"><span>Resumed mission.</span></span>
<span class="line"><span>Mission status update: 2 / 6</span></span>
<span class="line"><span>...</span></span>
<span class="line"><span>Mission status update: 2 / 6</span></span>
<span class="line"><span>Mission status update: 3 / 6</span></span>
<span class="line"><span>...</span></span>
<span class="line"><span>Mission status update: 3 / 6</span></span>
<span class="line"><span>Mission status update: Mission status update: 44 / 6 / 6</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Mission status update: 4 / 6</span></span>
<span class="line"><span>...</span></span>
<span class="line"><span>Mission status update: 4 / 6</span></span>
<span class="line"><span>Mission status update: 5 / 6</span></span>
<span class="line"><span>...</span></span>
<span class="line"><span>Mission status update: 5 / 6</span></span>
<span class="line"><span>[09:37:00|Debug] MAVLink: info: Mission finished, loitering. (system_impl.cpp:277)</span></span>
<span class="line"><span>Mission status update: 6 / 6</span></span>
<span class="line"><span>Commanding RTL...</span></span>
<span class="line"><span>Commanded RTL.</span></span>
<span class="line"><span>[09:37:01|Debug] MAVLink: info: RTL HOME activated (system_impl.cpp:277)</span></span>
<span class="line"><span>[09:37:01|Debug] MAVLink: info: RTL: climb to 518 m (31 m above home) (system_impl.cpp:277)</span></span>
<span class="line"><span>[09:37:09|Debug] MAVLink: info: RTL: return at 518 m (31 m above home) (system_impl.cpp:277)</span></span>
<span class="line"><span>[09:37:16|Debug] MAVLink: info: RTL: descend to 493 m (5 m above home) (system_impl.cpp:277)</span></span>
<span class="line"><span>[09:37:41|Debug] MAVLink: info: RTL: loiter 5.0s (system_impl.cpp:277)</span></span>
<span class="line"><span>[09:37:46|Debug] MAVLink: info: RTL: land at home (system_impl.cpp:277)</span></span>
<span class="line"><span>[09:37:56|Debug] MAVLink: info: Landing detected (system_impl.cpp:277)</span></span>
<span class="line"><span>[09:37:59|Debug] MAVLink: info: DISARMED by auto disarm on land (system_impl.cpp:277)</span></span>
<span class="line"><span>Mission status update: 6 / 6</span></span>
<span class="line"><span>Disarmed, exiting.</span></span></code></pre></div><h2 id="how-it-works" tabindex="-1">How it works <a class="header-anchor" href="#how-it-works" aria-label="Permalink to &quot;How it works&quot;">​</a></h2><p>The operation of most of this code is discussed in the guide: <a href="./../guide/missions.html">Missions</a>.</p><h2 id="source_code" tabindex="-1">Source code <a class="header-anchor" href="#source_code" aria-label="Permalink to &quot;Source code {#source_code}&quot;">​</a></h2><ul><li><a href="https://github.com/mavlink/MAVSDK/blob/main/examples/fly_mission/CMakeLists.txt" target="_blank" rel="noreferrer">CMakeLists.txt</a></li><li><a href="https://github.com/mavlink/MAVSDK/blob/main/examples/fly_mission/fly_mission.cpp" target="_blank" rel="noreferrer">fly_mission.cpp</a></li></ul>`,13)]))}const _=n(l,[["render",t]]);export{h as __pageData,_ as default};
