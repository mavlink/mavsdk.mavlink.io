import{_ as s,c as a,al as e,o as t}from"./chunks/framework.BVh3rIuO.js";const c=JSON.parse('{"title":"Building MAVSDK on macOS","description":"","frontmatter":{"github_branch":"main"},"headers":[],"relativePath":"en/cpp/guide/build_macos.md","filePath":"en/cpp/guide/build_macos.md"}'),l={name:"en/cpp/guide/build_macos.md"};function n(h,i,d,o,p,k){return t(),a("div",null,i[0]||(i[0]=[e(`<h1 id="building-mavsdk-on-macos" tabindex="-1">Building MAVSDK on macOS <a class="header-anchor" href="#building-mavsdk-on-macos" aria-label="Permalink to &quot;Building MAVSDK on macOS&quot;">​</a></h1><p>This guide explains how to build MAVSDK from source on macOS systems.</p><h2 id="requirements" tabindex="-1">Requirements <a class="header-anchor" href="#requirements" aria-label="Permalink to &quot;Requirements&quot;">​</a></h2><p>The build requirements are:</p><ul><li>XCode Command Line Tools</li><li>CMake</li><li>Git</li></ul><h3 id="install-build-tools" tabindex="-1">Install Build Tools <a class="header-anchor" href="#install-build-tools" aria-label="Permalink to &quot;Install Build Tools&quot;">​</a></h3><p>First install XCode Command line tools:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">xcode-select</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --install</span></span></code></pre></div><p>Then install <a href="https://brew.sh/" target="_blank" rel="noreferrer">Homebrew</a> and use it to install CMake:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/bin/bash</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -fsSL</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">brew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cmake</span></span></code></pre></div><h2 id="getting-the-source" tabindex="-1">Getting the Source <a class="header-anchor" href="#getting-the-source" aria-label="Permalink to &quot;Getting the Source&quot;">​</a></h2><p>Download the source using git:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/mavlink/MAVSDK.git</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> MAVSDK</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> submodule</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --init</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --recursive</span></span></code></pre></div><h2 id="building-the-mavsdk-library-on-macos" tabindex="-1">Building the MAVSDK library on macOS <a class="header-anchor" href="#building-the-mavsdk-library-on-macos" aria-label="Permalink to &quot;Building the MAVSDK library on macOS&quot;">​</a></h2><h3 id="debug-build" tabindex="-1">Debug Build <a class="header-anchor" href="#debug-build" aria-label="Permalink to &quot;Debug Build&quot;">​</a></h3><p>For development, use the debug build:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cmake</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -DCMAKE_BUILD_TYPE=Debug</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -Bbuild</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -S.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cmake</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --build</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -j8</span></span></code></pre></div><h3 id="release-build" tabindex="-1">Release Build <a class="header-anchor" href="#release-build" aria-label="Permalink to &quot;Release Build&quot;">​</a></h3><p>For production use, build with optimizations enabled:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cmake</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -DCMAKE_BUILD_TYPE=Release</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -Bbuild</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -S.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cmake</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --build</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -j8</span></span></code></pre></div><h2 id="installation" tabindex="-1">Installation <a class="header-anchor" href="#installation" aria-label="Permalink to &quot;Installation&quot;">​</a></h2><h3 id="system-wide-installation" tabindex="-1">System-wide Installation <a class="header-anchor" href="#system-wide-installation" aria-label="Permalink to &quot;System-wide Installation&quot;">​</a></h3><p>To install system-wide in <code>/usr/local</code>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cmake</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --build</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --target</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span></code></pre></div><h3 id="local-installation" tabindex="-1">Local Installation <a class="header-anchor" href="#local-installation" aria-label="Permalink to &quot;Local Installation&quot;">​</a></h3><p>To install to a local folder, e.g. <code>install</code>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cmake</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -DCMAKE_BUILD_TYPE=Release</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -DCMAKE_INSTALL_PREFIX=install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -Bbuild</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -S.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cmake</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --build</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --target</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span></code></pre></div><h2 id="build_cpp_iOS" tabindex="-1">Build for iOS <a class="header-anchor" href="#build_cpp_iOS" aria-label="Permalink to &quot;Build for iOS {#build_cpp_iOS}&quot;">​</a></h2><p>To build for real iOS devices on macOS:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cmake</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -DCMAKE_BUILD_TYPE=Release</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -DBUILD_MAVSDK_SERVER=ON</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -DBUILD_SHARED_LIBS=OFF</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -DCMAKE_TOOLCHAIN_FILE=tools/ios.toolchain.cmake</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -DPLATFORM=OS</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -Bbuild/ios</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -S.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cmake</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --build</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build/ios</span></span></code></pre></div><p>Build for the iOS simulator on macOS:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cmake</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -DCMAKE_BUILD_TYPE=Release</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -DBUILD_MAVSDK_SERVER=ON</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -DBUILD_SHARED_LIBS=OFF</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -DCMAKE_TOOLCHAIN_FILE=tools/ios.toolchain.cmake</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -DPLATFORM=SIMULATOR64</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -Bbuild/ios_simulator</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -S.</span></span></code></pre></div><h2 id="build-options" tabindex="-1">Build Options <a class="header-anchor" href="#build-options" aria-label="Permalink to &quot;Build Options&quot;">​</a></h2><p>During the configure step you can set various flags using <code>-DFLAG=Value</code>:</p><ul><li><code>CMAKE_BUILD_TYPE</code>: Choose between <code>Debug</code> and <code>Release</code> build</li><li><code>CMAKE_INSTALL_PREFIX</code>: Specify directory to install library artifacts</li><li><code>BUILD_SHARED_LIBS</code>: Set to <code>ON</code> for dynamic libraries (.dylib), <code>OFF</code> for static libraries (.a)</li><li><code>SUPERBUILD</code>: Set to <code>OFF</code> to use system dependencies instead of third party dependencies</li><li><code>CMAKE_PREFIX_PATH</code>: Set path where dependencies can be found if <code>SUPERBUILD</code> is <code>OFF</code></li><li><code>BUILD_MAVSDK_SERVER</code>: Set to <code>ON</code> to build mavsdk_server</li><li><code>BUILD_WITHOUT_CURL</code>: Set to <code>ON</code> to build without CURL support</li><li><code>ASAN</code>: Set to <code>ON</code> to enable address sanitizer</li><li><code>UBSAN</code>: Set to <code>ON</code> to enable undefined behavior sanitizer</li><li><code>LSAN</code>: Set to <code>ON</code> to enable leak sanitizer</li><li><code>WERROR</code>: Set to <code>ON</code> to treat warnings as errors</li></ul><h2 id="troubleshooting" tabindex="-1">Troubleshooting <a class="header-anchor" href="#troubleshooting" aria-label="Permalink to &quot;Troubleshooting&quot;">​</a></h2><h3 id="git-submodules-out-of-date" tabindex="-1">Git Submodules Out of Date <a class="header-anchor" href="#git-submodules-out-of-date" aria-label="Permalink to &quot;Git Submodules Out of Date&quot;">​</a></h3><p>If you encounter build issues, try updating the submodules:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> submodule</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --recursive</span></span></code></pre></div>`,39)]))}const u=s(l,[["render",n]]);export{c as __pageData,u as default};
