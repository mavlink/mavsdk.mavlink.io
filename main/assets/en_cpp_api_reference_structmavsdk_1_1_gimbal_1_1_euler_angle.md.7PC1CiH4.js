import{_ as e,c as i,al as s,o as t}from"./chunks/framework.BVh3rIuO.js";const k=JSON.parse('{"title":"mavsdk::Gimbal::EulerAngle Struct Reference","description":"","frontmatter":{"github_branch":"main"},"headers":[],"relativePath":"en/cpp/api_reference/structmavsdk_1_1_gimbal_1_1_euler_angle.md","filePath":"en/cpp/api_reference/structmavsdk_1_1_gimbal_1_1_euler_angle.md"}'),l={name:"en/cpp/api_reference/structmavsdk_1_1_gimbal_1_1_euler_angle.md"};function n(r,a,_,h,p,d){return t(),i("div",null,a[0]||(a[0]=[s('<h1 id="mavsdk-gimbal-eulerangle-struct-reference" tabindex="-1">mavsdk::Gimbal::EulerAngle Struct Reference <a class="header-anchor" href="#mavsdk-gimbal-eulerangle-struct-reference" aria-label="Permalink to &quot;mavsdk::Gimbal::EulerAngle Struct Reference&quot;">​</a></h1><p><code>#include: gimbal.h</code></p><hr><p>Euler angle type.</p><p>All rotations and axis systems follow the right-hand rule. The Euler angles are converted using the 3-1-2 sequence instead of standard 3-2-1 in order to avoid the gimbal lock at 90 degrees down.</p><p>For more info see <a href="https://en.wikipedia.org/wiki/Euler_angles" target="_blank" rel="noreferrer">https://en.wikipedia.org/wiki/Euler_angles</a></p><h2 id="data-fields" tabindex="-1">Data Fields <a class="header-anchor" href="#data-fields" aria-label="Permalink to &quot;Data Fields&quot;">​</a></h2><p>float <a href="#structmavsdk_1_1_gimbal_1_1_euler_angle_1a8597dbca1cc6c0f9595b8299827164c4">roll_deg</a> { float(NAN)} - Roll angle in degrees, positive is banking to the right.</p><p>float <a href="#structmavsdk_1_1_gimbal_1_1_euler_angle_1aafe2a84a6a9001962190b115ea6b94e4">pitch_deg</a> { float(NAN)} - Pitch angle in degrees, positive is pitching nose up.</p><p>float <a href="#structmavsdk_1_1_gimbal_1_1_euler_angle_1ac09ef8ac782fbaa72812f53985ff312e">yaw_deg</a> { float(NAN)} - Yaw angle in degrees, positive is clock-wise seen from above.</p><h2 id="field-documentation" tabindex="-1">Field Documentation <a class="header-anchor" href="#field-documentation" aria-label="Permalink to &quot;Field Documentation&quot;">​</a></h2><h3 id="structmavsdk_1_1_gimbal_1_1_euler_angle_1a8597dbca1cc6c0f9595b8299827164c4" tabindex="-1">roll_deg <a class="header-anchor" href="#structmavsdk_1_1_gimbal_1_1_euler_angle_1a8597dbca1cc6c0f9595b8299827164c4" aria-label="Permalink to &quot;roll_deg {#structmavsdk_1_1_gimbal_1_1_euler_angle_1a8597dbca1cc6c0f9595b8299827164c4}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">float</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Gimbal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">EulerAngle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::roll_deg { </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(NAN)}</span></span></code></pre></div><p>Roll angle in degrees, positive is banking to the right.</p><h3 id="structmavsdk_1_1_gimbal_1_1_euler_angle_1aafe2a84a6a9001962190b115ea6b94e4" tabindex="-1">pitch_deg <a class="header-anchor" href="#structmavsdk_1_1_gimbal_1_1_euler_angle_1aafe2a84a6a9001962190b115ea6b94e4" aria-label="Permalink to &quot;pitch_deg {#structmavsdk_1_1_gimbal_1_1_euler_angle_1aafe2a84a6a9001962190b115ea6b94e4}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">float</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Gimbal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">EulerAngle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::pitch_deg { </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(NAN)}</span></span></code></pre></div><p>Pitch angle in degrees, positive is pitching nose up.</p><h3 id="structmavsdk_1_1_gimbal_1_1_euler_angle_1ac09ef8ac782fbaa72812f53985ff312e" tabindex="-1">yaw_deg <a class="header-anchor" href="#structmavsdk_1_1_gimbal_1_1_euler_angle_1ac09ef8ac782fbaa72812f53985ff312e" aria-label="Permalink to &quot;yaw_deg {#structmavsdk_1_1_gimbal_1_1_euler_angle_1ac09ef8ac782fbaa72812f53985ff312e}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">float</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Gimbal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">EulerAngle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::yaw_deg { </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(NAN)}</span></span></code></pre></div><p>Yaw angle in degrees, positive is clock-wise seen from above.</p>',20)]))}const g=e(l,[["render",n]]);export{k as __pageData,g as default};
