import{_ as e,c as a,al as r,o as s}from"./chunks/framework.JotrKMnz.js";const h=JSON.parse('{"title":"mavsdk::TelemetryServer::ActuatorControlTarget Struct Reference","description":"","frontmatter":{"github_branch":"v3"},"headers":[],"relativePath":"en/cpp/api_reference/structmavsdk_1_1_telemetry_server_1_1_actuator_control_target.md","filePath":"en/cpp/api_reference/structmavsdk_1_1_telemetry_server_1_1_actuator_control_target.md"}'),i={name:"en/cpp/api_reference/structmavsdk_1_1_telemetry_server_1_1_actuator_control_target.md"};function o(l,t,n,c,_,p){return s(),a("div",null,t[0]||(t[0]=[r('<h1 id="mavsdk-telemetryserver-actuatorcontroltarget-struct-reference" tabindex="-1">mavsdk::TelemetryServer::ActuatorControlTarget Struct Reference <a class="header-anchor" href="#mavsdk-telemetryserver-actuatorcontroltarget-struct-reference" aria-label="Permalink to &quot;mavsdk::TelemetryServer::ActuatorControlTarget Struct Reference&quot;">​</a></h1><p><code>#include: telemetry_server.h</code></p><hr><p>Actuator control target type.</p><h2 id="data-fields" tabindex="-1">Data Fields <a class="header-anchor" href="#data-fields" aria-label="Permalink to &quot;Data Fields&quot;">​</a></h2><p>int32_t <a href="#structmavsdk_1_1_telemetry_server_1_1_actuator_control_target_1a26b6abf67141f0366ebc571b0c5bb016">group</a> {0} - An actuator control group is e.g. &#39;attitude&#39; for the core flight controls, or &#39;gimbal&#39; for a payload.</p><p>std::vector&lt; float &gt; <a href="#structmavsdk_1_1_telemetry_server_1_1_actuator_control_target_1a8211de153fe0f6b0958f70e30c03719c">controls</a> {} - Controls normed from -1 to 1, where 0 is neutral position.</p><h2 id="field-documentation" tabindex="-1">Field Documentation <a class="header-anchor" href="#field-documentation" aria-label="Permalink to &quot;Field Documentation&quot;">​</a></h2><h3 id="structmavsdk_1_1_telemetry_server_1_1_actuator_control_target_1a26b6abf67141f0366ebc571b0c5bb016" tabindex="-1">group <a class="header-anchor" href="#structmavsdk_1_1_telemetry_server_1_1_actuator_control_target_1a26b6abf67141f0366ebc571b0c5bb016" aria-label="Permalink to &quot;group {#structmavsdk_1_1_telemetry_server_1_1_actuator_control_target_1a26b6abf67141f0366ebc571b0c5bb016}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int32_t</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">TelemetryServer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ActuatorControlTarget</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::group {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>An actuator control group is e.g. &#39;attitude&#39; for the core flight controls, or &#39;gimbal&#39; for a payload.</p><h3 id="structmavsdk_1_1_telemetry_server_1_1_actuator_control_target_1a8211de153fe0f6b0958f70e30c03719c" tabindex="-1">controls <a class="header-anchor" href="#structmavsdk_1_1_telemetry_server_1_1_actuator_control_target_1a8211de153fe0f6b0958f70e30c03719c" aria-label="Permalink to &quot;controls {#structmavsdk_1_1_telemetry_server_1_1_actuator_control_target_1a8211de153fe0f6b0958f70e30c03719c}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::vector</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;float&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">TelemetryServer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ActuatorControlTarget</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::controls {}</span></span></code></pre></div><p>Controls normed from -1 to 1, where 0 is neutral position.</p>',14)]))}const k=e(i,[["render",o]]);export{h as __pageData,k as default};
