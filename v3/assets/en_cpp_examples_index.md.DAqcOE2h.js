import{_ as t,c as a,al as i,o as s}from"./chunks/framework.JotrKMnz.js";const c=JSON.parse('{"title":"C++ Examples","description":"","frontmatter":{"github_branch":"v3"},"headers":[],"relativePath":"en/cpp/examples/index.md","filePath":"en/cpp/examples/index.md"}'),n={name:"en/cpp/examples/index.md"};function l(o,e,r,d,h,p){return s(),a("div",null,e[0]||(e[0]=[i(`<h1 id="c-examples" tabindex="-1">C++ Examples <a class="header-anchor" href="#c-examples" aria-label="Permalink to &quot;C++ Examples&quot;">​</a></h1><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Information about <em>writing</em> example code is covered in the <a href="./../contributing/plugins.html">Contributing &gt; Writing Plugins</a> (<em>plugin developers</em> should initially create <a href="./../contributing/plugins.html#integration_tests">integration tests</a> rather than examples for new code).</p></div><p>This section contains examples showing how to use MAVSDK.</p><table tabindex="0"><thead><tr><th>Example</th><th>Description</th></tr></thead><tbody><tr><td><a href="https://github.com/mavlink/MAVSDK/tree/main/examples/battery" target="_blank" rel="noreferrer">Battery</a></td><td>Simple example to demonstrate how to imitate a smart battery.</td></tr><tr><td><a href="https://github.com/mavlink/MAVSDK/tree/main/examples/calibrate" target="_blank" rel="noreferrer">Calibrate</a></td><td>Simple example showing how to initiate calibration of gyro, accelerometer, magnetometer.</td></tr><tr><td><a href="./../examples/fly_mission.html">Fly Mission</a></td><td>Shows how to create, upload, and run missions.</td></tr><tr><td><a href="https://github.com/mavlink/MAVSDK/tree/main/examples/fly_multiple_drones" target="_blank" rel="noreferrer">Fly Multiple Drones</a></td><td>Example to connect multiple vehicles and make them follow their own separate plan file. Also saves the telemetry information to CSV files.</td></tr><tr><td><a href="./../examples/follow_me.html">Follow Me Mode</a></td><td>Demonstrates how to put vehicle in <a href="./../guide/follow_me.html">Follow Me Mode</a> and set the current target position and relative position of the drone.</td></tr><tr><td><a href="https://github.com/mavlink/MAVSDK/tree/main/examples/geofence_inclusion" target="_blank" rel="noreferrer">GeoFence Inclusion</a></td><td>Demonstrates how to define and upload a simple polygonal inclusion GeoFence.</td></tr><tr><td><a href="https://github.com/mavlink/MAVSDK/tree/main/examples/mavshell" target="_blank" rel="noreferrer">MAVShell</a></td><td>Creates and starts an interactive shell session.</td></tr><tr><td><a href="https://github.com/mavlink/MAVSDK/tree/main/examples/ftp_client" target="_blank" rel="noreferrer">MAVLink FTP Client</a></td><td>Demonstrates how to create/use a <a href="https://mavlink.io/en/services/ftp.html" target="_blank" rel="noreferrer">MAVLink FTP client</a>.</td></tr><tr><td><a href="https://github.com/mavlink/MAVSDK/tree/main/examples/ftp_server" target="_blank" rel="noreferrer">MAVLink FTP Server</a></td><td>Demonstrates how to start/set up a <a href="https://mavlink.io/en/services/ftp.html" target="_blank" rel="noreferrer">MAVLink FTP server</a>.</td></tr><tr><td><a href="https://github.com/mavlink/MAVSDK/tree/main/examples/multiple_drones" target="_blank" rel="noreferrer">Multiple Drones</a></td><td>Example to connect multiple vehicles and make them take off and land in parallel.</td></tr><tr><td><a href="./../examples/offboard_velocity.html">Offboard Velocity Control</a></td><td>Demonstrates how to control a vehicle in Offboard mode using velocity commands (in both the NED and body frames).</td></tr><tr><td><a href="./../examples/takeoff_and_land.html">Takeoff and Land</a></td><td>Shows basic usage of the SDK (connect to port, detect system (vehicle), arm, takeoff, land, get telemetry)</td></tr><tr><td><a href="./../examples/transition_vtol_fixed_wing.html">VTOL Transitions</a></td><td>Shows how to transition a VTOL vehicle between copter and fixed-wing modes.</td></tr><tr><td><a href="https://github.com/mavlink/MAVSDK/tree/main/examples/tune" target="_blank" rel="noreferrer">Tune</a></td><td>Shows how to construct and play a tune.</td></tr></tbody></table><p>The examples are &quot;largely&quot; built and run in the same way, as described in the following section (any exceptions are covered in the page for the associated example).</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>Some of the examples define flight behaviour relative to the default home position in the simulator (e.g. <a href="./../examples/fly_mission.html">Fly Mission</a>). Care should be taken if using them on a real vehicle.</p></div><h2 id="trying_the_examples" tabindex="-1">Trying the Examples <a class="header-anchor" href="#trying_the_examples" aria-label="Permalink to &quot;Trying the Examples {#trying_the_examples}&quot;">​</a></h2><p>The easiest way to test the examples is to use a <a href="https://docs.px4.io/master/en/simulation/" target="_blank" rel="noreferrer">simulated PX4 vehicle</a> that is running on the same computer. First start PX4 in SITL (Simulation), optionally start <em>QGroundControl</em> to observe the vehicle, then build and run the example code.</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>The simulator broadcasts to the standard PX4 UDP port for connecting to offboard APIs (14540). The examples connect to this port using either <a href="./../api_reference/classmavsdk_1_1_mavsdk.html#classmavsdk_1_1_mavsdk_1a405041a5043c610c86540de090626d97">add_any_connection()</a> or <a href="./../api_reference/classmavsdk_1_1_mavsdk.html#classmavsdk_1_1_mavsdk_1aa43dfb00d5118d26ae5aabd0f9ba56b2">add_udp_connection()</a>.</p></div><h3 id="setting-up-a-simulator" tabindex="-1">Setting up a Simulator <a class="header-anchor" href="#setting-up-a-simulator" aria-label="Permalink to &quot;Setting up a Simulator&quot;">​</a></h3><p>PX4 supports a <a href="https://docs.px4.io/master/en/simulation/" target="_blank" rel="noreferrer">number of simulators</a>. In order to set up the <a href="https://docs.px4.io/master/en/simulation/jmavsim.html" target="_blank" rel="noreferrer">jMAVSim</a> or <a href="https://docs.px4.io/master/en/simulation/gazebo.html" target="_blank" rel="noreferrer">Gazebo</a> simulator, you can simply follow the standard PX4 toolchain setup instructions for <a href="https://docs.px4.io/master/en/dev_setup/dev_env_mac.html" target="_blank" rel="noreferrer">macOS</a> or <a href="https://docs.px4.io/master/en/dev_setup/dev_env_linux_ubuntu.html" target="_blank" rel="noreferrer">Ubuntu Linux</a>.</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>JMAVSim can only be used to simulate multicopters. Gazebo additionally supports a number of <a href="https://docs.px4.io/master/en/simulation/gazebo.html#html#running-the-simulation" target="_blank" rel="noreferrer">other vehicles</a> (e.g. VTOL, Rovers, fixed-wing etc.).</p></div><p>After running a standard installation, a simulation can be started from the PX4 <strong>/Firmware</strong> directory using the command:</p><ul><li>Multicopter (jMAVSim): <code>make px4_sitl jmavsim</code></li><li>Multicopter (Gazebo): <code>make px4_sitl gazebo</code></li><li>VTOL (Gazebo): <code>make px4_sitl gazebo_standard_vtol</code></li></ul><h3 id="using-qgroundcontrol" tabindex="-1">Using QGroundControl <a class="header-anchor" href="#using-qgroundcontrol" aria-label="Permalink to &quot;Using QGroundControl&quot;">​</a></h3><p>You can use <em>QGroundControl</em> to connect to PX4 and observe vehicle movement and behaviour while the examples are running. <em>QGroundControl</em> will automatically connect to the PX4 simulation as soon as it is started.</p><p>See <a href="https://docs.qgroundcontrol.com/en/getting_started/download_and_install.html" target="_blank" rel="noreferrer">QGroundControl &gt; Download and Install</a> for information about setting up <em>QGroundControl</em> on your platform.</p><h3 id="build_examples" tabindex="-1">Building the Examples <a class="header-anchor" href="#build_examples" aria-label="Permalink to &quot;Building the Examples {#build_examples}&quot;">​</a></h3><p>To build the examples follow the instructions below, replacing <em>takeoff_and_land</em> with the name of the specific example.</p><p>The examples require the MAVSDK library to be installed. See <a href="./../guide/installation.html">installation guide</a> if that is not already the case.</p><p>Then build the example:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> examples/takeoff_and_land/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cmake</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -Bbuild</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -S.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cmake</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --build</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -j4</span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">INFO</p><p>if MAVSDK is installed locally (e.g. on Windows) you need to pass the location to cmake:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>cmake -Bbuild -DCMAKE_PREFIX_PATH=wherever_mavsdk_is_locally_installed</span></span></code></pre></div></div><h3 id="running_the_examples" tabindex="-1">Running the Examples <a class="header-anchor" href="#running_the_examples" aria-label="Permalink to &quot;Running the Examples {#running_the_examples}&quot;">​</a></h3><p>You can then run the example, specifying the connection URL as the first argument. When running with the Simulator, you will use the connection string: <code>udpin://0.0.0.0:14540</code></p><p>On Linux/macOS you would run the following (from the <strong>/build</strong> directory):</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">build/takeoff_and_land</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> udpin://0.0.0.0:14540</span></span></code></pre></div><p>For Windows you would run the following (from the *<em>\\build\\Debug*</em> directory):</p><div class="language-cmd vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cmd</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">build\\Debug\\takeoff_and_land.exe udpin://</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0.0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">14540</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Most examples will create a binary with the same name as the example. The name that is used is specified in the <strong>CMakeLists.txt</strong> file as the first value in the call to <code>add_executable()</code>.</p></div><p>If you have already started the simulation the example code should connect to PX4, and you will be able to observe behaviour through the SDK terminal, SITL terminal, and/or <em>QGroundControl</em>.</p>`,31)]))}const u=t(n,[["render",l]]);export{c as __pageData,u as default};
