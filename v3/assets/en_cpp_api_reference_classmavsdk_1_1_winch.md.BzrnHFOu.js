import{_ as a,c as i,al as t,o as e}from"./chunks/framework.JotrKMnz.js";const o=JSON.parse('{"title":"mavsdk::Winch Class Reference","description":"","frontmatter":{"github_branch":"v3"},"headers":[],"relativePath":"en/cpp/api_reference/classmavsdk_1_1_winch.md","filePath":"en/cpp/api_reference/classmavsdk_1_1_winch.md"}'),n={name:"en/cpp/api_reference/classmavsdk_1_1_winch.md"};function l(h,s,d,c,k,p){return e(),i("div",null,s[0]||(s[0]=[t('<h1 id="mavsdk-winch-class-reference" tabindex="-1">mavsdk::Winch Class Reference <a class="header-anchor" href="#mavsdk-winch-class-reference" aria-label="Permalink to &quot;mavsdk::Winch Class Reference&quot;">​</a></h1><p><code>#include: winch.h</code></p><hr><p>Allows users to send winch actions, as well as receive status information from winch systems.</p><h2 id="data-structures" tabindex="-1">Data Structures <a class="header-anchor" href="#data-structures" aria-label="Permalink to &quot;Data Structures&quot;">​</a></h2><p>struct <a href="./structmavsdk_1_1_winch_1_1_status.html">Status</a></p><p>struct <a href="./structmavsdk_1_1_winch_1_1_status_flags.html">StatusFlags</a></p><h2 id="public-types" tabindex="-1">Public Types <a class="header-anchor" href="#public-types" aria-label="Permalink to &quot;Public Types&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>enum <a href="#classmavsdk_1_1_winch_1a2c63ccb04edf046026919d5b3db77a83">WinchAction</a></td><td><a href="./classmavsdk_1_1_winch.html">Winch</a> <a href="./classmavsdk_1_1_action.html">Action</a> type.</td></tr><tr><td>enum <a href="#classmavsdk_1_1_winch_1a48edb6e5176dc8d5e95bd30eacd7a091">Result</a></td><td>Possible results returned for winch action requests.</td></tr><tr><td>std::function&lt; void(<a href="./classmavsdk_1_1_winch.html#classmavsdk_1_1_winch_1a48edb6e5176dc8d5e95bd30eacd7a091">Result</a>)&gt; <a href="#classmavsdk_1_1_winch_1a683fc7d385d461efb059df917622a6b7">ResultCallback</a></td><td>Callback type for asynchronous <a href="./classmavsdk_1_1_winch.html">Winch</a> calls.</td></tr><tr><td>std::function&lt; void(<a href="./structmavsdk_1_1_winch_1_1_status.html">Status</a>)&gt; <a href="#classmavsdk_1_1_winch_1a6c84089eac00fc9de890ab7e8c0eb32a">StatusCallback</a></td><td>Callback type for subscribe_status.</td></tr><tr><td><a href="./classmavsdk_1_1_handle.html">Handle</a>&lt; <a href="./structmavsdk_1_1_winch_1_1_status.html">Status</a> &gt; <a href="#classmavsdk_1_1_winch_1a78284180b73b3092c37e45b3c2bdc2ab">StatusHandle</a></td><td><a href="./classmavsdk_1_1_handle.html">Handle</a> type for subscribe_status.</td></tr></tbody></table><h2 id="public-member-functions" tabindex="-1">Public Member Functions <a class="header-anchor" href="#public-member-functions" aria-label="Permalink to &quot;Public Member Functions&quot;">​</a></h2><table tabindex="0"><thead><tr><th style="text-align:right;">Type</th><th>Name</th><th>Description</th></tr></thead><tbody><tr><td style="text-align:right;"> </td><td><a href="#classmavsdk_1_1_winch_1a222e543b5ef54c89ee41411e800d3b88">Winch</a> (<a href="./classmavsdk_1_1_system.html">System</a> &amp; system)</td><td>Constructor. Creates the plugin for a specific <a href="./classmavsdk_1_1_system.html">System</a>.</td></tr><tr><td style="text-align:right;"> </td><td><a href="#classmavsdk_1_1_winch_1a7546040a07899cc9fe3edb00cb1b2007">Winch</a> (std::shared_ptr&lt; <a href="./classmavsdk_1_1_system.html">System</a> &gt; system)</td><td>Constructor. Creates the plugin for a specific <a href="./classmavsdk_1_1_system.html">System</a>.</td></tr><tr><td style="text-align:right;"> </td><td><a href="#classmavsdk_1_1_winch_1a06330946e884dae7415003aa89c3010e">~Winch</a> () override</td><td>Destructor (internal use only).</td></tr><tr><td style="text-align:right;"> </td><td><a href="#classmavsdk_1_1_winch_1a9125a173b929f9a1a2e5ca0199961fb4">Winch</a> (const <a href="./classmavsdk_1_1_winch.html">Winch</a> &amp; other)</td><td>Copy constructor.</td></tr><tr><td style="text-align:right;"><a href="./classmavsdk_1_1_winch.html#classmavsdk_1_1_winch_1a78284180b73b3092c37e45b3c2bdc2ab">StatusHandle</a></td><td><a href="#classmavsdk_1_1_winch_1a92363df861842edf0b81aa18fba26bc8">subscribe_status</a> (const <a href="./classmavsdk_1_1_winch.html#classmavsdk_1_1_winch_1a6c84089eac00fc9de890ab7e8c0eb32a">StatusCallback</a> &amp; callback)</td><td>Subscribe to &#39;winch status&#39; updates.</td></tr><tr><td style="text-align:right;">void</td><td><a href="#classmavsdk_1_1_winch_1af1176a4992e0a6850dbd44ea2b1f0bad">unsubscribe_status</a> (<a href="./classmavsdk_1_1_winch.html#classmavsdk_1_1_winch_1a78284180b73b3092c37e45b3c2bdc2ab">StatusHandle</a> handle)</td><td>Unsubscribe from subscribe_status.</td></tr><tr><td style="text-align:right;"><a href="./structmavsdk_1_1_winch_1_1_status.html">Status</a></td><td><a href="#classmavsdk_1_1_winch_1aa24ccd5e6e44db1fbf96e4aca6947689">status</a> () const</td><td>Poll for &#39;<a href="./structmavsdk_1_1_winch_1_1_status.html">Status</a>&#39; (blocking).</td></tr><tr><td style="text-align:right;">void</td><td><a href="#classmavsdk_1_1_winch_1a48eec9e1fb693620e452234e0a740989">relax_async</a> (uint32_t instance, const <a href="./classmavsdk_1_1_winch.html#classmavsdk_1_1_winch_1a683fc7d385d461efb059df917622a6b7">ResultCallback</a> callback)</td><td>Allow motor to freewheel.</td></tr><tr><td style="text-align:right;"><a href="./classmavsdk_1_1_winch.html#classmavsdk_1_1_winch_1a48edb6e5176dc8d5e95bd30eacd7a091">Result</a></td><td><a href="#classmavsdk_1_1_winch_1ae1fa0d57d8d72e3bbbb4833770047ab3">relax</a> (uint32_t instance)const</td><td>Allow motor to freewheel.</td></tr><tr><td style="text-align:right;">void</td><td><a href="#classmavsdk_1_1_winch_1aa2cb382d36cda8e0fe918ae07fb7a9ec">relative_length_control_async</a> (uint32_t instance, float length_m, float rate_m_s, const <a href="./classmavsdk_1_1_winch.html#classmavsdk_1_1_winch_1a683fc7d385d461efb059df917622a6b7">ResultCallback</a> callback)</td><td>Wind or unwind specified length of line, optionally using specified rate.</td></tr><tr><td style="text-align:right;"><a href="./classmavsdk_1_1_winch.html#classmavsdk_1_1_winch_1a48edb6e5176dc8d5e95bd30eacd7a091">Result</a></td><td><a href="#classmavsdk_1_1_winch_1ae39f5844dd5b6d93b6ccf3953781cee0">relative_length_control</a> (uint32_t instance, float length_m, float rate_m_s)const</td><td>Wind or unwind specified length of line, optionally using specified rate.</td></tr><tr><td style="text-align:right;">void</td><td><a href="#classmavsdk_1_1_winch_1a21ce05ef8cedd2601d22209d31a980f8">rate_control_async</a> (uint32_t instance, float rate_m_s, const <a href="./classmavsdk_1_1_winch.html#classmavsdk_1_1_winch_1a683fc7d385d461efb059df917622a6b7">ResultCallback</a> callback)</td><td>Wind or unwind line at specified rate.</td></tr><tr><td style="text-align:right;"><a href="./classmavsdk_1_1_winch.html#classmavsdk_1_1_winch_1a48edb6e5176dc8d5e95bd30eacd7a091">Result</a></td><td><a href="#classmavsdk_1_1_winch_1aaec8a2bac41941e1f696cd9541abd4ca">rate_control</a> (uint32_t instance, float rate_m_s)const</td><td>Wind or unwind line at specified rate.</td></tr><tr><td style="text-align:right;">void</td><td><a href="#classmavsdk_1_1_winch_1a0ff91279058752931bee2bc5dfd7c711">lock_async</a> (uint32_t instance, const <a href="./classmavsdk_1_1_winch.html#classmavsdk_1_1_winch_1a683fc7d385d461efb059df917622a6b7">ResultCallback</a> callback)</td><td>Perform the locking sequence to relieve motor while in the fully retracted position.</td></tr><tr><td style="text-align:right;"><a href="./classmavsdk_1_1_winch.html#classmavsdk_1_1_winch_1a48edb6e5176dc8d5e95bd30eacd7a091">Result</a></td><td><a href="#classmavsdk_1_1_winch_1ad0f907f0164a724f8e8a57fe9796ecb3">lock</a> (uint32_t instance)const</td><td>Perform the locking sequence to relieve motor while in the fully retracted position.</td></tr><tr><td style="text-align:right;">void</td><td><a href="#classmavsdk_1_1_winch_1acbd43a3f00ab1e910b6b05654afc9458">deliver_async</a> (uint32_t instance, const <a href="./classmavsdk_1_1_winch.html#classmavsdk_1_1_winch_1a683fc7d385d461efb059df917622a6b7">ResultCallback</a> callback)</td><td>Sequence of drop, slow down, touch down, reel up, lock.</td></tr><tr><td style="text-align:right;"><a href="./classmavsdk_1_1_winch.html#classmavsdk_1_1_winch_1a48edb6e5176dc8d5e95bd30eacd7a091">Result</a></td><td><a href="#classmavsdk_1_1_winch_1a8910df835085243a366290dbc4492680">deliver</a> (uint32_t instance)const</td><td>Sequence of drop, slow down, touch down, reel up, lock.</td></tr><tr><td style="text-align:right;">void</td><td><a href="#classmavsdk_1_1_winch_1a6c97626d33532469871a687e8043e27e">hold_async</a> (uint32_t instance, const <a href="./classmavsdk_1_1_winch.html#classmavsdk_1_1_winch_1a683fc7d385d461efb059df917622a6b7">ResultCallback</a> callback)</td><td>Engage motor and hold current position.</td></tr><tr><td style="text-align:right;"><a href="./classmavsdk_1_1_winch.html#classmavsdk_1_1_winch_1a48edb6e5176dc8d5e95bd30eacd7a091">Result</a></td><td><a href="#classmavsdk_1_1_winch_1a2e7ae05d09b82964024c70211b1920d9">hold</a> (uint32_t instance)const</td><td>Engage motor and hold current position.</td></tr><tr><td style="text-align:right;">void</td><td><a href="#classmavsdk_1_1_winch_1a6485b743115d441b43f3d0e39341412d">retract_async</a> (uint32_t instance, const <a href="./classmavsdk_1_1_winch.html#classmavsdk_1_1_winch_1a683fc7d385d461efb059df917622a6b7">ResultCallback</a> callback)</td><td>Return the reel to the fully retracted position.</td></tr><tr><td style="text-align:right;"><a href="./classmavsdk_1_1_winch.html#classmavsdk_1_1_winch_1a48edb6e5176dc8d5e95bd30eacd7a091">Result</a></td><td><a href="#classmavsdk_1_1_winch_1a353cad0259d2eb8201e2884e037422eb">retract</a> (uint32_t instance)const</td><td>Return the reel to the fully retracted position.</td></tr><tr><td style="text-align:right;">void</td><td><a href="#classmavsdk_1_1_winch_1ad0588792ef3fbd469511f99988140637">load_line_async</a> (uint32_t instance, const <a href="./classmavsdk_1_1_winch.html#classmavsdk_1_1_winch_1a683fc7d385d461efb059df917622a6b7">ResultCallback</a> callback)</td><td>Load the reel with line.</td></tr><tr><td style="text-align:right;"><a href="./classmavsdk_1_1_winch.html#classmavsdk_1_1_winch_1a48edb6e5176dc8d5e95bd30eacd7a091">Result</a></td><td><a href="#classmavsdk_1_1_winch_1aabeb779b2e03632176799c92058adb92">load_line</a> (uint32_t instance)const</td><td>Load the reel with line.</td></tr><tr><td style="text-align:right;">void</td><td><a href="#classmavsdk_1_1_winch_1a3970c74e067d3734ba8dd3382c534b0a">abandon_line_async</a> (uint32_t instance, const <a href="./classmavsdk_1_1_winch.html#classmavsdk_1_1_winch_1a683fc7d385d461efb059df917622a6b7">ResultCallback</a> callback)</td><td>Spool out the entire length of the line.</td></tr><tr><td style="text-align:right;"><a href="./classmavsdk_1_1_winch.html#classmavsdk_1_1_winch_1a48edb6e5176dc8d5e95bd30eacd7a091">Result</a></td><td><a href="#classmavsdk_1_1_winch_1a625f6d58d5447afbe0c40e3d896071b0">abandon_line</a> (uint32_t instance)const</td><td>Spool out the entire length of the line.</td></tr><tr><td style="text-align:right;">void</td><td><a href="#classmavsdk_1_1_winch_1af715b6c01dc75c44868c2936af04d40a">load_payload_async</a> (uint32_t instance, const <a href="./classmavsdk_1_1_winch.html#classmavsdk_1_1_winch_1a683fc7d385d461efb059df917622a6b7">ResultCallback</a> callback)</td><td>Spools out just enough to present the hook to the user to load the payload.</td></tr><tr><td style="text-align:right;"><a href="./classmavsdk_1_1_winch.html#classmavsdk_1_1_winch_1a48edb6e5176dc8d5e95bd30eacd7a091">Result</a></td><td><a href="#classmavsdk_1_1_winch_1a01fec2758f7f09d8aef5de23f4566d47">load_payload</a> (uint32_t instance)const</td><td>Spools out just enough to present the hook to the user to load the payload.</td></tr><tr><td style="text-align:right;">const <a href="./classmavsdk_1_1_winch.html">Winch</a> &amp;</td><td><a href="#classmavsdk_1_1_winch_1a95e5998fc48ba20b61001d344a7274ff">operator=</a> (const <a href="./classmavsdk_1_1_winch.html">Winch</a> &amp;)=delete</td><td>Equality operator (object is not copyable).</td></tr></tbody></table><h2 id="constructor-destructor-documentation" tabindex="-1">Constructor &amp; Destructor Documentation <a class="header-anchor" href="#constructor-destructor-documentation" aria-label="Permalink to &quot;Constructor &amp; Destructor Documentation&quot;">​</a></h2><h3 id="classmavsdk_1_1_winch_1a222e543b5ef54c89ee41411e800d3b88" tabindex="-1">Winch() <a class="header-anchor" href="#classmavsdk_1_1_winch_1a222e543b5ef54c89ee41411e800d3b88" aria-label="Permalink to &quot;Winch() {#classmavsdk_1_1_winch_1a222e543b5ef54c89ee41411e800d3b88}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Winch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Winch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(System </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">system)</span></span></code></pre></div><p>Constructor. Creates the plugin for a specific <a href="./classmavsdk_1_1_system.html">System</a>.</p><p>The plugin is typically created as shown below:</p><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">auto</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> winch </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Winch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(system);</span></span></code></pre></div><p><strong>Parameters</strong></p><ul><li><a href="./classmavsdk_1_1_system.html">System</a>&amp; <strong>system</strong> - The specific system associated with this plugin.</li></ul><h3 id="classmavsdk_1_1_winch_1a7546040a07899cc9fe3edb00cb1b2007" tabindex="-1">Winch() <a class="header-anchor" href="#classmavsdk_1_1_winch_1a7546040a07899cc9fe3edb00cb1b2007" aria-label="Permalink to &quot;Winch() {#classmavsdk_1_1_winch_1a7546040a07899cc9fe3edb00cb1b2007}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Winch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Winch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::shared_ptr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> System </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> system)</span></span></code></pre></div><p>Constructor. Creates the plugin for a specific <a href="./classmavsdk_1_1_system.html">System</a>.</p><p>The plugin is typically created as shown below:</p><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">auto</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> winch </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Winch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(system);</span></span></code></pre></div><p><strong>Parameters</strong></p><ul><li>std::shared_ptr&lt; <a href="./classmavsdk_1_1_system.html">System</a> &gt; <strong>system</strong> - The specific system associated with this plugin.</li></ul><h3 id="classmavsdk_1_1_winch_1a06330946e884dae7415003aa89c3010e" tabindex="-1">~Winch() <a class="header-anchor" href="#classmavsdk_1_1_winch_1a06330946e884dae7415003aa89c3010e" aria-label="Permalink to &quot;~Winch() {#classmavsdk_1_1_winch_1a06330946e884dae7415003aa89c3010e}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Winch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">~</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Winch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">override</span></span></code></pre></div><p>Destructor (internal use only).</p><h3 id="classmavsdk_1_1_winch_1a9125a173b929f9a1a2e5ca0199961fb4" tabindex="-1">Winch() <a class="header-anchor" href="#classmavsdk_1_1_winch_1a9125a173b929f9a1a2e5ca0199961fb4" aria-label="Permalink to &quot;Winch() {#classmavsdk_1_1_winch_1a9125a173b929f9a1a2e5ca0199961fb4}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Winch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Winch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Winch </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">other)</span></span></code></pre></div><p>Copy constructor.</p><p><strong>Parameters</strong></p><ul><li>const <a href="./classmavsdk_1_1_winch.html">Winch</a>&amp; <strong>other</strong> -</li></ul><h2 id="member-typdef-documentation" tabindex="-1">Member Typdef Documentation <a class="header-anchor" href="#member-typdef-documentation" aria-label="Permalink to &quot;Member Typdef Documentation&quot;">​</a></h2><h3 id="classmavsdk_1_1_winch_1a683fc7d385d461efb059df917622a6b7" tabindex="-1">typedef ResultCallback <a class="header-anchor" href="#classmavsdk_1_1_winch_1a683fc7d385d461efb059df917622a6b7" aria-label="Permalink to &quot;typedef ResultCallback {#classmavsdk_1_1_winch_1a683fc7d385d461efb059df917622a6b7}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Winch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::ResultCallback </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::function</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Result)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><p>Callback type for asynchronous <a href="./classmavsdk_1_1_winch.html">Winch</a> calls.</p><h3 id="classmavsdk_1_1_winch_1a6c84089eac00fc9de890ab7e8c0eb32a" tabindex="-1">typedef StatusCallback <a class="header-anchor" href="#classmavsdk_1_1_winch_1a6c84089eac00fc9de890ab7e8c0eb32a" aria-label="Permalink to &quot;typedef StatusCallback {#classmavsdk_1_1_winch_1a6c84089eac00fc9de890ab7e8c0eb32a}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Winch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::StatusCallback </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::function</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Status)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><p>Callback type for subscribe_status.</p><h3 id="classmavsdk_1_1_winch_1a78284180b73b3092c37e45b3c2bdc2ab" tabindex="-1">typedef StatusHandle <a class="header-anchor" href="#classmavsdk_1_1_winch_1a78284180b73b3092c37e45b3c2bdc2ab" aria-label="Permalink to &quot;typedef StatusHandle {#classmavsdk_1_1_winch_1a78284180b73b3092c37e45b3c2bdc2ab}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Winch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::StatusHandle </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  Handle</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Status</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><p><a href="./classmavsdk_1_1_handle.html">Handle</a> type for subscribe_status.</p><h2 id="member-enumeration-documentation" tabindex="-1">Member Enumeration Documentation <a class="header-anchor" href="#member-enumeration-documentation" aria-label="Permalink to &quot;Member Enumeration Documentation&quot;">​</a></h2><h3 id="classmavsdk_1_1_winch_1a2c63ccb04edf046026919d5b3db77a83" tabindex="-1">enum WinchAction <a class="header-anchor" href="#classmavsdk_1_1_winch_1a2c63ccb04edf046026919d5b3db77a83" aria-label="Permalink to &quot;enum WinchAction {#classmavsdk_1_1_winch_1a2c63ccb04edf046026919d5b3db77a83}&quot;">​</a></h3><p><a href="./classmavsdk_1_1_winch.html">Winch</a> <a href="./classmavsdk_1_1_action.html">Action</a> type.</p><table tabindex="0"><thead><tr><th>Value</th><th>Description</th></tr></thead><tbody><tr><td><span id="classmavsdk_1_1_winch_1a2c63ccb04edf046026919d5b3db77a83a4160be5df3fc34c3b165f28616f1bd16"></span> <code>Relaxed</code></td><td>Allow motor to freewheel.</td></tr><tr><td><span id="classmavsdk_1_1_winch_1a2c63ccb04edf046026919d5b3db77a83afd7ed80d3677cf91582f0a9e6ce3477b"></span> <code>RelativeLengthControl</code></td><td>Wind or unwind specified length of line, optionally using specified rate.</td></tr><tr><td><span id="classmavsdk_1_1_winch_1a2c63ccb04edf046026919d5b3db77a83aae2b389b99e74cc32f0fabded761cda6"></span> <code>RateControl</code></td><td>Wind or unwind line at specified rate.</td></tr><tr><td><span id="classmavsdk_1_1_winch_1a2c63ccb04edf046026919d5b3db77a83ab485167c5b0e59d47009a16f90fe2659"></span> <code>Lock</code></td><td>Perform the locking sequence to relieve motor while in the fully retracted position.</td></tr><tr><td><span id="classmavsdk_1_1_winch_1a2c63ccb04edf046026919d5b3db77a83a55f090686d433b9f61cdbacc4a741375"></span> <code>Deliver</code></td><td>Sequence of drop, slow down, touch down, reel up, lock.</td></tr><tr><td><span id="classmavsdk_1_1_winch_1a2c63ccb04edf046026919d5b3db77a83abcd8db575b47c838e5d551e3973db4ac"></span> <code>Hold</code></td><td>Engage motor and hold current position.</td></tr><tr><td><span id="classmavsdk_1_1_winch_1a2c63ccb04edf046026919d5b3db77a83a0dfc45bc99de47ebc26a3a7752eb1e19"></span> <code>Retract</code></td><td>Return the reel to the fully retracted position.</td></tr><tr><td><span id="classmavsdk_1_1_winch_1a2c63ccb04edf046026919d5b3db77a83a460a2503753c200a2324d95a61c14e38"></span> <code>LoadLine</code></td><td>Load the reel with line. The winch will calculate the total loaded length and stop when the tension exceeds a threshold.</td></tr><tr><td><span id="classmavsdk_1_1_winch_1a2c63ccb04edf046026919d5b3db77a83af0ac1672e2a313e081a0dbdfcce6c23e"></span> <code>AbandonLine</code></td><td>Spool out the entire length of the line.</td></tr><tr><td><span id="classmavsdk_1_1_winch_1a2c63ccb04edf046026919d5b3db77a83aa296461c9776b8003324a6fb508d30bd"></span> <code>LoadPayload</code></td><td>Spools out just enough to present the hook to the user to load the payload.</td></tr></tbody></table><h3 id="classmavsdk_1_1_winch_1a48edb6e5176dc8d5e95bd30eacd7a091" tabindex="-1">enum Result <a class="header-anchor" href="#classmavsdk_1_1_winch_1a48edb6e5176dc8d5e95bd30eacd7a091" aria-label="Permalink to &quot;enum Result {#classmavsdk_1_1_winch_1a48edb6e5176dc8d5e95bd30eacd7a091}&quot;">​</a></h3><p>Possible results returned for winch action requests.</p><table tabindex="0"><thead><tr><th>Value</th><th>Description</th></tr></thead><tbody><tr><td><span id="classmavsdk_1_1_winch_1a48edb6e5176dc8d5e95bd30eacd7a091a88183b946cc5f0e8c96b2e66e1c74a7e"></span> <code>Unknown</code></td><td>Unknown result.</td></tr><tr><td><span id="classmavsdk_1_1_winch_1a48edb6e5176dc8d5e95bd30eacd7a091a505a83f220c02df2f85c3810cd9ceb38"></span> <code>Success</code></td><td>Request was successful.</td></tr><tr><td><span id="classmavsdk_1_1_winch_1a48edb6e5176dc8d5e95bd30eacd7a091a1119faf72ba0dfb23aeea644fed960ad"></span> <code>NoSystem</code></td><td>No system is connected.</td></tr><tr><td><span id="classmavsdk_1_1_winch_1a48edb6e5176dc8d5e95bd30eacd7a091ad8a942ef2b04672adfafef0ad817a407"></span> <code>Busy</code></td><td>Temporarily rejected.</td></tr><tr><td><span id="classmavsdk_1_1_winch_1a48edb6e5176dc8d5e95bd30eacd7a091ac85a251cc457840f1e032f1b733e9398"></span> <code>Timeout</code></td><td>Request timed out.</td></tr><tr><td><span id="classmavsdk_1_1_winch_1a48edb6e5176dc8d5e95bd30eacd7a091ab4080bdf74febf04d578ff105cce9d3f"></span> <code>Unsupported</code></td><td><a href="./classmavsdk_1_1_action.html">Action</a> not supported.</td></tr><tr><td><span id="classmavsdk_1_1_winch_1a48edb6e5176dc8d5e95bd30eacd7a091ad7c8c85bf79bbe1b7188497c32c3b0ca"></span> <code>Failed</code></td><td><a href="./classmavsdk_1_1_action.html">Action</a> failed.</td></tr></tbody></table><h2 id="member-function-documentation" tabindex="-1">Member Function Documentation <a class="header-anchor" href="#member-function-documentation" aria-label="Permalink to &quot;Member Function Documentation&quot;">​</a></h2><h3 id="classmavsdk_1_1_winch_1a92363df861842edf0b81aa18fba26bc8" tabindex="-1">subscribe_status() <a class="header-anchor" href="#classmavsdk_1_1_winch_1a92363df861842edf0b81aa18fba26bc8" aria-label="Permalink to &quot;subscribe_status() {#classmavsdk_1_1_winch_1a92363df861842edf0b81aa18fba26bc8}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">StatusHandle</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Winch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">subscribe_status</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> StatusCallback</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &amp;</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">callback</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Subscribe to &#39;winch status&#39; updates.</p><p><strong>Parameters</strong></p><ul><li>const <a href="./classmavsdk_1_1_winch.html#classmavsdk_1_1_winch_1a6c84089eac00fc9de890ab7e8c0eb32a">StatusCallback</a>&amp; <strong>callback</strong> -</li></ul><p><strong>Returns</strong></p><p> <a href="./classmavsdk_1_1_winch.html#classmavsdk_1_1_winch_1a78284180b73b3092c37e45b3c2bdc2ab">StatusHandle</a> -</p><h3 id="classmavsdk_1_1_winch_1af1176a4992e0a6850dbd44ea2b1f0bad" tabindex="-1">unsubscribe_status() <a class="header-anchor" href="#classmavsdk_1_1_winch_1af1176a4992e0a6850dbd44ea2b1f0bad" aria-label="Permalink to &quot;unsubscribe_status() {#classmavsdk_1_1_winch_1af1176a4992e0a6850dbd44ea2b1f0bad}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Winch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">unsubscribe_status</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">StatusHandle</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> handle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Unsubscribe from subscribe_status.</p><p><strong>Parameters</strong></p><ul><li><a href="./classmavsdk_1_1_winch.html#classmavsdk_1_1_winch_1a78284180b73b3092c37e45b3c2bdc2ab">StatusHandle</a> <strong>handle</strong> -</li></ul><h3 id="classmavsdk_1_1_winch_1aa24ccd5e6e44db1fbf96e4aca6947689" tabindex="-1">status() <a class="header-anchor" href="#classmavsdk_1_1_winch_1aa24ccd5e6e44db1fbf96e4aca6947689" aria-label="Permalink to &quot;status() {#classmavsdk_1_1_winch_1aa24ccd5e6e44db1fbf96e4aca6947689}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Status</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Winch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">status</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span></span></code></pre></div><p>Poll for &#39;<a href="./structmavsdk_1_1_winch_1_1_status.html">Status</a>&#39; (blocking).</p><p><strong>Returns</strong></p><p> <a href="./structmavsdk_1_1_winch_1_1_status.html">Status</a> - One <a href="./structmavsdk_1_1_winch_1_1_status.html">Status</a> update.</p><h3 id="classmavsdk_1_1_winch_1a48eec9e1fb693620e452234e0a740989" tabindex="-1">relax_async() <a class="header-anchor" href="#classmavsdk_1_1_winch_1a48eec9e1fb693620e452234e0a740989" aria-label="Permalink to &quot;relax_async() {#classmavsdk_1_1_winch_1a48eec9e1fb693620e452234e0a740989}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Winch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">relax_async</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uint32_t</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> instance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ResultCallback</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> callback</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Allow motor to freewheel.</p><p>This function is non-blocking. See &#39;relax&#39; for the blocking counterpart.</p><p><strong>Parameters</strong></p><ul><li>uint32_t <strong>instance</strong> -</li><li>const <a href="./classmavsdk_1_1_winch.html#classmavsdk_1_1_winch_1a683fc7d385d461efb059df917622a6b7">ResultCallback</a> <strong>callback</strong> -</li></ul><h3 id="classmavsdk_1_1_winch_1ae1fa0d57d8d72e3bbbb4833770047ab3" tabindex="-1">relax() <a class="header-anchor" href="#classmavsdk_1_1_winch_1ae1fa0d57d8d72e3bbbb4833770047ab3" aria-label="Permalink to &quot;relax() {#classmavsdk_1_1_winch_1ae1fa0d57d8d72e3bbbb4833770047ab3}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Result</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Winch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">relax</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uint32_t</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> instance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span></span></code></pre></div><p>Allow motor to freewheel.</p><p>This function is blocking. See &#39;relax_async&#39; for the non-blocking counterpart.</p><p><strong>Parameters</strong></p><ul><li>uint32_t <strong>instance</strong> -</li></ul><p><strong>Returns</strong></p><p> <a href="./classmavsdk_1_1_winch.html#classmavsdk_1_1_winch_1a48edb6e5176dc8d5e95bd30eacd7a091">Result</a> - Result of request.</p><h3 id="classmavsdk_1_1_winch_1aa2cb382d36cda8e0fe918ae07fb7a9ec" tabindex="-1">relative_length_control_async() <a class="header-anchor" href="#classmavsdk_1_1_winch_1aa2cb382d36cda8e0fe918ae07fb7a9ec" aria-label="Permalink to &quot;relative_length_control_async() {#classmavsdk_1_1_winch_1aa2cb382d36cda8e0fe918ae07fb7a9ec}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Winch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">relative_length_control_async</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uint32_t</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> instance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">float</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> length_m</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">float</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> rate_m_s</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ResultCallback</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> callback</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Wind or unwind specified length of line, optionally using specified rate.</p><p>This function is non-blocking. See &#39;relative_length_control&#39; for the blocking counterpart.</p><p><strong>Parameters</strong></p><ul><li>uint32_t <strong>instance</strong> -</li><li>float <strong>length_m</strong> -</li><li>float <strong>rate_m_s</strong> -</li><li>const <a href="./classmavsdk_1_1_winch.html#classmavsdk_1_1_winch_1a683fc7d385d461efb059df917622a6b7">ResultCallback</a> <strong>callback</strong> -</li></ul><h3 id="classmavsdk_1_1_winch_1ae39f5844dd5b6d93b6ccf3953781cee0" tabindex="-1">relative_length_control() <a class="header-anchor" href="#classmavsdk_1_1_winch_1ae39f5844dd5b6d93b6ccf3953781cee0" aria-label="Permalink to &quot;relative_length_control() {#classmavsdk_1_1_winch_1ae39f5844dd5b6d93b6ccf3953781cee0}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Result</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Winch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">relative_length_control</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uint32_t</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> instance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">float</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> length_m</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">float</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> rate_m_s</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span></span></code></pre></div><p>Wind or unwind specified length of line, optionally using specified rate.</p><p>This function is blocking. See &#39;relative_length_control_async&#39; for the non-blocking counterpart.</p><p><strong>Parameters</strong></p><ul><li>uint32_t <strong>instance</strong> -</li><li>float <strong>length_m</strong> -</li><li>float <strong>rate_m_s</strong> -</li></ul><p><strong>Returns</strong></p><p> <a href="./classmavsdk_1_1_winch.html#classmavsdk_1_1_winch_1a48edb6e5176dc8d5e95bd30eacd7a091">Result</a> - Result of request.</p><h3 id="classmavsdk_1_1_winch_1a21ce05ef8cedd2601d22209d31a980f8" tabindex="-1">rate_control_async() <a class="header-anchor" href="#classmavsdk_1_1_winch_1a21ce05ef8cedd2601d22209d31a980f8" aria-label="Permalink to &quot;rate_control_async() {#classmavsdk_1_1_winch_1a21ce05ef8cedd2601d22209d31a980f8}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Winch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rate_control_async</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uint32_t</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> instance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">float</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> rate_m_s</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ResultCallback</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> callback</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Wind or unwind line at specified rate.</p><p>This function is non-blocking. See &#39;rate_control&#39; for the blocking counterpart.</p><p><strong>Parameters</strong></p><ul><li>uint32_t <strong>instance</strong> -</li><li>float <strong>rate_m_s</strong> -</li><li>const <a href="./classmavsdk_1_1_winch.html#classmavsdk_1_1_winch_1a683fc7d385d461efb059df917622a6b7">ResultCallback</a> <strong>callback</strong> -</li></ul><h3 id="classmavsdk_1_1_winch_1aaec8a2bac41941e1f696cd9541abd4ca" tabindex="-1">rate_control() <a class="header-anchor" href="#classmavsdk_1_1_winch_1aaec8a2bac41941e1f696cd9541abd4ca" aria-label="Permalink to &quot;rate_control() {#classmavsdk_1_1_winch_1aaec8a2bac41941e1f696cd9541abd4ca}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Result</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Winch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rate_control</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uint32_t</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> instance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">float</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> rate_m_s</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span></span></code></pre></div><p>Wind or unwind line at specified rate.</p><p>This function is blocking. See &#39;rate_control_async&#39; for the non-blocking counterpart.</p><p><strong>Parameters</strong></p><ul><li>uint32_t <strong>instance</strong> -</li><li>float <strong>rate_m_s</strong> -</li></ul><p><strong>Returns</strong></p><p> <a href="./classmavsdk_1_1_winch.html#classmavsdk_1_1_winch_1a48edb6e5176dc8d5e95bd30eacd7a091">Result</a> - Result of request.</p><h3 id="classmavsdk_1_1_winch_1a0ff91279058752931bee2bc5dfd7c711" tabindex="-1">lock_async() <a class="header-anchor" href="#classmavsdk_1_1_winch_1a0ff91279058752931bee2bc5dfd7c711" aria-label="Permalink to &quot;lock_async() {#classmavsdk_1_1_winch_1a0ff91279058752931bee2bc5dfd7c711}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Winch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lock_async</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uint32_t</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> instance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ResultCallback</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> callback</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Perform the locking sequence to relieve motor while in the fully retracted position.</p><p>This function is non-blocking. See &#39;lock&#39; for the blocking counterpart.</p><p><strong>Parameters</strong></p><ul><li>uint32_t <strong>instance</strong> -</li><li>const <a href="./classmavsdk_1_1_winch.html#classmavsdk_1_1_winch_1a683fc7d385d461efb059df917622a6b7">ResultCallback</a> <strong>callback</strong> -</li></ul><h3 id="classmavsdk_1_1_winch_1ad0f907f0164a724f8e8a57fe9796ecb3" tabindex="-1">lock() <a class="header-anchor" href="#classmavsdk_1_1_winch_1ad0f907f0164a724f8e8a57fe9796ecb3" aria-label="Permalink to &quot;lock() {#classmavsdk_1_1_winch_1ad0f907f0164a724f8e8a57fe9796ecb3}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Result</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Winch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lock</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uint32_t</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> instance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span></span></code></pre></div><p>Perform the locking sequence to relieve motor while in the fully retracted position.</p><p>This function is blocking. See &#39;lock_async&#39; for the non-blocking counterpart.</p><p><strong>Parameters</strong></p><ul><li>uint32_t <strong>instance</strong> -</li></ul><p><strong>Returns</strong></p><p> <a href="./classmavsdk_1_1_winch.html#classmavsdk_1_1_winch_1a48edb6e5176dc8d5e95bd30eacd7a091">Result</a> - Result of request.</p><h3 id="classmavsdk_1_1_winch_1acbd43a3f00ab1e910b6b05654afc9458" tabindex="-1">deliver_async() <a class="header-anchor" href="#classmavsdk_1_1_winch_1acbd43a3f00ab1e910b6b05654afc9458" aria-label="Permalink to &quot;deliver_async() {#classmavsdk_1_1_winch_1acbd43a3f00ab1e910b6b05654afc9458}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Winch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">deliver_async</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uint32_t</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> instance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ResultCallback</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> callback</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Sequence of drop, slow down, touch down, reel up, lock.</p><p>This function is non-blocking. See &#39;deliver&#39; for the blocking counterpart.</p><p><strong>Parameters</strong></p><ul><li>uint32_t <strong>instance</strong> -</li><li>const <a href="./classmavsdk_1_1_winch.html#classmavsdk_1_1_winch_1a683fc7d385d461efb059df917622a6b7">ResultCallback</a> <strong>callback</strong> -</li></ul><h3 id="classmavsdk_1_1_winch_1a8910df835085243a366290dbc4492680" tabindex="-1">deliver() <a class="header-anchor" href="#classmavsdk_1_1_winch_1a8910df835085243a366290dbc4492680" aria-label="Permalink to &quot;deliver() {#classmavsdk_1_1_winch_1a8910df835085243a366290dbc4492680}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Result</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Winch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">deliver</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uint32_t</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> instance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span></span></code></pre></div><p>Sequence of drop, slow down, touch down, reel up, lock.</p><p>This function is blocking. See &#39;deliver_async&#39; for the non-blocking counterpart.</p><p><strong>Parameters</strong></p><ul><li>uint32_t <strong>instance</strong> -</li></ul><p><strong>Returns</strong></p><p> <a href="./classmavsdk_1_1_winch.html#classmavsdk_1_1_winch_1a48edb6e5176dc8d5e95bd30eacd7a091">Result</a> - Result of request.</p><h3 id="classmavsdk_1_1_winch_1a6c97626d33532469871a687e8043e27e" tabindex="-1">hold_async() <a class="header-anchor" href="#classmavsdk_1_1_winch_1a6c97626d33532469871a687e8043e27e" aria-label="Permalink to &quot;hold_async() {#classmavsdk_1_1_winch_1a6c97626d33532469871a687e8043e27e}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Winch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hold_async</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uint32_t</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> instance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ResultCallback</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> callback</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Engage motor and hold current position.</p><p>This function is non-blocking. See &#39;hold&#39; for the blocking counterpart.</p><p><strong>Parameters</strong></p><ul><li>uint32_t <strong>instance</strong> -</li><li>const <a href="./classmavsdk_1_1_winch.html#classmavsdk_1_1_winch_1a683fc7d385d461efb059df917622a6b7">ResultCallback</a> <strong>callback</strong> -</li></ul><h3 id="classmavsdk_1_1_winch_1a2e7ae05d09b82964024c70211b1920d9" tabindex="-1">hold() <a class="header-anchor" href="#classmavsdk_1_1_winch_1a2e7ae05d09b82964024c70211b1920d9" aria-label="Permalink to &quot;hold() {#classmavsdk_1_1_winch_1a2e7ae05d09b82964024c70211b1920d9}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Result</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Winch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hold</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uint32_t</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> instance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span></span></code></pre></div><p>Engage motor and hold current position.</p><p>This function is blocking. See &#39;hold_async&#39; for the non-blocking counterpart.</p><p><strong>Parameters</strong></p><ul><li>uint32_t <strong>instance</strong> -</li></ul><p><strong>Returns</strong></p><p> <a href="./classmavsdk_1_1_winch.html#classmavsdk_1_1_winch_1a48edb6e5176dc8d5e95bd30eacd7a091">Result</a> - Result of request.</p><h3 id="classmavsdk_1_1_winch_1a6485b743115d441b43f3d0e39341412d" tabindex="-1">retract_async() <a class="header-anchor" href="#classmavsdk_1_1_winch_1a6485b743115d441b43f3d0e39341412d" aria-label="Permalink to &quot;retract_async() {#classmavsdk_1_1_winch_1a6485b743115d441b43f3d0e39341412d}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Winch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">retract_async</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uint32_t</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> instance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ResultCallback</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> callback</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return the reel to the fully retracted position.</p><p>This function is non-blocking. See &#39;retract&#39; for the blocking counterpart.</p><p><strong>Parameters</strong></p><ul><li>uint32_t <strong>instance</strong> -</li><li>const <a href="./classmavsdk_1_1_winch.html#classmavsdk_1_1_winch_1a683fc7d385d461efb059df917622a6b7">ResultCallback</a> <strong>callback</strong> -</li></ul><h3 id="classmavsdk_1_1_winch_1a353cad0259d2eb8201e2884e037422eb" tabindex="-1">retract() <a class="header-anchor" href="#classmavsdk_1_1_winch_1a353cad0259d2eb8201e2884e037422eb" aria-label="Permalink to &quot;retract() {#classmavsdk_1_1_winch_1a353cad0259d2eb8201e2884e037422eb}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Result</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Winch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">retract</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uint32_t</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> instance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span></span></code></pre></div><p>Return the reel to the fully retracted position.</p><p>This function is blocking. See &#39;retract_async&#39; for the non-blocking counterpart.</p><p><strong>Parameters</strong></p><ul><li>uint32_t <strong>instance</strong> -</li></ul><p><strong>Returns</strong></p><p> <a href="./classmavsdk_1_1_winch.html#classmavsdk_1_1_winch_1a48edb6e5176dc8d5e95bd30eacd7a091">Result</a> - Result of request.</p><h3 id="classmavsdk_1_1_winch_1ad0588792ef3fbd469511f99988140637" tabindex="-1">load_line_async() <a class="header-anchor" href="#classmavsdk_1_1_winch_1ad0588792ef3fbd469511f99988140637" aria-label="Permalink to &quot;load_line_async() {#classmavsdk_1_1_winch_1ad0588792ef3fbd469511f99988140637}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Winch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">load_line_async</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uint32_t</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> instance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ResultCallback</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> callback</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Load the reel with line.</p><p>The winch will calculate the total loaded length and stop when the tension exceeds a threshold.</p><p>This function is non-blocking. See &#39;load_line&#39; for the blocking counterpart.</p><p><strong>Parameters</strong></p><ul><li>uint32_t <strong>instance</strong> -</li><li>const <a href="./classmavsdk_1_1_winch.html#classmavsdk_1_1_winch_1a683fc7d385d461efb059df917622a6b7">ResultCallback</a> <strong>callback</strong> -</li></ul><h3 id="classmavsdk_1_1_winch_1aabeb779b2e03632176799c92058adb92" tabindex="-1">load_line() <a class="header-anchor" href="#classmavsdk_1_1_winch_1aabeb779b2e03632176799c92058adb92" aria-label="Permalink to &quot;load_line() {#classmavsdk_1_1_winch_1aabeb779b2e03632176799c92058adb92}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Result</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Winch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">load_line</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uint32_t</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> instance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span></span></code></pre></div><p>Load the reel with line.</p><p>The winch will calculate the total loaded length and stop when the tension exceeds a threshold.</p><p>This function is blocking. See &#39;load_line_async&#39; for the non-blocking counterpart.</p><p><strong>Parameters</strong></p><ul><li>uint32_t <strong>instance</strong> -</li></ul><p><strong>Returns</strong></p><p> <a href="./classmavsdk_1_1_winch.html#classmavsdk_1_1_winch_1a48edb6e5176dc8d5e95bd30eacd7a091">Result</a> - Result of request.</p><h3 id="classmavsdk_1_1_winch_1a3970c74e067d3734ba8dd3382c534b0a" tabindex="-1">abandon_line_async() <a class="header-anchor" href="#classmavsdk_1_1_winch_1a3970c74e067d3734ba8dd3382c534b0a" aria-label="Permalink to &quot;abandon_line_async() {#classmavsdk_1_1_winch_1a3970c74e067d3734ba8dd3382c534b0a}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Winch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">abandon_line_async</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uint32_t</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> instance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ResultCallback</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> callback</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Spool out the entire length of the line.</p><p>This function is non-blocking. See &#39;abandon_line&#39; for the blocking counterpart.</p><p><strong>Parameters</strong></p><ul><li>uint32_t <strong>instance</strong> -</li><li>const <a href="./classmavsdk_1_1_winch.html#classmavsdk_1_1_winch_1a683fc7d385d461efb059df917622a6b7">ResultCallback</a> <strong>callback</strong> -</li></ul><h3 id="classmavsdk_1_1_winch_1a625f6d58d5447afbe0c40e3d896071b0" tabindex="-1">abandon_line() <a class="header-anchor" href="#classmavsdk_1_1_winch_1a625f6d58d5447afbe0c40e3d896071b0" aria-label="Permalink to &quot;abandon_line() {#classmavsdk_1_1_winch_1a625f6d58d5447afbe0c40e3d896071b0}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Result</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Winch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">abandon_line</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uint32_t</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> instance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span></span></code></pre></div><p>Spool out the entire length of the line.</p><p>This function is blocking. See &#39;abandon_line_async&#39; for the non-blocking counterpart.</p><p><strong>Parameters</strong></p><ul><li>uint32_t <strong>instance</strong> -</li></ul><p><strong>Returns</strong></p><p> <a href="./classmavsdk_1_1_winch.html#classmavsdk_1_1_winch_1a48edb6e5176dc8d5e95bd30eacd7a091">Result</a> - Result of request.</p><h3 id="classmavsdk_1_1_winch_1af715b6c01dc75c44868c2936af04d40a" tabindex="-1">load_payload_async() <a class="header-anchor" href="#classmavsdk_1_1_winch_1af715b6c01dc75c44868c2936af04d40a" aria-label="Permalink to &quot;load_payload_async() {#classmavsdk_1_1_winch_1af715b6c01dc75c44868c2936af04d40a}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Winch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">load_payload_async</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uint32_t</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> instance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ResultCallback</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> callback</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Spools out just enough to present the hook to the user to load the payload.</p><p>This function is non-blocking. See &#39;load_payload&#39; for the blocking counterpart.</p><p><strong>Parameters</strong></p><ul><li>uint32_t <strong>instance</strong> -</li><li>const <a href="./classmavsdk_1_1_winch.html#classmavsdk_1_1_winch_1a683fc7d385d461efb059df917622a6b7">ResultCallback</a> <strong>callback</strong> -</li></ul><h3 id="classmavsdk_1_1_winch_1a01fec2758f7f09d8aef5de23f4566d47" tabindex="-1">load_payload() <a class="header-anchor" href="#classmavsdk_1_1_winch_1a01fec2758f7f09d8aef5de23f4566d47" aria-label="Permalink to &quot;load_payload() {#classmavsdk_1_1_winch_1a01fec2758f7f09d8aef5de23f4566d47}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Result</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Winch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">load_payload</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uint32_t</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> instance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span></span></code></pre></div><p>Spools out just enough to present the hook to the user to load the payload.</p><p>This function is blocking. See &#39;load_payload_async&#39; for the non-blocking counterpart.</p><p><strong>Parameters</strong></p><ul><li>uint32_t <strong>instance</strong> -</li></ul><p><strong>Returns</strong></p><p> <a href="./classmavsdk_1_1_winch.html#classmavsdk_1_1_winch_1a48edb6e5176dc8d5e95bd30eacd7a091">Result</a> - Result of request.</p><h3 id="classmavsdk_1_1_winch_1a95e5998fc48ba20b61001d344a7274ff" tabindex="-1">operator=() <a class="header-anchor" href="#classmavsdk_1_1_winch_1a95e5998fc48ba20b61001d344a7274ff" aria-label="Permalink to &quot;operator=() {#classmavsdk_1_1_winch_1a95e5998fc48ba20b61001d344a7274ff}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Winch</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &amp;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Winch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">operator</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Winch</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=delete</span></span></code></pre></div><p>Equality operator (object is not copyable).</p><p><strong>Parameters</strong></p><ul><li>const <a href="./classmavsdk_1_1_winch.html">Winch</a>&amp; -</li></ul><p><strong>Returns</strong></p><p> const <a href="./classmavsdk_1_1_winch.html">Winch</a> &amp; -</p>',218)]))}const _=a(n,[["render",l]]);export{o as __pageData,_ as default};
