import{_ as s,c as t,al as i,o as e}from"./chunks/framework.JotrKMnz.js";const k=JSON.parse('{"title":"mavsdk::Mocap Class Reference","description":"","frontmatter":{"github_branch":"v3"},"headers":[],"relativePath":"en/cpp/api_reference/classmavsdk_1_1_mocap.md","filePath":"en/cpp/api_reference/classmavsdk_1_1_mocap.md"}'),p={name:"en/cpp/api_reference/classmavsdk_1_1_mocap.md"};function d(n,a,o,l,c,h){return e(),t("div",null,a[0]||(a[0]=[i('<h1 id="mavsdk-mocap-class-reference" tabindex="-1">mavsdk::Mocap Class Reference <a class="header-anchor" href="#mavsdk-mocap-class-reference" aria-label="Permalink to &quot;mavsdk::Mocap Class Reference&quot;">​</a></h1><p><code>#include: mocap.h</code></p><hr><p>Allows interfacing a vehicle with a motion capture system in order to allow navigation without global positioning sources available (e.g. indoors, or when flying under a bridge. etc.).</p><h2 id="data-structures" tabindex="-1">Data Structures <a class="header-anchor" href="#data-structures" aria-label="Permalink to &quot;Data Structures&quot;">​</a></h2><p>struct <a href="./structmavsdk_1_1_mocap_1_1_angle_body.html">AngleBody</a></p><p>struct <a href="./structmavsdk_1_1_mocap_1_1_angular_velocity_body.html">AngularVelocityBody</a></p><p>struct <a href="./structmavsdk_1_1_mocap_1_1_attitude_position_mocap.html">AttitudePositionMocap</a></p><p>struct <a href="./structmavsdk_1_1_mocap_1_1_covariance.html">Covariance</a></p><p>struct <a href="./structmavsdk_1_1_mocap_1_1_odometry.html">Odometry</a></p><p>struct <a href="./structmavsdk_1_1_mocap_1_1_position_body.html">PositionBody</a></p><p>struct <a href="./structmavsdk_1_1_mocap_1_1_quaternion.html">Quaternion</a></p><p>struct <a href="./structmavsdk_1_1_mocap_1_1_speed_body.html">SpeedBody</a></p><p>struct <a href="./structmavsdk_1_1_mocap_1_1_vision_position_estimate.html">VisionPositionEstimate</a></p><h2 id="public-types" tabindex="-1">Public Types <a class="header-anchor" href="#public-types" aria-label="Permalink to &quot;Public Types&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>enum <a href="#classmavsdk_1_1_mocap_1a3af8c27b8ad9a4567feb1045e82884d5">Result</a></td><td>Possible results returned for mocap requests.</td></tr><tr><td>std::function&lt; void(<a href="./classmavsdk_1_1_mocap.html#classmavsdk_1_1_mocap_1a3af8c27b8ad9a4567feb1045e82884d5">Result</a>)&gt; <a href="#classmavsdk_1_1_mocap_1a7743939450a5e816dc9e7de237ec3934">ResultCallback</a></td><td>Callback type for asynchronous <a href="./classmavsdk_1_1_mocap.html">Mocap</a> calls.</td></tr></tbody></table><h2 id="public-member-functions" tabindex="-1">Public Member Functions <a class="header-anchor" href="#public-member-functions" aria-label="Permalink to &quot;Public Member Functions&quot;">​</a></h2><table tabindex="0"><thead><tr><th style="text-align:right;">Type</th><th>Name</th><th>Description</th></tr></thead><tbody><tr><td style="text-align:right;"> </td><td><a href="#classmavsdk_1_1_mocap_1a993147a5f0ae4c8a4ddf8be4258690cc">Mocap</a> (<a href="./classmavsdk_1_1_system.html">System</a> &amp; system)</td><td>Constructor. Creates the plugin for a specific <a href="./classmavsdk_1_1_system.html">System</a>.</td></tr><tr><td style="text-align:right;"> </td><td><a href="#classmavsdk_1_1_mocap_1a981aaa6a7e313376b88557013649de65">Mocap</a> (std::shared_ptr&lt; <a href="./classmavsdk_1_1_system.html">System</a> &gt; system)</td><td>Constructor. Creates the plugin for a specific <a href="./classmavsdk_1_1_system.html">System</a>.</td></tr><tr><td style="text-align:right;"> </td><td><a href="#classmavsdk_1_1_mocap_1ad78b5299367dc1db3236d0b674816e22">~Mocap</a> () override</td><td>Destructor (internal use only).</td></tr><tr><td style="text-align:right;"> </td><td><a href="#classmavsdk_1_1_mocap_1a0c2242e86da34ecd94c0a40dcec4858f">Mocap</a> (const <a href="./classmavsdk_1_1_mocap.html">Mocap</a> &amp; other)</td><td>Copy constructor.</td></tr><tr><td style="text-align:right;"><a href="./classmavsdk_1_1_mocap.html#classmavsdk_1_1_mocap_1a3af8c27b8ad9a4567feb1045e82884d5">Result</a></td><td><a href="#classmavsdk_1_1_mocap_1a22d007409839e28a45d7b10f10e22fd6">set_vision_position_estimate</a> (<a href="./structmavsdk_1_1_mocap_1_1_vision_position_estimate.html">VisionPositionEstimate</a> vision_position_estimate)const</td><td>Send Global position/attitude estimate from a vision source.</td></tr><tr><td style="text-align:right;"><a href="./classmavsdk_1_1_mocap.html#classmavsdk_1_1_mocap_1a3af8c27b8ad9a4567feb1045e82884d5">Result</a></td><td><a href="#classmavsdk_1_1_mocap_1a5f9a63d8bbed750056e139640b38cd7f">set_attitude_position_mocap</a> (<a href="./structmavsdk_1_1_mocap_1_1_attitude_position_mocap.html">AttitudePositionMocap</a> attitude_position_mocap)const</td><td>Send motion capture attitude and position.</td></tr><tr><td style="text-align:right;"><a href="./classmavsdk_1_1_mocap.html#classmavsdk_1_1_mocap_1a3af8c27b8ad9a4567feb1045e82884d5">Result</a></td><td><a href="#classmavsdk_1_1_mocap_1a149fa242e0b01bc0aee9204118b00f59">set_odometry</a> (<a href="./structmavsdk_1_1_mocap_1_1_odometry.html">Odometry</a> odometry)const</td><td>Send odometry information with an external interface.</td></tr><tr><td style="text-align:right;">const <a href="./classmavsdk_1_1_mocap.html">Mocap</a> &amp;</td><td><a href="#classmavsdk_1_1_mocap_1afb0d68876155a6990317b3b620f018f7">operator=</a> (const <a href="./classmavsdk_1_1_mocap.html">Mocap</a> &amp;)=delete</td><td>Equality operator (object is not copyable).</td></tr></tbody></table><h2 id="constructor-destructor-documentation" tabindex="-1">Constructor &amp; Destructor Documentation <a class="header-anchor" href="#constructor-destructor-documentation" aria-label="Permalink to &quot;Constructor &amp; Destructor Documentation&quot;">​</a></h2><h3 id="classmavsdk_1_1_mocap_1a993147a5f0ae4c8a4ddf8be4258690cc" tabindex="-1">Mocap() <a class="header-anchor" href="#classmavsdk_1_1_mocap_1a993147a5f0ae4c8a4ddf8be4258690cc" aria-label="Permalink to &quot;Mocap() {#classmavsdk_1_1_mocap_1a993147a5f0ae4c8a4ddf8be4258690cc}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Mocap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Mocap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(System </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">system)</span></span></code></pre></div><p>Constructor. Creates the plugin for a specific <a href="./classmavsdk_1_1_system.html">System</a>.</p><p>The plugin is typically created as shown below:</p><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">auto</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mocap </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Mocap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(system);</span></span></code></pre></div><p><strong>Parameters</strong></p><ul><li><a href="./classmavsdk_1_1_system.html">System</a>&amp; <strong>system</strong> - The specific system associated with this plugin.</li></ul><h3 id="classmavsdk_1_1_mocap_1a981aaa6a7e313376b88557013649de65" tabindex="-1">Mocap() <a class="header-anchor" href="#classmavsdk_1_1_mocap_1a981aaa6a7e313376b88557013649de65" aria-label="Permalink to &quot;Mocap() {#classmavsdk_1_1_mocap_1a981aaa6a7e313376b88557013649de65}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Mocap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Mocap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::shared_ptr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> System </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> system)</span></span></code></pre></div><p>Constructor. Creates the plugin for a specific <a href="./classmavsdk_1_1_system.html">System</a>.</p><p>The plugin is typically created as shown below:</p><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">auto</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mocap </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Mocap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(system);</span></span></code></pre></div><p><strong>Parameters</strong></p><ul><li>std::shared_ptr&lt; <a href="./classmavsdk_1_1_system.html">System</a> &gt; <strong>system</strong> - The specific system associated with this plugin.</li></ul><h3 id="classmavsdk_1_1_mocap_1ad78b5299367dc1db3236d0b674816e22" tabindex="-1">~Mocap() <a class="header-anchor" href="#classmavsdk_1_1_mocap_1ad78b5299367dc1db3236d0b674816e22" aria-label="Permalink to &quot;~Mocap() {#classmavsdk_1_1_mocap_1ad78b5299367dc1db3236d0b674816e22}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Mocap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">~</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Mocap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">override</span></span></code></pre></div><p>Destructor (internal use only).</p><h3 id="classmavsdk_1_1_mocap_1a0c2242e86da34ecd94c0a40dcec4858f" tabindex="-1">Mocap() <a class="header-anchor" href="#classmavsdk_1_1_mocap_1a0c2242e86da34ecd94c0a40dcec4858f" aria-label="Permalink to &quot;Mocap() {#classmavsdk_1_1_mocap_1a0c2242e86da34ecd94c0a40dcec4858f}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Mocap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Mocap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Mocap </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">other)</span></span></code></pre></div><p>Copy constructor.</p><p><strong>Parameters</strong></p><ul><li>const <a href="./classmavsdk_1_1_mocap.html">Mocap</a>&amp; <strong>other</strong> -</li></ul><h2 id="member-typdef-documentation" tabindex="-1">Member Typdef Documentation <a class="header-anchor" href="#member-typdef-documentation" aria-label="Permalink to &quot;Member Typdef Documentation&quot;">​</a></h2><h3 id="classmavsdk_1_1_mocap_1a7743939450a5e816dc9e7de237ec3934" tabindex="-1">typedef ResultCallback <a class="header-anchor" href="#classmavsdk_1_1_mocap_1a7743939450a5e816dc9e7de237ec3934" aria-label="Permalink to &quot;typedef ResultCallback {#classmavsdk_1_1_mocap_1a7743939450a5e816dc9e7de237ec3934}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Mocap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::ResultCallback </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::function</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Result)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><p>Callback type for asynchronous <a href="./classmavsdk_1_1_mocap.html">Mocap</a> calls.</p><h2 id="member-enumeration-documentation" tabindex="-1">Member Enumeration Documentation <a class="header-anchor" href="#member-enumeration-documentation" aria-label="Permalink to &quot;Member Enumeration Documentation&quot;">​</a></h2><h3 id="classmavsdk_1_1_mocap_1a3af8c27b8ad9a4567feb1045e82884d5" tabindex="-1">enum Result <a class="header-anchor" href="#classmavsdk_1_1_mocap_1a3af8c27b8ad9a4567feb1045e82884d5" aria-label="Permalink to &quot;enum Result {#classmavsdk_1_1_mocap_1a3af8c27b8ad9a4567feb1045e82884d5}&quot;">​</a></h3><p>Possible results returned for mocap requests.</p><table tabindex="0"><thead><tr><th>Value</th><th>Description</th></tr></thead><tbody><tr><td><span id="classmavsdk_1_1_mocap_1a3af8c27b8ad9a4567feb1045e82884d5a88183b946cc5f0e8c96b2e66e1c74a7e"></span> <code>Unknown</code></td><td>Unknown error.</td></tr><tr><td><span id="classmavsdk_1_1_mocap_1a3af8c27b8ad9a4567feb1045e82884d5a505a83f220c02df2f85c3810cd9ceb38"></span> <code>Success</code></td><td>Request succeeded.</td></tr><tr><td><span id="classmavsdk_1_1_mocap_1a3af8c27b8ad9a4567feb1045e82884d5a1119faf72ba0dfb23aeea644fed960ad"></span> <code>NoSystem</code></td><td>No system is connected.</td></tr><tr><td><span id="classmavsdk_1_1_mocap_1a3af8c27b8ad9a4567feb1045e82884d5a094a6f6b0868122a9dd008cb91c083e4"></span> <code>ConnectionError</code></td><td>Connection error.</td></tr><tr><td><span id="classmavsdk_1_1_mocap_1a3af8c27b8ad9a4567feb1045e82884d5aa7bcc6c4cca7f1edddd6823f37a6b3b6"></span> <code>InvalidRequestData</code></td><td>Invalid request data.</td></tr><tr><td><span id="classmavsdk_1_1_mocap_1a3af8c27b8ad9a4567feb1045e82884d5ab4080bdf74febf04d578ff105cce9d3f"></span> <code>Unsupported</code></td><td>Function unsupported.</td></tr></tbody></table><h2 id="member-function-documentation" tabindex="-1">Member Function Documentation <a class="header-anchor" href="#member-function-documentation" aria-label="Permalink to &quot;Member Function Documentation&quot;">​</a></h2><h3 id="classmavsdk_1_1_mocap_1a22d007409839e28a45d7b10f10e22fd6" tabindex="-1">set_vision_position_estimate() <a class="header-anchor" href="#classmavsdk_1_1_mocap_1a22d007409839e28a45d7b10f10e22fd6" aria-label="Permalink to &quot;set_vision_position_estimate() {#classmavsdk_1_1_mocap_1a22d007409839e28a45d7b10f10e22fd6}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Result</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Mocap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">set_vision_position_estimate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">VisionPositionEstimate</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> vision_position_estimate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span></span></code></pre></div><p>Send Global position/attitude estimate from a vision source.</p><p>This function is blocking.</p><p><strong>Parameters</strong></p><ul><li><a href="./structmavsdk_1_1_mocap_1_1_vision_position_estimate.html">VisionPositionEstimate</a> <strong>vision_position_estimate</strong> -</li></ul><p><strong>Returns</strong></p><p> <a href="./classmavsdk_1_1_mocap.html#classmavsdk_1_1_mocap_1a3af8c27b8ad9a4567feb1045e82884d5">Result</a> - Result of request.</p><h3 id="classmavsdk_1_1_mocap_1a5f9a63d8bbed750056e139640b38cd7f" tabindex="-1">set_attitude_position_mocap() <a class="header-anchor" href="#classmavsdk_1_1_mocap_1a5f9a63d8bbed750056e139640b38cd7f" aria-label="Permalink to &quot;set_attitude_position_mocap() {#classmavsdk_1_1_mocap_1a5f9a63d8bbed750056e139640b38cd7f}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Result</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Mocap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">set_attitude_position_mocap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">AttitudePositionMocap</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> attitude_position_mocap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span></span></code></pre></div><p>Send motion capture attitude and position.</p><p>This function is blocking.</p><p><strong>Parameters</strong></p><ul><li><a href="./structmavsdk_1_1_mocap_1_1_attitude_position_mocap.html">AttitudePositionMocap</a> <strong>attitude_position_mocap</strong> -</li></ul><p><strong>Returns</strong></p><p> <a href="./classmavsdk_1_1_mocap.html#classmavsdk_1_1_mocap_1a3af8c27b8ad9a4567feb1045e82884d5">Result</a> - Result of request.</p><h3 id="classmavsdk_1_1_mocap_1a149fa242e0b01bc0aee9204118b00f59" tabindex="-1">set_odometry() <a class="header-anchor" href="#classmavsdk_1_1_mocap_1a149fa242e0b01bc0aee9204118b00f59" aria-label="Permalink to &quot;set_odometry() {#classmavsdk_1_1_mocap_1a149fa242e0b01bc0aee9204118b00f59}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Result</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Mocap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">set_odometry</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Odometry</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> odometry</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span></span></code></pre></div><p>Send odometry information with an external interface.</p><p>This function is blocking.</p><p><strong>Parameters</strong></p><ul><li><a href="./structmavsdk_1_1_mocap_1_1_odometry.html">Odometry</a> <strong>odometry</strong> -</li></ul><p><strong>Returns</strong></p><p> <a href="./classmavsdk_1_1_mocap.html#classmavsdk_1_1_mocap_1a3af8c27b8ad9a4567feb1045e82884d5">Result</a> - Result of request.</p><h3 id="classmavsdk_1_1_mocap_1afb0d68876155a6990317b3b620f018f7" tabindex="-1">operator=() <a class="header-anchor" href="#classmavsdk_1_1_mocap_1afb0d68876155a6990317b3b620f018f7" aria-label="Permalink to &quot;operator=() {#classmavsdk_1_1_mocap_1afb0d68876155a6990317b3b620f018f7}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Mocap</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &amp;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Mocap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">operator</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Mocap</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=delete</span></span></code></pre></div><p>Equality operator (object is not copyable).</p><p><strong>Parameters</strong></p><ul><li>const <a href="./classmavsdk_1_1_mocap.html">Mocap</a>&amp; -</li></ul><p><strong>Returns</strong></p><p> const <a href="./classmavsdk_1_1_mocap.html">Mocap</a> &amp; -</p>',81)]))}const _=s(p,[["render",d]]);export{k as __pageData,_ as default};
