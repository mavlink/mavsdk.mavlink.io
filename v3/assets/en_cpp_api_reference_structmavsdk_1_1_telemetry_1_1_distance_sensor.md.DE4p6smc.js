import{_ as s,c as e,al as t,o as i}from"./chunks/framework.JotrKMnz.js";const k=JSON.parse('{"title":"mavsdk::Telemetry::DistanceSensor Struct Reference","description":"","frontmatter":{"github_branch":"v3"},"headers":[],"relativePath":"en/cpp/api_reference/structmavsdk_1_1_telemetry_1_1_distance_sensor.md","filePath":"en/cpp/api_reference/structmavsdk_1_1_telemetry_1_1_distance_sensor.md"}'),n={name:"en/cpp/api_reference/structmavsdk_1_1_telemetry_1_1_distance_sensor.md"};function r(d,a,_,c,l,h){return i(),e("div",null,a[0]||(a[0]=[t('<h1 id="mavsdk-telemetry-distancesensor-struct-reference" tabindex="-1">mavsdk::Telemetry::DistanceSensor Struct Reference <a class="header-anchor" href="#mavsdk-telemetry-distancesensor-struct-reference" aria-label="Permalink to &quot;mavsdk::Telemetry::DistanceSensor Struct Reference&quot;">​</a></h1><p><code>#include: telemetry.h</code></p><hr><p><a href="./structmavsdk_1_1_telemetry_1_1_distance_sensor.html">DistanceSensor</a> message type.</p><h2 id="data-fields" tabindex="-1">Data Fields <a class="header-anchor" href="#data-fields" aria-label="Permalink to &quot;Data Fields&quot;">​</a></h2><p>float <a href="#structmavsdk_1_1_telemetry_1_1_distance_sensor_1ab5601497cd86fdf3318ae26a312405cc">minimum_distance_m</a> { float(NAN)} - Minimum distance the sensor can measure, NaN if unknown.</p><p>float <a href="#structmavsdk_1_1_telemetry_1_1_distance_sensor_1aca0cdb621fc6df047abab9b3526c45b2">maximum_distance_m</a> { float(NAN)} - Maximum distance the sensor can measure, NaN if unknown.</p><p>float <a href="#structmavsdk_1_1_telemetry_1_1_distance_sensor_1a16bd239d2498378c57d910f07797a3a1">current_distance_m</a> { float(NAN)} - Current distance reading, NaN if unknown.</p><p><a href="./structmavsdk_1_1_telemetry_1_1_euler_angle.html">EulerAngle</a> <a href="#structmavsdk_1_1_telemetry_1_1_distance_sensor_1a3a4457610b4d7af76290a0b53426bc68">orientation</a> {} - Sensor Orientation reading.</p><h2 id="field-documentation" tabindex="-1">Field Documentation <a class="header-anchor" href="#field-documentation" aria-label="Permalink to &quot;Field Documentation&quot;">​</a></h2><h3 id="structmavsdk_1_1_telemetry_1_1_distance_sensor_1ab5601497cd86fdf3318ae26a312405cc" tabindex="-1">minimum_distance_m <a class="header-anchor" href="#structmavsdk_1_1_telemetry_1_1_distance_sensor_1ab5601497cd86fdf3318ae26a312405cc" aria-label="Permalink to &quot;minimum_distance_m {#structmavsdk_1_1_telemetry_1_1_distance_sensor_1ab5601497cd86fdf3318ae26a312405cc}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">float</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Telemetry</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">DistanceSensor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::minimum_distance_m { </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(NAN)}</span></span></code></pre></div><p>Minimum distance the sensor can measure, NaN if unknown.</p><h3 id="structmavsdk_1_1_telemetry_1_1_distance_sensor_1aca0cdb621fc6df047abab9b3526c45b2" tabindex="-1">maximum_distance_m <a class="header-anchor" href="#structmavsdk_1_1_telemetry_1_1_distance_sensor_1aca0cdb621fc6df047abab9b3526c45b2" aria-label="Permalink to &quot;maximum_distance_m {#structmavsdk_1_1_telemetry_1_1_distance_sensor_1aca0cdb621fc6df047abab9b3526c45b2}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">float</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Telemetry</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">DistanceSensor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::maximum_distance_m { </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(NAN)}</span></span></code></pre></div><p>Maximum distance the sensor can measure, NaN if unknown.</p><h3 id="structmavsdk_1_1_telemetry_1_1_distance_sensor_1a16bd239d2498378c57d910f07797a3a1" tabindex="-1">current_distance_m <a class="header-anchor" href="#structmavsdk_1_1_telemetry_1_1_distance_sensor_1a16bd239d2498378c57d910f07797a3a1" aria-label="Permalink to &quot;current_distance_m {#structmavsdk_1_1_telemetry_1_1_distance_sensor_1a16bd239d2498378c57d910f07797a3a1}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">float</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Telemetry</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">DistanceSensor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::current_distance_m { </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(NAN)}</span></span></code></pre></div><p>Current distance reading, NaN if unknown.</p><h3 id="structmavsdk_1_1_telemetry_1_1_distance_sensor_1a3a4457610b4d7af76290a0b53426bc68" tabindex="-1">orientation <a class="header-anchor" href="#structmavsdk_1_1_telemetry_1_1_distance_sensor_1a3a4457610b4d7af76290a0b53426bc68" aria-label="Permalink to &quot;orientation {#structmavsdk_1_1_telemetry_1_1_distance_sensor_1a3a4457610b4d7af76290a0b53426bc68}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">EulerAngle </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Telemetry</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">DistanceSensor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::orientation {}</span></span></code></pre></div><p>Sensor Orientation reading.</p>',22)]))}const o=s(n,[["render",r]]);export{k as __pageData,o as default};
