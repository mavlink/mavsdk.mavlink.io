import{_ as a,c as e,al as s,o as i}from"./chunks/framework.JotrKMnz.js";const d=JSON.parse('{"title":"mavsdk::Telemetry::ActuatorOutputStatus Struct Reference","description":"","frontmatter":{"github_branch":"v3"},"headers":[],"relativePath":"en/cpp/api_reference/structmavsdk_1_1_telemetry_1_1_actuator_output_status.md","filePath":"en/cpp/api_reference/structmavsdk_1_1_telemetry_1_1_actuator_output_status.md"}'),r={name:"en/cpp/api_reference/structmavsdk_1_1_telemetry_1_1_actuator_output_status.md"};function u(c,t,_,p,l,o){return i(),e("div",null,t[0]||(t[0]=[s('<h1 id="mavsdk-telemetry-actuatoroutputstatus-struct-reference" tabindex="-1">mavsdk::Telemetry::ActuatorOutputStatus Struct Reference <a class="header-anchor" href="#mavsdk-telemetry-actuatoroutputstatus-struct-reference" aria-label="Permalink to &quot;mavsdk::Telemetry::ActuatorOutputStatus Struct Reference&quot;">​</a></h1><p><code>#include: telemetry.h</code></p><hr><p>Actuator output status type.</p><h2 id="data-fields" tabindex="-1">Data Fields <a class="header-anchor" href="#data-fields" aria-label="Permalink to &quot;Data Fields&quot;">​</a></h2><p>uint32_t <a href="#structmavsdk_1_1_telemetry_1_1_actuator_output_status_1a6325f5b35293353c43cccf1ceaa5a712">active</a> {0} - Active outputs.</p><p>std::vector&lt; float &gt; <a href="#structmavsdk_1_1_telemetry_1_1_actuator_output_status_1a6fca8f50d2fb9f59fd7b384bf8a9b294">actuator</a> {} - Servo/motor output values.</p><h2 id="field-documentation" tabindex="-1">Field Documentation <a class="header-anchor" href="#field-documentation" aria-label="Permalink to &quot;Field Documentation&quot;">​</a></h2><h3 id="structmavsdk_1_1_telemetry_1_1_actuator_output_status_1a6325f5b35293353c43cccf1ceaa5a712" tabindex="-1">active <a class="header-anchor" href="#structmavsdk_1_1_telemetry_1_1_actuator_output_status_1a6325f5b35293353c43cccf1ceaa5a712" aria-label="Permalink to &quot;active {#structmavsdk_1_1_telemetry_1_1_actuator_output_status_1a6325f5b35293353c43cccf1ceaa5a712}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uint32_t</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Telemetry</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ActuatorOutputStatus</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::active {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Active outputs.</p><h3 id="structmavsdk_1_1_telemetry_1_1_actuator_output_status_1a6fca8f50d2fb9f59fd7b384bf8a9b294" tabindex="-1">actuator <a class="header-anchor" href="#structmavsdk_1_1_telemetry_1_1_actuator_output_status_1a6fca8f50d2fb9f59fd7b384bf8a9b294" aria-label="Permalink to &quot;actuator {#structmavsdk_1_1_telemetry_1_1_actuator_output_status_1a6fca8f50d2fb9f59fd7b384bf8a9b294}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::vector</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;float&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Telemetry</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ActuatorOutputStatus</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::actuator {}</span></span></code></pre></div><p>Servo/motor output values.</p>',14)]))}const h=a(r,[["render",u]]);export{d as __pageData,h as default};
