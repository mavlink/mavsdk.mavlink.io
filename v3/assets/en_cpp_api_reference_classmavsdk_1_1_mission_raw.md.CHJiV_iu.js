import{_ as a,c as i,al as t,o as e}from"./chunks/framework.JotrKMnz.js";const c=JSON.parse('{"title":"mavsdk::MissionRaw Class Reference","description":"","frontmatter":{"github_branch":"v3"},"headers":[],"relativePath":"en/cpp/api_reference/classmavsdk_1_1_mission_raw.md","filePath":"en/cpp/api_reference/classmavsdk_1_1_mission_raw.md"}'),n={name:"en/cpp/api_reference/classmavsdk_1_1_mission_raw.md"};function l(d,s,h,o,r,p){return e(),i("div",null,s[0]||(s[0]=[t('<h1 id="mavsdk-missionraw-class-reference" tabindex="-1">mavsdk::MissionRaw Class Reference <a class="header-anchor" href="#mavsdk-missionraw-class-reference" aria-label="Permalink to &quot;mavsdk::MissionRaw Class Reference&quot;">​</a></h1><p><code>#include: mission_raw.h</code></p><hr><p>Enable raw missions as exposed by MAVLink.</p><h2 id="data-structures" tabindex="-1">Data Structures <a class="header-anchor" href="#data-structures" aria-label="Permalink to &quot;Data Structures&quot;">​</a></h2><p>struct <a href="./structmavsdk_1_1_mission_raw_1_1_mission_import_data.html">MissionImportData</a></p><p>struct <a href="./structmavsdk_1_1_mission_raw_1_1_mission_item.html">MissionItem</a></p><p>struct <a href="./structmavsdk_1_1_mission_raw_1_1_mission_progress.html">MissionProgress</a></p><h2 id="public-types" tabindex="-1">Public Types <a class="header-anchor" href="#public-types" aria-label="Permalink to &quot;Public Types&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>enum <a href="#classmavsdk_1_1_mission_raw_1a7ea2a624818ebb5a3e209cc275d58eaf">Result</a></td><td>Possible results returned for action requests.</td></tr><tr><td>std::function&lt; void(<a href="./classmavsdk_1_1_mission_raw.html#classmavsdk_1_1_mission_raw_1a7ea2a624818ebb5a3e209cc275d58eaf">Result</a>)&gt; <a href="#classmavsdk_1_1_mission_raw_1a1a36a84f17dca07e1da49c13abbc9564">ResultCallback</a></td><td>Callback type for asynchronous <a href="./classmavsdk_1_1_mission_raw.html">MissionRaw</a> calls.</td></tr><tr><td>std::function&lt; void(<a href="./classmavsdk_1_1_mission_raw.html#classmavsdk_1_1_mission_raw_1a7ea2a624818ebb5a3e209cc275d58eaf">Result</a>, std::vector&lt; <a href="./structmavsdk_1_1_mission_raw_1_1_mission_item.html">MissionItem</a> &gt;)&gt; <a href="#classmavsdk_1_1_mission_raw_1a016633e6338744da02ac7cb6da28880a">DownloadMissionCallback</a></td><td>Callback type for download_mission_async.</td></tr><tr><td>std::function&lt; void(<a href="./classmavsdk_1_1_mission_raw.html#classmavsdk_1_1_mission_raw_1a7ea2a624818ebb5a3e209cc275d58eaf">Result</a>, std::vector&lt; <a href="./structmavsdk_1_1_mission_raw_1_1_mission_item.html">MissionItem</a> &gt;)&gt; <a href="#classmavsdk_1_1_mission_raw_1a3e75d493ec08fec9d9faa597238c11be">DownloadGeofenceCallback</a></td><td>Callback type for download_geofence_async.</td></tr><tr><td>std::function&lt; void(<a href="./classmavsdk_1_1_mission_raw.html#classmavsdk_1_1_mission_raw_1a7ea2a624818ebb5a3e209cc275d58eaf">Result</a>, std::vector&lt; <a href="./structmavsdk_1_1_mission_raw_1_1_mission_item.html">MissionItem</a> &gt;)&gt; <a href="#classmavsdk_1_1_mission_raw_1a473abce54f89efe05d5ac051c9d8a5dc">DownloadRallypointsCallback</a></td><td>Callback type for download_rallypoints_async.</td></tr><tr><td>std::function&lt; void(<a href="./structmavsdk_1_1_mission_raw_1_1_mission_progress.html">MissionProgress</a>)&gt; <a href="#classmavsdk_1_1_mission_raw_1a9dd594878925da494b4add6acc3184fc">MissionProgressCallback</a></td><td>Callback type for subscribe_mission_progress.</td></tr><tr><td><a href="./classmavsdk_1_1_handle.html">Handle</a>&lt; <a href="./structmavsdk_1_1_mission_raw_1_1_mission_progress.html">MissionProgress</a> &gt; <a href="#classmavsdk_1_1_mission_raw_1a34e0eaf9922daa5d27d2b044eae7885c">MissionProgressHandle</a></td><td><a href="./classmavsdk_1_1_handle.html">Handle</a> type for subscribe_mission_progress.</td></tr><tr><td>std::function&lt; void(bool)&gt; <a href="#classmavsdk_1_1_mission_raw_1ac22d81eefc5e883cdb6baf792a7487e6">MissionChangedCallback</a></td><td>Callback type for subscribe_mission_changed.</td></tr><tr><td><a href="./classmavsdk_1_1_handle.html">Handle</a>&lt; bool &gt; <a href="#classmavsdk_1_1_mission_raw_1a46da6d8a53822fd5fbd7b2a414624c5c">MissionChangedHandle</a></td><td><a href="./classmavsdk_1_1_handle.html">Handle</a> type for subscribe_mission_changed.</td></tr></tbody></table><h2 id="public-member-functions" tabindex="-1">Public Member Functions <a class="header-anchor" href="#public-member-functions" aria-label="Permalink to &quot;Public Member Functions&quot;">​</a></h2><table tabindex="0"><thead><tr><th style="text-align:right;">Type</th><th>Name</th><th>Description</th></tr></thead><tbody><tr><td style="text-align:right;"> </td><td><a href="#classmavsdk_1_1_mission_raw_1ad03476f12988a12808a8c4385c7a7344">MissionRaw</a> (<a href="./classmavsdk_1_1_system.html">System</a> &amp; system)</td><td>Constructor. Creates the plugin for a specific <a href="./classmavsdk_1_1_system.html">System</a>.</td></tr><tr><td style="text-align:right;"> </td><td><a href="#classmavsdk_1_1_mission_raw_1aec90f3e32d7366f3e27f025bb62c1e78">MissionRaw</a> (std::shared_ptr&lt; <a href="./classmavsdk_1_1_system.html">System</a> &gt; system)</td><td>Constructor. Creates the plugin for a specific <a href="./classmavsdk_1_1_system.html">System</a>.</td></tr><tr><td style="text-align:right;"> </td><td><a href="#classmavsdk_1_1_mission_raw_1a1c7e90261ab67337d6b570cb3f9bfdb9">~MissionRaw</a> () override</td><td>Destructor (internal use only).</td></tr><tr><td style="text-align:right;"> </td><td><a href="#classmavsdk_1_1_mission_raw_1a91216322f0b6139d5ba83127f2ef1f12">MissionRaw</a> (const <a href="./classmavsdk_1_1_mission_raw.html">MissionRaw</a> &amp; other)</td><td>Copy constructor.</td></tr><tr><td style="text-align:right;">void</td><td><a href="#classmavsdk_1_1_mission_raw_1a77cc5df3362b7ab4cbc94e5bc9707609">upload_mission_async</a> (std::vector&lt; <a href="./structmavsdk_1_1_mission_raw_1_1_mission_item.html">MissionItem</a> &gt; mission_items, const <a href="./classmavsdk_1_1_mission_raw.html#classmavsdk_1_1_mission_raw_1a1a36a84f17dca07e1da49c13abbc9564">ResultCallback</a> callback)</td><td>Upload a list of raw mission items to the system.</td></tr><tr><td style="text-align:right;"><a href="./classmavsdk_1_1_mission_raw.html#classmavsdk_1_1_mission_raw_1a7ea2a624818ebb5a3e209cc275d58eaf">Result</a></td><td><a href="#classmavsdk_1_1_mission_raw_1ad4f5c2ccfb2249f6e11c9533c263926a">upload_mission</a> (std::vector&lt; <a href="./structmavsdk_1_1_mission_raw_1_1_mission_item.html">MissionItem</a> &gt; mission_items)const</td><td>Upload a list of raw mission items to the system.</td></tr><tr><td style="text-align:right;">void</td><td><a href="#classmavsdk_1_1_mission_raw_1abae3246480b334c319cfb8a9c0d2d8c6">upload_geofence_async</a> (std::vector&lt; <a href="./structmavsdk_1_1_mission_raw_1_1_mission_item.html">MissionItem</a> &gt; mission_items, const <a href="./classmavsdk_1_1_mission_raw.html#classmavsdk_1_1_mission_raw_1a1a36a84f17dca07e1da49c13abbc9564">ResultCallback</a> callback)</td><td>Upload a list of geofence items to the system.</td></tr><tr><td style="text-align:right;"><a href="./classmavsdk_1_1_mission_raw.html#classmavsdk_1_1_mission_raw_1a7ea2a624818ebb5a3e209cc275d58eaf">Result</a></td><td><a href="#classmavsdk_1_1_mission_raw_1ac65fe0675332c318c5c07be5a8d22ac7">upload_geofence</a> (std::vector&lt; <a href="./structmavsdk_1_1_mission_raw_1_1_mission_item.html">MissionItem</a> &gt; mission_items)const</td><td>Upload a list of geofence items to the system.</td></tr><tr><td style="text-align:right;">void</td><td><a href="#classmavsdk_1_1_mission_raw_1a2c5d52246a8ad13151fcfedeab2859e5">upload_rally_points_async</a> (std::vector&lt; <a href="./structmavsdk_1_1_mission_raw_1_1_mission_item.html">MissionItem</a> &gt; mission_items, const <a href="./classmavsdk_1_1_mission_raw.html#classmavsdk_1_1_mission_raw_1a1a36a84f17dca07e1da49c13abbc9564">ResultCallback</a> callback)</td><td>Upload a list of rally point items to the system.</td></tr><tr><td style="text-align:right;"><a href="./classmavsdk_1_1_mission_raw.html#classmavsdk_1_1_mission_raw_1a7ea2a624818ebb5a3e209cc275d58eaf">Result</a></td><td><a href="#classmavsdk_1_1_mission_raw_1a02fc4f293a8094df5dbd7ea0d2184739">upload_rally_points</a> (std::vector&lt; <a href="./structmavsdk_1_1_mission_raw_1_1_mission_item.html">MissionItem</a> &gt; mission_items)const</td><td>Upload a list of rally point items to the system.</td></tr><tr><td style="text-align:right;"><a href="./classmavsdk_1_1_mission_raw.html#classmavsdk_1_1_mission_raw_1a7ea2a624818ebb5a3e209cc275d58eaf">Result</a></td><td><a href="#classmavsdk_1_1_mission_raw_1aa353e3fa6e836305248be131dbe19273">cancel_mission_upload</a> () const</td><td>Cancel an ongoing mission upload.</td></tr><tr><td style="text-align:right;">void</td><td><a href="#classmavsdk_1_1_mission_raw_1a7e27b0fb58889ca5cb1202276c0e0669">download_mission_async</a> (const <a href="./classmavsdk_1_1_mission_raw.html#classmavsdk_1_1_mission_raw_1a016633e6338744da02ac7cb6da28880a">DownloadMissionCallback</a> callback)</td><td>Download a list of raw mission items from the system (asynchronous).</td></tr><tr><td style="text-align:right;">std::pair&lt; <a href="./classmavsdk_1_1_mission_raw.html#classmavsdk_1_1_mission_raw_1a7ea2a624818ebb5a3e209cc275d58eaf">Result</a>, std::vector&lt; <a href="./structmavsdk_1_1_mission_raw_1_1_mission_item.html">MissionRaw::MissionItem</a> &gt; &gt;</td><td><a href="#classmavsdk_1_1_mission_raw_1a18138bc7cbc6c6c16fde44e2fa53a459">download_mission</a> () const</td><td>Download a list of raw mission items from the system (asynchronous).</td></tr><tr><td style="text-align:right;">void</td><td><a href="#classmavsdk_1_1_mission_raw_1acc681495c318043334691ab9ccd6778d">download_geofence_async</a> (const <a href="./classmavsdk_1_1_mission_raw.html#classmavsdk_1_1_mission_raw_1a3e75d493ec08fec9d9faa597238c11be">DownloadGeofenceCallback</a> callback)</td><td>Download a list of raw geofence items from the system (asynchronous).</td></tr><tr><td style="text-align:right;">std::pair&lt; <a href="./classmavsdk_1_1_mission_raw.html#classmavsdk_1_1_mission_raw_1a7ea2a624818ebb5a3e209cc275d58eaf">Result</a>, std::vector&lt; <a href="./structmavsdk_1_1_mission_raw_1_1_mission_item.html">MissionRaw::MissionItem</a> &gt; &gt;</td><td><a href="#classmavsdk_1_1_mission_raw_1ae2d3d743e00312e07ca3893ab27f0138">download_geofence</a> () const</td><td>Download a list of raw geofence items from the system (asynchronous).</td></tr><tr><td style="text-align:right;">void</td><td><a href="#classmavsdk_1_1_mission_raw_1a38e58cdecc1737936bec5d046c8eb511">download_rallypoints_async</a> (const <a href="./classmavsdk_1_1_mission_raw.html#classmavsdk_1_1_mission_raw_1a473abce54f89efe05d5ac051c9d8a5dc">DownloadRallypointsCallback</a> callback)</td><td>Download a list of raw rallypoint items from the system (asynchronous).</td></tr><tr><td style="text-align:right;">std::pair&lt; <a href="./classmavsdk_1_1_mission_raw.html#classmavsdk_1_1_mission_raw_1a7ea2a624818ebb5a3e209cc275d58eaf">Result</a>, std::vector&lt; <a href="./structmavsdk_1_1_mission_raw_1_1_mission_item.html">MissionRaw::MissionItem</a> &gt; &gt;</td><td><a href="#classmavsdk_1_1_mission_raw_1a0cb3895f91bb2042c9d3282b09c442af">download_rallypoints</a> () const</td><td>Download a list of raw rallypoint items from the system (asynchronous).</td></tr><tr><td style="text-align:right;"><a href="./classmavsdk_1_1_mission_raw.html#classmavsdk_1_1_mission_raw_1a7ea2a624818ebb5a3e209cc275d58eaf">Result</a></td><td><a href="#classmavsdk_1_1_mission_raw_1a7c554999ca66c5434ef1fa334d949e5a">cancel_mission_download</a> () const</td><td>Cancel an ongoing mission download.</td></tr><tr><td style="text-align:right;">void</td><td><a href="#classmavsdk_1_1_mission_raw_1acca64e0a08978f5721be8fa955b1bb0f">start_mission_async</a> (const <a href="./classmavsdk_1_1_mission_raw.html#classmavsdk_1_1_mission_raw_1a1a36a84f17dca07e1da49c13abbc9564">ResultCallback</a> callback)</td><td>Start the mission.</td></tr><tr><td style="text-align:right;"><a href="./classmavsdk_1_1_mission_raw.html#classmavsdk_1_1_mission_raw_1a7ea2a624818ebb5a3e209cc275d58eaf">Result</a></td><td><a href="#classmavsdk_1_1_mission_raw_1af1b010b0f28b284a94eba88198ee15f8">start_mission</a> () const</td><td>Start the mission.</td></tr><tr><td style="text-align:right;">void</td><td><a href="#classmavsdk_1_1_mission_raw_1aae0eedbe4216266eb6e2115cd03c61a1">pause_mission_async</a> (const <a href="./classmavsdk_1_1_mission_raw.html#classmavsdk_1_1_mission_raw_1a1a36a84f17dca07e1da49c13abbc9564">ResultCallback</a> callback)</td><td>Pause the mission.</td></tr><tr><td style="text-align:right;"><a href="./classmavsdk_1_1_mission_raw.html#classmavsdk_1_1_mission_raw_1a7ea2a624818ebb5a3e209cc275d58eaf">Result</a></td><td><a href="#classmavsdk_1_1_mission_raw_1abda483b0659a6c0397c588341688bb39">pause_mission</a> () const</td><td>Pause the mission.</td></tr><tr><td style="text-align:right;">void</td><td><a href="#classmavsdk_1_1_mission_raw_1acf6bf293facbd45fa1126e52e99248a2">clear_mission_async</a> (const <a href="./classmavsdk_1_1_mission_raw.html#classmavsdk_1_1_mission_raw_1a1a36a84f17dca07e1da49c13abbc9564">ResultCallback</a> callback)</td><td>Clear the mission saved on the vehicle.</td></tr><tr><td style="text-align:right;"><a href="./classmavsdk_1_1_mission_raw.html#classmavsdk_1_1_mission_raw_1a7ea2a624818ebb5a3e209cc275d58eaf">Result</a></td><td><a href="#classmavsdk_1_1_mission_raw_1ab10f8fcaa0f6d3e0f844b7430d8d14c2">clear_mission</a> () const</td><td>Clear the mission saved on the vehicle.</td></tr><tr><td style="text-align:right;">void</td><td><a href="#classmavsdk_1_1_mission_raw_1a5540d6ca691d60ef19b66e303bae7f87">set_current_mission_item_async</a> (int32_t index, const <a href="./classmavsdk_1_1_mission_raw.html#classmavsdk_1_1_mission_raw_1a1a36a84f17dca07e1da49c13abbc9564">ResultCallback</a> callback)</td><td>Sets the raw mission item index to go to.</td></tr><tr><td style="text-align:right;"><a href="./classmavsdk_1_1_mission_raw.html#classmavsdk_1_1_mission_raw_1a7ea2a624818ebb5a3e209cc275d58eaf">Result</a></td><td><a href="#classmavsdk_1_1_mission_raw_1ada9aa2abf79ebfc8e1d10de8e85e91ae">set_current_mission_item</a> (int32_t index)const</td><td>Sets the raw mission item index to go to.</td></tr><tr><td style="text-align:right;"><a href="./classmavsdk_1_1_mission_raw.html#classmavsdk_1_1_mission_raw_1a34e0eaf9922daa5d27d2b044eae7885c">MissionProgressHandle</a></td><td><a href="#classmavsdk_1_1_mission_raw_1a88a3c4b26418e734a547f251706988d2">subscribe_mission_progress</a> (const <a href="./classmavsdk_1_1_mission_raw.html#classmavsdk_1_1_mission_raw_1a9dd594878925da494b4add6acc3184fc">MissionProgressCallback</a> &amp; callback)</td><td>Subscribe to mission progress updates.</td></tr><tr><td style="text-align:right;">void</td><td><a href="#classmavsdk_1_1_mission_raw_1ac46f08b52706f45956cf3b01df381835">unsubscribe_mission_progress</a> (<a href="./classmavsdk_1_1_mission_raw.html#classmavsdk_1_1_mission_raw_1a34e0eaf9922daa5d27d2b044eae7885c">MissionProgressHandle</a> handle)</td><td>Unsubscribe from subscribe_mission_progress.</td></tr><tr><td style="text-align:right;"><a href="./structmavsdk_1_1_mission_raw_1_1_mission_progress.html">MissionProgress</a></td><td><a href="#classmavsdk_1_1_mission_raw_1a3200dea1094926a4dd54f079f21b94e1">mission_progress</a> () const</td><td>Poll for &#39;<a href="./structmavsdk_1_1_mission_raw_1_1_mission_progress.html">MissionProgress</a>&#39; (blocking).</td></tr><tr><td style="text-align:right;"><a href="./classmavsdk_1_1_mission_raw.html#classmavsdk_1_1_mission_raw_1a46da6d8a53822fd5fbd7b2a414624c5c">MissionChangedHandle</a></td><td><a href="#classmavsdk_1_1_mission_raw_1ad4a2991e1a8f9423270af4220309edfb">subscribe_mission_changed</a> (const <a href="./classmavsdk_1_1_mission_raw.html#classmavsdk_1_1_mission_raw_1ac22d81eefc5e883cdb6baf792a7487e6">MissionChangedCallback</a> &amp; callback)</td><td>Subscribes to mission changed.</td></tr><tr><td style="text-align:right;">void</td><td><a href="#classmavsdk_1_1_mission_raw_1ac6cd7602b2e5b46ad0ea1cf8bf602a0c">unsubscribe_mission_changed</a> (<a href="./classmavsdk_1_1_mission_raw.html#classmavsdk_1_1_mission_raw_1a46da6d8a53822fd5fbd7b2a414624c5c">MissionChangedHandle</a> handle)</td><td>Unsubscribe from subscribe_mission_changed.</td></tr><tr><td style="text-align:right;">std::pair&lt; <a href="./classmavsdk_1_1_mission_raw.html#classmavsdk_1_1_mission_raw_1a7ea2a624818ebb5a3e209cc275d58eaf">Result</a>, <a href="./structmavsdk_1_1_mission_raw_1_1_mission_import_data.html">MissionRaw::MissionImportData</a> &gt;</td><td><a href="#classmavsdk_1_1_mission_raw_1a2a4ca261c37737e691c6954693d6d0a5">import_qgroundcontrol_mission</a> (std::string qgc_plan_path)const</td><td>Import a QGroundControl missions in JSON .plan format, from a file.</td></tr><tr><td style="text-align:right;">std::pair&lt; <a href="./classmavsdk_1_1_mission_raw.html#classmavsdk_1_1_mission_raw_1a7ea2a624818ebb5a3e209cc275d58eaf">Result</a>, <a href="./structmavsdk_1_1_mission_raw_1_1_mission_import_data.html">MissionRaw::MissionImportData</a> &gt;</td><td><a href="#classmavsdk_1_1_mission_raw_1a4a1b55650120d8af0ce7fa037f6b5ce9">import_qgroundcontrol_mission_from_string</a> (std::string qgc_plan)const</td><td>Import a QGroundControl missions in JSON .plan format, from a string.</td></tr><tr><td style="text-align:right;">const <a href="./classmavsdk_1_1_mission_raw.html">MissionRaw</a> &amp;</td><td><a href="#classmavsdk_1_1_mission_raw_1a2b8cdc1fbee72224a9ef6eb9266b2e2a">operator=</a> (const <a href="./classmavsdk_1_1_mission_raw.html">MissionRaw</a> &amp;)=delete</td><td>Equality operator (object is not copyable).</td></tr></tbody></table><h2 id="constructor-destructor-documentation" tabindex="-1">Constructor &amp; Destructor Documentation <a class="header-anchor" href="#constructor-destructor-documentation" aria-label="Permalink to &quot;Constructor &amp; Destructor Documentation&quot;">​</a></h2><h3 id="classmavsdk_1_1_mission_raw_1ad03476f12988a12808a8c4385c7a7344" tabindex="-1">MissionRaw() <a class="header-anchor" href="#classmavsdk_1_1_mission_raw_1ad03476f12988a12808a8c4385c7a7344" aria-label="Permalink to &quot;MissionRaw() {#classmavsdk_1_1_mission_raw_1ad03476f12988a12808a8c4385c7a7344}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MissionRaw</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MissionRaw</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(System </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">system)</span></span></code></pre></div><p>Constructor. Creates the plugin for a specific <a href="./classmavsdk_1_1_system.html">System</a>.</p><p>The plugin is typically created as shown below:</p><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">auto</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mission_raw </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> MissionRaw</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(system);</span></span></code></pre></div><p><strong>Parameters</strong></p><ul><li><a href="./classmavsdk_1_1_system.html">System</a>&amp; <strong>system</strong> - The specific system associated with this plugin.</li></ul><h3 id="classmavsdk_1_1_mission_raw_1aec90f3e32d7366f3e27f025bb62c1e78" tabindex="-1">MissionRaw() <a class="header-anchor" href="#classmavsdk_1_1_mission_raw_1aec90f3e32d7366f3e27f025bb62c1e78" aria-label="Permalink to &quot;MissionRaw() {#classmavsdk_1_1_mission_raw_1aec90f3e32d7366f3e27f025bb62c1e78}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MissionRaw</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MissionRaw</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::shared_ptr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> System </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> system)</span></span></code></pre></div><p>Constructor. Creates the plugin for a specific <a href="./classmavsdk_1_1_system.html">System</a>.</p><p>The plugin is typically created as shown below:</p><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">auto</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mission_raw </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> MissionRaw</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(system);</span></span></code></pre></div><p><strong>Parameters</strong></p><ul><li>std::shared_ptr&lt; <a href="./classmavsdk_1_1_system.html">System</a> &gt; <strong>system</strong> - The specific system associated with this plugin.</li></ul><h3 id="classmavsdk_1_1_mission_raw_1a1c7e90261ab67337d6b570cb3f9bfdb9" tabindex="-1">~MissionRaw() <a class="header-anchor" href="#classmavsdk_1_1_mission_raw_1a1c7e90261ab67337d6b570cb3f9bfdb9" aria-label="Permalink to &quot;~MissionRaw() {#classmavsdk_1_1_mission_raw_1a1c7e90261ab67337d6b570cb3f9bfdb9}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MissionRaw</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">~</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MissionRaw</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">override</span></span></code></pre></div><p>Destructor (internal use only).</p><h3 id="classmavsdk_1_1_mission_raw_1a91216322f0b6139d5ba83127f2ef1f12" tabindex="-1">MissionRaw() <a class="header-anchor" href="#classmavsdk_1_1_mission_raw_1a91216322f0b6139d5ba83127f2ef1f12" aria-label="Permalink to &quot;MissionRaw() {#classmavsdk_1_1_mission_raw_1a91216322f0b6139d5ba83127f2ef1f12}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MissionRaw</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MissionRaw</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> MissionRaw </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">other)</span></span></code></pre></div><p>Copy constructor.</p><p><strong>Parameters</strong></p><ul><li>const <a href="./classmavsdk_1_1_mission_raw.html">MissionRaw</a>&amp; <strong>other</strong> -</li></ul><h2 id="member-typdef-documentation" tabindex="-1">Member Typdef Documentation <a class="header-anchor" href="#member-typdef-documentation" aria-label="Permalink to &quot;Member Typdef Documentation&quot;">​</a></h2><h3 id="classmavsdk_1_1_mission_raw_1a1a36a84f17dca07e1da49c13abbc9564" tabindex="-1">typedef ResultCallback <a class="header-anchor" href="#classmavsdk_1_1_mission_raw_1a1a36a84f17dca07e1da49c13abbc9564" aria-label="Permalink to &quot;typedef ResultCallback {#classmavsdk_1_1_mission_raw_1a1a36a84f17dca07e1da49c13abbc9564}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MissionRaw</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::ResultCallback </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::function</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Result)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><p>Callback type for asynchronous <a href="./classmavsdk_1_1_mission_raw.html">MissionRaw</a> calls.</p><h3 id="classmavsdk_1_1_mission_raw_1a016633e6338744da02ac7cb6da28880a" tabindex="-1">typedef DownloadMissionCallback <a class="header-anchor" href="#classmavsdk_1_1_mission_raw_1a016633e6338744da02ac7cb6da28880a" aria-label="Permalink to &quot;typedef DownloadMissionCallback {#classmavsdk_1_1_mission_raw_1a016633e6338744da02ac7cb6da28880a}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MissionRaw</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::DownloadMissionCallback </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::function</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Result, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::vector</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MissionItem</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><p>Callback type for download_mission_async.</p><h3 id="classmavsdk_1_1_mission_raw_1a3e75d493ec08fec9d9faa597238c11be" tabindex="-1">typedef DownloadGeofenceCallback <a class="header-anchor" href="#classmavsdk_1_1_mission_raw_1a3e75d493ec08fec9d9faa597238c11be" aria-label="Permalink to &quot;typedef DownloadGeofenceCallback {#classmavsdk_1_1_mission_raw_1a3e75d493ec08fec9d9faa597238c11be}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MissionRaw</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::DownloadGeofenceCallback </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::function</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Result, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::vector</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MissionItem</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><p>Callback type for download_geofence_async.</p><h3 id="classmavsdk_1_1_mission_raw_1a473abce54f89efe05d5ac051c9d8a5dc" tabindex="-1">typedef DownloadRallypointsCallback <a class="header-anchor" href="#classmavsdk_1_1_mission_raw_1a473abce54f89efe05d5ac051c9d8a5dc" aria-label="Permalink to &quot;typedef DownloadRallypointsCallback {#classmavsdk_1_1_mission_raw_1a473abce54f89efe05d5ac051c9d8a5dc}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MissionRaw</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::DownloadRallypointsCallback </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::function</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Result, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::vector</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MissionItem</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><p>Callback type for download_rallypoints_async.</p><h3 id="classmavsdk_1_1_mission_raw_1a9dd594878925da494b4add6acc3184fc" tabindex="-1">typedef MissionProgressCallback <a class="header-anchor" href="#classmavsdk_1_1_mission_raw_1a9dd594878925da494b4add6acc3184fc" aria-label="Permalink to &quot;typedef MissionProgressCallback {#classmavsdk_1_1_mission_raw_1a9dd594878925da494b4add6acc3184fc}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MissionRaw</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::MissionProgressCallback </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::function</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(MissionProgress)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><p>Callback type for subscribe_mission_progress.</p><h3 id="classmavsdk_1_1_mission_raw_1a34e0eaf9922daa5d27d2b044eae7885c" tabindex="-1">typedef MissionProgressHandle <a class="header-anchor" href="#classmavsdk_1_1_mission_raw_1a34e0eaf9922daa5d27d2b044eae7885c" aria-label="Permalink to &quot;typedef MissionProgressHandle {#classmavsdk_1_1_mission_raw_1a34e0eaf9922daa5d27d2b044eae7885c}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MissionRaw</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::MissionProgressHandle </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  Handle</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MissionProgress</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><p><a href="./classmavsdk_1_1_handle.html">Handle</a> type for subscribe_mission_progress.</p><h3 id="classmavsdk_1_1_mission_raw_1ac22d81eefc5e883cdb6baf792a7487e6" tabindex="-1">typedef MissionChangedCallback <a class="header-anchor" href="#classmavsdk_1_1_mission_raw_1ac22d81eefc5e883cdb6baf792a7487e6" aria-label="Permalink to &quot;typedef MissionChangedCallback {#classmavsdk_1_1_mission_raw_1ac22d81eefc5e883cdb6baf792a7487e6}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MissionRaw</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::MissionChangedCallback </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::function</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">bool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><p>Callback type for subscribe_mission_changed.</p><h3 id="classmavsdk_1_1_mission_raw_1a46da6d8a53822fd5fbd7b2a414624c5c" tabindex="-1">typedef MissionChangedHandle <a class="header-anchor" href="#classmavsdk_1_1_mission_raw_1a46da6d8a53822fd5fbd7b2a414624c5c" aria-label="Permalink to &quot;typedef MissionChangedHandle {#classmavsdk_1_1_mission_raw_1a46da6d8a53822fd5fbd7b2a414624c5c}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MissionRaw</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::MissionChangedHandle </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  Handle</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;bool&gt;</span></span></code></pre></div><p><a href="./classmavsdk_1_1_handle.html">Handle</a> type for subscribe_mission_changed.</p><h2 id="member-enumeration-documentation" tabindex="-1">Member Enumeration Documentation <a class="header-anchor" href="#member-enumeration-documentation" aria-label="Permalink to &quot;Member Enumeration Documentation&quot;">​</a></h2><h3 id="classmavsdk_1_1_mission_raw_1a7ea2a624818ebb5a3e209cc275d58eaf" tabindex="-1">enum Result <a class="header-anchor" href="#classmavsdk_1_1_mission_raw_1a7ea2a624818ebb5a3e209cc275d58eaf" aria-label="Permalink to &quot;enum Result {#classmavsdk_1_1_mission_raw_1a7ea2a624818ebb5a3e209cc275d58eaf}&quot;">​</a></h3><p>Possible results returned for action requests.</p><table tabindex="0"><thead><tr><th>Value</th><th>Description</th></tr></thead><tbody><tr><td><span id="classmavsdk_1_1_mission_raw_1a7ea2a624818ebb5a3e209cc275d58eafa88183b946cc5f0e8c96b2e66e1c74a7e"></span> <code>Unknown</code></td><td>Unknown result.</td></tr><tr><td><span id="classmavsdk_1_1_mission_raw_1a7ea2a624818ebb5a3e209cc275d58eafa505a83f220c02df2f85c3810cd9ceb38"></span> <code>Success</code></td><td>Request succeeded.</td></tr><tr><td><span id="classmavsdk_1_1_mission_raw_1a7ea2a624818ebb5a3e209cc275d58eafa902b0d55fddef6f8d651fe1035b7d4bd"></span> <code>Error</code></td><td>Error.</td></tr><tr><td><span id="classmavsdk_1_1_mission_raw_1a7ea2a624818ebb5a3e209cc275d58eafaecc3de82f27e8e7f65807c69a114efbe"></span> <code>TooManyMissionItems</code></td><td>Too many mission items in the mission.</td></tr><tr><td><span id="classmavsdk_1_1_mission_raw_1a7ea2a624818ebb5a3e209cc275d58eafad8a942ef2b04672adfafef0ad817a407"></span> <code>Busy</code></td><td>Vehicle is busy.</td></tr><tr><td><span id="classmavsdk_1_1_mission_raw_1a7ea2a624818ebb5a3e209cc275d58eafac85a251cc457840f1e032f1b733e9398"></span> <code>Timeout</code></td><td>Request timed out.</td></tr><tr><td><span id="classmavsdk_1_1_mission_raw_1a7ea2a624818ebb5a3e209cc275d58eafa253ca7dd096ee0956cccee4d376cab8b"></span> <code>InvalidArgument</code></td><td>Invalid argument.</td></tr><tr><td><span id="classmavsdk_1_1_mission_raw_1a7ea2a624818ebb5a3e209cc275d58eafab4080bdf74febf04d578ff105cce9d3f"></span> <code>Unsupported</code></td><td><a href="./classmavsdk_1_1_mission.html">Mission</a> downloaded from the system is not supported.</td></tr><tr><td><span id="classmavsdk_1_1_mission_raw_1a7ea2a624818ebb5a3e209cc275d58eafa6b0ce476dfc17eed72967386f52ede78"></span> <code>NoMissionAvailable</code></td><td>No mission available on the system.</td></tr><tr><td><span id="classmavsdk_1_1_mission_raw_1a7ea2a624818ebb5a3e209cc275d58eafa3465fd31285ebd60597cf59bff9db01a"></span> <code>TransferCancelled</code></td><td><a href="./classmavsdk_1_1_mission.html">Mission</a> transfer (upload or download) has been cancelled.</td></tr><tr><td><span id="classmavsdk_1_1_mission_raw_1a7ea2a624818ebb5a3e209cc275d58eafac73901782ccb07eeaf03f1a27e323e4f"></span> <code>FailedToOpenQgcPlan</code></td><td>Failed to open the QGroundControl plan.</td></tr><tr><td><span id="classmavsdk_1_1_mission_raw_1a7ea2a624818ebb5a3e209cc275d58eafabd0579c3163a37a4bc4fe181903cc1e9"></span> <code>FailedToParseQgcPlan</code></td><td>Failed to parse the QGroundControl plan.</td></tr><tr><td><span id="classmavsdk_1_1_mission_raw_1a7ea2a624818ebb5a3e209cc275d58eafa1119faf72ba0dfb23aeea644fed960ad"></span> <code>NoSystem</code></td><td>No system connected.</td></tr><tr><td><span id="classmavsdk_1_1_mission_raw_1a7ea2a624818ebb5a3e209cc275d58eafa58d036b9b7f0e7eb38cfb90f1cc70a73"></span> <code>Denied</code></td><td>Request denied.</td></tr><tr><td><span id="classmavsdk_1_1_mission_raw_1a7ea2a624818ebb5a3e209cc275d58eafa43dd1d7bd7daf88c044f7463ccdb1f0c"></span> <code>MissionTypeNotConsistent</code></td><td><a href="./classmavsdk_1_1_mission.html">Mission</a> type is not consistent.</td></tr><tr><td><span id="classmavsdk_1_1_mission_raw_1a7ea2a624818ebb5a3e209cc275d58eafaff5c3eeddd1c7a19875b5686efd52fdb"></span> <code>InvalidSequence</code></td><td>The mission item sequences are not increasing correctly.</td></tr><tr><td><span id="classmavsdk_1_1_mission_raw_1a7ea2a624818ebb5a3e209cc275d58eafa80038ba51e64057d4a00429697a3368f"></span> <code>CurrentInvalid</code></td><td>The current item is not set correctly.</td></tr><tr><td><span id="classmavsdk_1_1_mission_raw_1a7ea2a624818ebb5a3e209cc275d58eafaca3da8f495e4e628912a7798655da6c2"></span> <code>ProtocolError</code></td><td>There was a protocol error.</td></tr><tr><td><span id="classmavsdk_1_1_mission_raw_1a7ea2a624818ebb5a3e209cc275d58eafa3f5f527103f3b11c1c271363c542432b"></span> <code>IntMessagesNotSupported</code></td><td>The system does not support the MISSION_INT protocol.</td></tr></tbody></table><h2 id="member-function-documentation" tabindex="-1">Member Function Documentation <a class="header-anchor" href="#member-function-documentation" aria-label="Permalink to &quot;Member Function Documentation&quot;">​</a></h2><h3 id="classmavsdk_1_1_mission_raw_1a77cc5df3362b7ab4cbc94e5bc9707609" tabindex="-1">upload_mission_async() <a class="header-anchor" href="#classmavsdk_1_1_mission_raw_1a77cc5df3362b7ab4cbc94e5bc9707609" aria-label="Permalink to &quot;upload_mission_async() {#classmavsdk_1_1_mission_raw_1a77cc5df3362b7ab4cbc94e5bc9707609}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MissionRaw</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">upload_mission_async</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MissionItem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &gt; </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">mission_items</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ResultCallback</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> callback</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Upload a list of raw mission items to the system.</p><p>The raw mission items are uploaded to a drone. Once uploaded the mission can be started and executed even if the connection is lost.</p><p>This function is non-blocking. See &#39;upload_mission&#39; for the blocking counterpart.</p><p><strong>Parameters</strong></p><ul><li>std::vector&lt; <a href="./structmavsdk_1_1_mission_raw_1_1_mission_item.html">MissionItem</a> &gt; <strong>mission_items</strong> -</li><li>const <a href="./classmavsdk_1_1_mission_raw.html#classmavsdk_1_1_mission_raw_1a1a36a84f17dca07e1da49c13abbc9564">ResultCallback</a> <strong>callback</strong> -</li></ul><h3 id="classmavsdk_1_1_mission_raw_1ad4f5c2ccfb2249f6e11c9533c263926a" tabindex="-1">upload_mission() <a class="header-anchor" href="#classmavsdk_1_1_mission_raw_1ad4f5c2ccfb2249f6e11c9533c263926a" aria-label="Permalink to &quot;upload_mission() {#classmavsdk_1_1_mission_raw_1ad4f5c2ccfb2249f6e11c9533c263926a}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Result</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MissionRaw</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">upload_mission</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MissionItem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &gt; </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">mission_items</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span></span></code></pre></div><p>Upload a list of raw mission items to the system.</p><p>The raw mission items are uploaded to a drone. Once uploaded the mission can be started and executed even if the connection is lost.</p><p>This function is blocking. See &#39;upload_mission_async&#39; for the non-blocking counterpart.</p><p><strong>Parameters</strong></p><ul><li>std::vector&lt; <a href="./structmavsdk_1_1_mission_raw_1_1_mission_item.html">MissionItem</a> &gt; <strong>mission_items</strong> -</li></ul><p><strong>Returns</strong></p><p> <a href="./classmavsdk_1_1_mission_raw.html#classmavsdk_1_1_mission_raw_1a7ea2a624818ebb5a3e209cc275d58eaf">Result</a> - Result of request.</p><h3 id="classmavsdk_1_1_mission_raw_1abae3246480b334c319cfb8a9c0d2d8c6" tabindex="-1">upload_geofence_async() <a class="header-anchor" href="#classmavsdk_1_1_mission_raw_1abae3246480b334c319cfb8a9c0d2d8c6" aria-label="Permalink to &quot;upload_geofence_async() {#classmavsdk_1_1_mission_raw_1abae3246480b334c319cfb8a9c0d2d8c6}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MissionRaw</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">upload_geofence_async</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MissionItem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &gt; </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">mission_items</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ResultCallback</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> callback</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Upload a list of geofence items to the system.</p><p>This function is non-blocking. See &#39;upload_geofence&#39; for the blocking counterpart.</p><p><strong>Parameters</strong></p><ul><li>std::vector&lt; <a href="./structmavsdk_1_1_mission_raw_1_1_mission_item.html">MissionItem</a> &gt; <strong>mission_items</strong> -</li><li>const <a href="./classmavsdk_1_1_mission_raw.html#classmavsdk_1_1_mission_raw_1a1a36a84f17dca07e1da49c13abbc9564">ResultCallback</a> <strong>callback</strong> -</li></ul><h3 id="classmavsdk_1_1_mission_raw_1ac65fe0675332c318c5c07be5a8d22ac7" tabindex="-1">upload_geofence() <a class="header-anchor" href="#classmavsdk_1_1_mission_raw_1ac65fe0675332c318c5c07be5a8d22ac7" aria-label="Permalink to &quot;upload_geofence() {#classmavsdk_1_1_mission_raw_1ac65fe0675332c318c5c07be5a8d22ac7}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Result</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MissionRaw</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">upload_geofence</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MissionItem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &gt; </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">mission_items</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span></span></code></pre></div><p>Upload a list of geofence items to the system.</p><p>This function is blocking. See &#39;upload_geofence_async&#39; for the non-blocking counterpart.</p><p><strong>Parameters</strong></p><ul><li>std::vector&lt; <a href="./structmavsdk_1_1_mission_raw_1_1_mission_item.html">MissionItem</a> &gt; <strong>mission_items</strong> -</li></ul><p><strong>Returns</strong></p><p> <a href="./classmavsdk_1_1_mission_raw.html#classmavsdk_1_1_mission_raw_1a7ea2a624818ebb5a3e209cc275d58eaf">Result</a> - Result of request.</p><h3 id="classmavsdk_1_1_mission_raw_1a2c5d52246a8ad13151fcfedeab2859e5" tabindex="-1">upload_rally_points_async() <a class="header-anchor" href="#classmavsdk_1_1_mission_raw_1a2c5d52246a8ad13151fcfedeab2859e5" aria-label="Permalink to &quot;upload_rally_points_async() {#classmavsdk_1_1_mission_raw_1a2c5d52246a8ad13151fcfedeab2859e5}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MissionRaw</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">upload_rally_points_async</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MissionItem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &gt; </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">mission_items</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ResultCallback</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> callback</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Upload a list of rally point items to the system.</p><p>This function is non-blocking. See &#39;upload_rally_points&#39; for the blocking counterpart.</p><p><strong>Parameters</strong></p><ul><li>std::vector&lt; <a href="./structmavsdk_1_1_mission_raw_1_1_mission_item.html">MissionItem</a> &gt; <strong>mission_items</strong> -</li><li>const <a href="./classmavsdk_1_1_mission_raw.html#classmavsdk_1_1_mission_raw_1a1a36a84f17dca07e1da49c13abbc9564">ResultCallback</a> <strong>callback</strong> -</li></ul><h3 id="classmavsdk_1_1_mission_raw_1a02fc4f293a8094df5dbd7ea0d2184739" tabindex="-1">upload_rally_points() <a class="header-anchor" href="#classmavsdk_1_1_mission_raw_1a02fc4f293a8094df5dbd7ea0d2184739" aria-label="Permalink to &quot;upload_rally_points() {#classmavsdk_1_1_mission_raw_1a02fc4f293a8094df5dbd7ea0d2184739}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Result</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MissionRaw</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">upload_rally_points</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MissionItem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &gt; </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">mission_items</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span></span></code></pre></div><p>Upload a list of rally point items to the system.</p><p>This function is blocking. See &#39;upload_rally_points_async&#39; for the non-blocking counterpart.</p><p><strong>Parameters</strong></p><ul><li>std::vector&lt; <a href="./structmavsdk_1_1_mission_raw_1_1_mission_item.html">MissionItem</a> &gt; <strong>mission_items</strong> -</li></ul><p><strong>Returns</strong></p><p> <a href="./classmavsdk_1_1_mission_raw.html#classmavsdk_1_1_mission_raw_1a7ea2a624818ebb5a3e209cc275d58eaf">Result</a> - Result of request.</p><h3 id="classmavsdk_1_1_mission_raw_1aa353e3fa6e836305248be131dbe19273" tabindex="-1">cancel_mission_upload() <a class="header-anchor" href="#classmavsdk_1_1_mission_raw_1aa353e3fa6e836305248be131dbe19273" aria-label="Permalink to &quot;cancel_mission_upload() {#classmavsdk_1_1_mission_raw_1aa353e3fa6e836305248be131dbe19273}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Result</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MissionRaw</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cancel_mission_upload</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span></span></code></pre></div><p>Cancel an ongoing mission upload.</p><p>This function is blocking.</p><p><strong>Returns</strong></p><p> <a href="./classmavsdk_1_1_mission_raw.html#classmavsdk_1_1_mission_raw_1a7ea2a624818ebb5a3e209cc275d58eaf">Result</a> - Result of request.</p><h3 id="classmavsdk_1_1_mission_raw_1a7e27b0fb58889ca5cb1202276c0e0669" tabindex="-1">download_mission_async() <a class="header-anchor" href="#classmavsdk_1_1_mission_raw_1a7e27b0fb58889ca5cb1202276c0e0669" aria-label="Permalink to &quot;download_mission_async() {#classmavsdk_1_1_mission_raw_1a7e27b0fb58889ca5cb1202276c0e0669}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MissionRaw</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">download_mission_async</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DownloadMissionCallback</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> callback</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Download a list of raw mission items from the system (asynchronous).</p><p>This function is non-blocking. See &#39;download_mission&#39; for the blocking counterpart.</p><p><strong>Parameters</strong></p><ul><li>const <a href="./classmavsdk_1_1_mission_raw.html#classmavsdk_1_1_mission_raw_1a016633e6338744da02ac7cb6da28880a">DownloadMissionCallback</a> <strong>callback</strong> -</li></ul><h3 id="classmavsdk_1_1_mission_raw_1a18138bc7cbc6c6c16fde44e2fa53a459" tabindex="-1">download_mission() <a class="header-anchor" href="#classmavsdk_1_1_mission_raw_1a18138bc7cbc6c6c16fde44e2fa53a459" aria-label="Permalink to &quot;download_mission() {#classmavsdk_1_1_mission_raw_1a18138bc7cbc6c6c16fde44e2fa53a459}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pair</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Result</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MissionRaw</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MissionItem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &gt; &gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MissionRaw</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">download_mission</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span></span></code></pre></div><p>Download a list of raw mission items from the system (asynchronous).</p><p>This function is blocking. See &#39;download_mission_async&#39; for the non-blocking counterpart.</p><p><strong>Returns</strong></p><p> std::pair&lt; <a href="./classmavsdk_1_1_mission_raw.html#classmavsdk_1_1_mission_raw_1a7ea2a624818ebb5a3e209cc275d58eaf">Result</a>, std::vector&lt; <a href="./structmavsdk_1_1_mission_raw_1_1_mission_item.html">MissionRaw::MissionItem</a> &gt; &gt; - Result of request.</p><h3 id="classmavsdk_1_1_mission_raw_1acc681495c318043334691ab9ccd6778d" tabindex="-1">download_geofence_async() <a class="header-anchor" href="#classmavsdk_1_1_mission_raw_1acc681495c318043334691ab9ccd6778d" aria-label="Permalink to &quot;download_geofence_async() {#classmavsdk_1_1_mission_raw_1acc681495c318043334691ab9ccd6778d}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MissionRaw</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">download_geofence_async</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DownloadGeofenceCallback</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> callback</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Download a list of raw geofence items from the system (asynchronous).</p><p>This function is non-blocking. See &#39;download_geofence&#39; for the blocking counterpart.</p><p><strong>Parameters</strong></p><ul><li>const <a href="./classmavsdk_1_1_mission_raw.html#classmavsdk_1_1_mission_raw_1a3e75d493ec08fec9d9faa597238c11be">DownloadGeofenceCallback</a> <strong>callback</strong> -</li></ul><h3 id="classmavsdk_1_1_mission_raw_1ae2d3d743e00312e07ca3893ab27f0138" tabindex="-1">download_geofence() <a class="header-anchor" href="#classmavsdk_1_1_mission_raw_1ae2d3d743e00312e07ca3893ab27f0138" aria-label="Permalink to &quot;download_geofence() {#classmavsdk_1_1_mission_raw_1ae2d3d743e00312e07ca3893ab27f0138}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pair</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Result</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MissionRaw</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MissionItem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &gt; &gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MissionRaw</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">download_geofence</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span></span></code></pre></div><p>Download a list of raw geofence items from the system (asynchronous).</p><p>This function is blocking. See &#39;download_geofence_async&#39; for the non-blocking counterpart.</p><p><strong>Returns</strong></p><p> std::pair&lt; <a href="./classmavsdk_1_1_mission_raw.html#classmavsdk_1_1_mission_raw_1a7ea2a624818ebb5a3e209cc275d58eaf">Result</a>, std::vector&lt; <a href="./structmavsdk_1_1_mission_raw_1_1_mission_item.html">MissionRaw::MissionItem</a> &gt; &gt; - Result of request.</p><h3 id="classmavsdk_1_1_mission_raw_1a38e58cdecc1737936bec5d046c8eb511" tabindex="-1">download_rallypoints_async() <a class="header-anchor" href="#classmavsdk_1_1_mission_raw_1a38e58cdecc1737936bec5d046c8eb511" aria-label="Permalink to &quot;download_rallypoints_async() {#classmavsdk_1_1_mission_raw_1a38e58cdecc1737936bec5d046c8eb511}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MissionRaw</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">download_rallypoints_async</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DownloadRallypointsCallback</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> callback</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Download a list of raw rallypoint items from the system (asynchronous).</p><p>This function is non-blocking. See &#39;download_rallypoints&#39; for the blocking counterpart.</p><p><strong>Parameters</strong></p><ul><li>const <a href="./classmavsdk_1_1_mission_raw.html#classmavsdk_1_1_mission_raw_1a473abce54f89efe05d5ac051c9d8a5dc">DownloadRallypointsCallback</a> <strong>callback</strong> -</li></ul><h3 id="classmavsdk_1_1_mission_raw_1a0cb3895f91bb2042c9d3282b09c442af" tabindex="-1">download_rallypoints() <a class="header-anchor" href="#classmavsdk_1_1_mission_raw_1a0cb3895f91bb2042c9d3282b09c442af" aria-label="Permalink to &quot;download_rallypoints() {#classmavsdk_1_1_mission_raw_1a0cb3895f91bb2042c9d3282b09c442af}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pair</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Result</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MissionRaw</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MissionItem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &gt; &gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MissionRaw</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">download_rallypoints</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span></span></code></pre></div><p>Download a list of raw rallypoint items from the system (asynchronous).</p><p>This function is blocking. See &#39;download_rallypoints_async&#39; for the non-blocking counterpart.</p><p><strong>Returns</strong></p><p> std::pair&lt; <a href="./classmavsdk_1_1_mission_raw.html#classmavsdk_1_1_mission_raw_1a7ea2a624818ebb5a3e209cc275d58eaf">Result</a>, std::vector&lt; <a href="./structmavsdk_1_1_mission_raw_1_1_mission_item.html">MissionRaw::MissionItem</a> &gt; &gt; - Result of request.</p><h3 id="classmavsdk_1_1_mission_raw_1a7c554999ca66c5434ef1fa334d949e5a" tabindex="-1">cancel_mission_download() <a class="header-anchor" href="#classmavsdk_1_1_mission_raw_1a7c554999ca66c5434ef1fa334d949e5a" aria-label="Permalink to &quot;cancel_mission_download() {#classmavsdk_1_1_mission_raw_1a7c554999ca66c5434ef1fa334d949e5a}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Result</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MissionRaw</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cancel_mission_download</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span></span></code></pre></div><p>Cancel an ongoing mission download.</p><p>This function is blocking.</p><p><strong>Returns</strong></p><p> <a href="./classmavsdk_1_1_mission_raw.html#classmavsdk_1_1_mission_raw_1a7ea2a624818ebb5a3e209cc275d58eaf">Result</a> - Result of request.</p><h3 id="classmavsdk_1_1_mission_raw_1acca64e0a08978f5721be8fa955b1bb0f" tabindex="-1">start_mission_async() <a class="header-anchor" href="#classmavsdk_1_1_mission_raw_1acca64e0a08978f5721be8fa955b1bb0f" aria-label="Permalink to &quot;start_mission_async() {#classmavsdk_1_1_mission_raw_1acca64e0a08978f5721be8fa955b1bb0f}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MissionRaw</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">start_mission_async</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ResultCallback</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> callback</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Start the mission.</p><p>A mission must be uploaded to the vehicle before this can be called.</p><p>This function is non-blocking. See &#39;start_mission&#39; for the blocking counterpart.</p><p><strong>Parameters</strong></p><ul><li>const <a href="./classmavsdk_1_1_mission_raw.html#classmavsdk_1_1_mission_raw_1a1a36a84f17dca07e1da49c13abbc9564">ResultCallback</a> <strong>callback</strong> -</li></ul><h3 id="classmavsdk_1_1_mission_raw_1af1b010b0f28b284a94eba88198ee15f8" tabindex="-1">start_mission() <a class="header-anchor" href="#classmavsdk_1_1_mission_raw_1af1b010b0f28b284a94eba88198ee15f8" aria-label="Permalink to &quot;start_mission() {#classmavsdk_1_1_mission_raw_1af1b010b0f28b284a94eba88198ee15f8}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Result</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MissionRaw</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">start_mission</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span></span></code></pre></div><p>Start the mission.</p><p>A mission must be uploaded to the vehicle before this can be called.</p><p>This function is blocking. See &#39;start_mission_async&#39; for the non-blocking counterpart.</p><p><strong>Returns</strong></p><p> <a href="./classmavsdk_1_1_mission_raw.html#classmavsdk_1_1_mission_raw_1a7ea2a624818ebb5a3e209cc275d58eaf">Result</a> - Result of request.</p><h3 id="classmavsdk_1_1_mission_raw_1aae0eedbe4216266eb6e2115cd03c61a1" tabindex="-1">pause_mission_async() <a class="header-anchor" href="#classmavsdk_1_1_mission_raw_1aae0eedbe4216266eb6e2115cd03c61a1" aria-label="Permalink to &quot;pause_mission_async() {#classmavsdk_1_1_mission_raw_1aae0eedbe4216266eb6e2115cd03c61a1}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MissionRaw</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pause_mission_async</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ResultCallback</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> callback</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Pause the mission.</p><p>Pausing the mission puts the vehicle into <a href="https://docs.px4.io/en/flight_modes/hold.html" target="_blank" rel="noreferrer">HOLD mode</a>. A multicopter should just hover at the spot while a fixedwing vehicle should loiter around the location where it paused.</p><p>This function is non-blocking. See &#39;pause_mission&#39; for the blocking counterpart.</p><p><strong>Parameters</strong></p><ul><li>const <a href="./classmavsdk_1_1_mission_raw.html#classmavsdk_1_1_mission_raw_1a1a36a84f17dca07e1da49c13abbc9564">ResultCallback</a> <strong>callback</strong> -</li></ul><h3 id="classmavsdk_1_1_mission_raw_1abda483b0659a6c0397c588341688bb39" tabindex="-1">pause_mission() <a class="header-anchor" href="#classmavsdk_1_1_mission_raw_1abda483b0659a6c0397c588341688bb39" aria-label="Permalink to &quot;pause_mission() {#classmavsdk_1_1_mission_raw_1abda483b0659a6c0397c588341688bb39}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Result</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MissionRaw</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pause_mission</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span></span></code></pre></div><p>Pause the mission.</p><p>Pausing the mission puts the vehicle into <a href="https://docs.px4.io/en/flight_modes/hold.html" target="_blank" rel="noreferrer">HOLD mode</a>. A multicopter should just hover at the spot while a fixedwing vehicle should loiter around the location where it paused.</p><p>This function is blocking. See &#39;pause_mission_async&#39; for the non-blocking counterpart.</p><p><strong>Returns</strong></p><p> <a href="./classmavsdk_1_1_mission_raw.html#classmavsdk_1_1_mission_raw_1a7ea2a624818ebb5a3e209cc275d58eaf">Result</a> - Result of request.</p><h3 id="classmavsdk_1_1_mission_raw_1acf6bf293facbd45fa1126e52e99248a2" tabindex="-1">clear_mission_async() <a class="header-anchor" href="#classmavsdk_1_1_mission_raw_1acf6bf293facbd45fa1126e52e99248a2" aria-label="Permalink to &quot;clear_mission_async() {#classmavsdk_1_1_mission_raw_1acf6bf293facbd45fa1126e52e99248a2}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MissionRaw</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">clear_mission_async</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ResultCallback</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> callback</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Clear the mission saved on the vehicle.</p><p>This function is non-blocking. See &#39;clear_mission&#39; for the blocking counterpart.</p><p><strong>Parameters</strong></p><ul><li>const <a href="./classmavsdk_1_1_mission_raw.html#classmavsdk_1_1_mission_raw_1a1a36a84f17dca07e1da49c13abbc9564">ResultCallback</a> <strong>callback</strong> -</li></ul><h3 id="classmavsdk_1_1_mission_raw_1ab10f8fcaa0f6d3e0f844b7430d8d14c2" tabindex="-1">clear_mission() <a class="header-anchor" href="#classmavsdk_1_1_mission_raw_1ab10f8fcaa0f6d3e0f844b7430d8d14c2" aria-label="Permalink to &quot;clear_mission() {#classmavsdk_1_1_mission_raw_1ab10f8fcaa0f6d3e0f844b7430d8d14c2}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Result</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MissionRaw</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">clear_mission</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span></span></code></pre></div><p>Clear the mission saved on the vehicle.</p><p>This function is blocking. See &#39;clear_mission_async&#39; for the non-blocking counterpart.</p><p><strong>Returns</strong></p><p> <a href="./classmavsdk_1_1_mission_raw.html#classmavsdk_1_1_mission_raw_1a7ea2a624818ebb5a3e209cc275d58eaf">Result</a> - Result of request.</p><h3 id="classmavsdk_1_1_mission_raw_1a5540d6ca691d60ef19b66e303bae7f87" tabindex="-1">set_current_mission_item_async() <a class="header-anchor" href="#classmavsdk_1_1_mission_raw_1a5540d6ca691d60ef19b66e303bae7f87" aria-label="Permalink to &quot;set_current_mission_item_async() {#classmavsdk_1_1_mission_raw_1a5540d6ca691d60ef19b66e303bae7f87}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MissionRaw</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">set_current_mission_item_async</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int32_t</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> index</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ResultCallback</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> callback</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Sets the raw mission item index to go to.</p><p>By setting the current index to 0, the mission is restarted from the beginning. If it is set to a specific index of a raw mission item, the mission will be set to this item.</p><p>This function is non-blocking. See &#39;set_current_mission_item&#39; for the blocking counterpart.</p><p><strong>Parameters</strong></p><ul><li>int32_t <strong>index</strong> -</li><li>const <a href="./classmavsdk_1_1_mission_raw.html#classmavsdk_1_1_mission_raw_1a1a36a84f17dca07e1da49c13abbc9564">ResultCallback</a> <strong>callback</strong> -</li></ul><h3 id="classmavsdk_1_1_mission_raw_1ada9aa2abf79ebfc8e1d10de8e85e91ae" tabindex="-1">set_current_mission_item() <a class="header-anchor" href="#classmavsdk_1_1_mission_raw_1ada9aa2abf79ebfc8e1d10de8e85e91ae" aria-label="Permalink to &quot;set_current_mission_item() {#classmavsdk_1_1_mission_raw_1ada9aa2abf79ebfc8e1d10de8e85e91ae}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Result</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MissionRaw</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">set_current_mission_item</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int32_t</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> index</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span></span></code></pre></div><p>Sets the raw mission item index to go to.</p><p>By setting the current index to 0, the mission is restarted from the beginning. If it is set to a specific index of a raw mission item, the mission will be set to this item.</p><p>This function is blocking. See &#39;set_current_mission_item_async&#39; for the non-blocking counterpart.</p><p><strong>Parameters</strong></p><ul><li>int32_t <strong>index</strong> -</li></ul><p><strong>Returns</strong></p><p> <a href="./classmavsdk_1_1_mission_raw.html#classmavsdk_1_1_mission_raw_1a7ea2a624818ebb5a3e209cc275d58eaf">Result</a> - Result of request.</p><h3 id="classmavsdk_1_1_mission_raw_1a88a3c4b26418e734a547f251706988d2" tabindex="-1">subscribe_mission_progress() <a class="header-anchor" href="#classmavsdk_1_1_mission_raw_1a88a3c4b26418e734a547f251706988d2" aria-label="Permalink to &quot;subscribe_mission_progress() {#classmavsdk_1_1_mission_raw_1a88a3c4b26418e734a547f251706988d2}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MissionProgressHandle</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MissionRaw</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">subscribe_mission_progress</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> MissionProgressCallback</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &amp;</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">callback</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Subscribe to mission progress updates.</p><p><strong>Parameters</strong></p><ul><li>const <a href="./classmavsdk_1_1_mission_raw.html#classmavsdk_1_1_mission_raw_1a9dd594878925da494b4add6acc3184fc">MissionProgressCallback</a>&amp; <strong>callback</strong> -</li></ul><p><strong>Returns</strong></p><p> <a href="./classmavsdk_1_1_mission_raw.html#classmavsdk_1_1_mission_raw_1a34e0eaf9922daa5d27d2b044eae7885c">MissionProgressHandle</a> -</p><h3 id="classmavsdk_1_1_mission_raw_1ac46f08b52706f45956cf3b01df381835" tabindex="-1">unsubscribe_mission_progress() <a class="header-anchor" href="#classmavsdk_1_1_mission_raw_1ac46f08b52706f45956cf3b01df381835" aria-label="Permalink to &quot;unsubscribe_mission_progress() {#classmavsdk_1_1_mission_raw_1ac46f08b52706f45956cf3b01df381835}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MissionRaw</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">unsubscribe_mission_progress</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MissionProgressHandle</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> handle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Unsubscribe from subscribe_mission_progress.</p><p><strong>Parameters</strong></p><ul><li><a href="./classmavsdk_1_1_mission_raw.html#classmavsdk_1_1_mission_raw_1a34e0eaf9922daa5d27d2b044eae7885c">MissionProgressHandle</a> <strong>handle</strong> -</li></ul><h3 id="classmavsdk_1_1_mission_raw_1a3200dea1094926a4dd54f079f21b94e1" tabindex="-1">mission_progress() <a class="header-anchor" href="#classmavsdk_1_1_mission_raw_1a3200dea1094926a4dd54f079f21b94e1" aria-label="Permalink to &quot;mission_progress() {#classmavsdk_1_1_mission_raw_1a3200dea1094926a4dd54f079f21b94e1}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MissionProgress</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MissionRaw</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mission_progress</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span></span></code></pre></div><p>Poll for &#39;<a href="./structmavsdk_1_1_mission_raw_1_1_mission_progress.html">MissionProgress</a>&#39; (blocking).</p><p><strong>Returns</strong></p><p> <a href="./structmavsdk_1_1_mission_raw_1_1_mission_progress.html">MissionProgress</a> - One <a href="./structmavsdk_1_1_mission_raw_1_1_mission_progress.html">MissionProgress</a> update.</p><h3 id="classmavsdk_1_1_mission_raw_1ad4a2991e1a8f9423270af4220309edfb" tabindex="-1">subscribe_mission_changed() <a class="header-anchor" href="#classmavsdk_1_1_mission_raw_1ad4a2991e1a8f9423270af4220309edfb" aria-label="Permalink to &quot;subscribe_mission_changed() {#classmavsdk_1_1_mission_raw_1ad4a2991e1a8f9423270af4220309edfb}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MissionChangedHandle</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MissionRaw</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">subscribe_mission_changed</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> MissionChangedCallback</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &amp;</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">callback</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Subscribes to mission changed.</p><p>This notification can be used to be informed if a ground station has been uploaded or changed by a ground station or companion computer.</p><p><strong>Parameters</strong></p><ul><li>const <a href="./classmavsdk_1_1_mission_raw.html#classmavsdk_1_1_mission_raw_1ac22d81eefc5e883cdb6baf792a7487e6">MissionChangedCallback</a>&amp; <strong>callback</strong> - Callback to notify about change.</li></ul><p><strong>Returns</strong></p><p> <a href="./classmavsdk_1_1_mission_raw.html#classmavsdk_1_1_mission_raw_1a46da6d8a53822fd5fbd7b2a414624c5c">MissionChangedHandle</a> -</p><h3 id="classmavsdk_1_1_mission_raw_1ac6cd7602b2e5b46ad0ea1cf8bf602a0c" tabindex="-1">unsubscribe_mission_changed() <a class="header-anchor" href="#classmavsdk_1_1_mission_raw_1ac6cd7602b2e5b46ad0ea1cf8bf602a0c" aria-label="Permalink to &quot;unsubscribe_mission_changed() {#classmavsdk_1_1_mission_raw_1ac6cd7602b2e5b46ad0ea1cf8bf602a0c}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MissionRaw</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">unsubscribe_mission_changed</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MissionChangedHandle</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> handle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Unsubscribe from subscribe_mission_changed.</p><p><strong>Parameters</strong></p><ul><li><a href="./classmavsdk_1_1_mission_raw.html#classmavsdk_1_1_mission_raw_1a46da6d8a53822fd5fbd7b2a414624c5c">MissionChangedHandle</a> <strong>handle</strong> -</li></ul><h3 id="classmavsdk_1_1_mission_raw_1a2a4ca261c37737e691c6954693d6d0a5" tabindex="-1">import_qgroundcontrol_mission() <a class="header-anchor" href="#classmavsdk_1_1_mission_raw_1a2a4ca261c37737e691c6954693d6d0a5" aria-label="Permalink to &quot;import_qgroundcontrol_mission() {#classmavsdk_1_1_mission_raw_1a2a4ca261c37737e691c6954693d6d0a5}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pair</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Result</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MissionRaw</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MissionImportData</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MissionRaw</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">import_qgroundcontrol_mission</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">string</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> qgc_plan_path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span></span></code></pre></div><p>Import a QGroundControl missions in JSON .plan format, from a file.</p><p>Supported:</p><ul><li><p>Waypoints</p></li><li><p>Survey Not supported:</p></li><li><p>Structure Scan</p></li></ul><p>This function is blocking.</p><p><strong>Parameters</strong></p><ul><li>std::string <strong>qgc_plan_path</strong> -</li></ul><p><strong>Returns</strong></p><p> std::pair&lt; <a href="./classmavsdk_1_1_mission_raw.html#classmavsdk_1_1_mission_raw_1a7ea2a624818ebb5a3e209cc275d58eaf">Result</a>, <a href="./structmavsdk_1_1_mission_raw_1_1_mission_import_data.html">MissionRaw::MissionImportData</a> &gt; - Result of request.</p><h3 id="classmavsdk_1_1_mission_raw_1a4a1b55650120d8af0ce7fa037f6b5ce9" tabindex="-1">import_qgroundcontrol_mission_from_string() <a class="header-anchor" href="#classmavsdk_1_1_mission_raw_1a4a1b55650120d8af0ce7fa037f6b5ce9" aria-label="Permalink to &quot;import_qgroundcontrol_mission_from_string() {#classmavsdk_1_1_mission_raw_1a4a1b55650120d8af0ce7fa037f6b5ce9}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pair</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Result</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MissionRaw</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MissionImportData</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MissionRaw</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">import_qgroundcontrol_mission_from_string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">string</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> qgc_plan</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span></span></code></pre></div><p>Import a QGroundControl missions in JSON .plan format, from a string.</p><p>Supported:</p><ul><li><p>Waypoints</p></li><li><p>Survey Not supported:</p></li><li><p>Structure Scan</p></li></ul><p>This function is blocking.</p><p><strong>Parameters</strong></p><ul><li>std::string <strong>qgc_plan</strong> -</li></ul><p><strong>Returns</strong></p><p> std::pair&lt; <a href="./classmavsdk_1_1_mission_raw.html#classmavsdk_1_1_mission_raw_1a7ea2a624818ebb5a3e209cc275d58eaf">Result</a>, <a href="./structmavsdk_1_1_mission_raw_1_1_mission_import_data.html">MissionRaw::MissionImportData</a> &gt; - Result of request.</p><h3 id="classmavsdk_1_1_mission_raw_1a2b8cdc1fbee72224a9ef6eb9266b2e2a" tabindex="-1">operator=() <a class="header-anchor" href="#classmavsdk_1_1_mission_raw_1a2b8cdc1fbee72224a9ef6eb9266b2e2a" aria-label="Permalink to &quot;operator=() {#classmavsdk_1_1_mission_raw_1a2b8cdc1fbee72224a9ef6eb9266b2e2a}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> MissionRaw</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &amp;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MissionRaw</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">operator</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> MissionRaw</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=delete</span></span></code></pre></div><p>Equality operator (object is not copyable).</p><p><strong>Parameters</strong></p><ul><li>const <a href="./classmavsdk_1_1_mission_raw.html">MissionRaw</a>&amp; -</li></ul><p><strong>Returns</strong></p><p> const <a href="./classmavsdk_1_1_mission_raw.html">MissionRaw</a> &amp; -</p>',270)]))}const _=a(n,[["render",l]]);export{c as __pageData,_ as default};
