import{_ as e,c as s,al as t,o as d}from"./chunks/framework.JotrKMnz.js";const k=JSON.parse('{"title":"mavsdk::Tune Class Reference","description":"","frontmatter":{"github_branch":"v3"},"headers":[],"relativePath":"en/cpp/api_reference/classmavsdk_1_1_tune.md","filePath":"en/cpp/api_reference/classmavsdk_1_1_tune.md"}'),i={name:"en/cpp/api_reference/classmavsdk_1_1_tune.md"};function n(l,a,c,h,r,p){return d(),s("div",null,a[0]||(a[0]=[t('<h1 id="mavsdk-tune-class-reference" tabindex="-1">mavsdk::Tune Class Reference <a class="header-anchor" href="#mavsdk-tune-class-reference" aria-label="Permalink to &quot;mavsdk::Tune Class Reference&quot;">​</a></h1><p><code>#include: tune.h</code></p><hr><p>Enable creating and sending a tune to be played on the system.</p><h2 id="data-structures" tabindex="-1">Data Structures <a class="header-anchor" href="#data-structures" aria-label="Permalink to &quot;Data Structures&quot;">​</a></h2><p>struct <a href="./structmavsdk_1_1_tune_1_1_tune_description.html">TuneDescription</a></p><h2 id="public-types" tabindex="-1">Public Types <a class="header-anchor" href="#public-types" aria-label="Permalink to &quot;Public Types&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>enum <a href="#classmavsdk_1_1_tune_1a97d85b5d578c74edc82a4337fc7bed57">SongElement</a></td><td>An element of the tune.</td></tr><tr><td>enum <a href="#classmavsdk_1_1_tune_1aed2b008974298098cedd69b7e95e909d">Result</a></td><td>Possible results returned for tune requests.</td></tr><tr><td>std::function&lt; void(<a href="./classmavsdk_1_1_tune.html#classmavsdk_1_1_tune_1aed2b008974298098cedd69b7e95e909d">Result</a>)&gt; <a href="#classmavsdk_1_1_tune_1aa283f6824bee43d341fec56d7ff70985">ResultCallback</a></td><td>Callback type for asynchronous <a href="./classmavsdk_1_1_tune.html">Tune</a> calls.</td></tr></tbody></table><h2 id="public-member-functions" tabindex="-1">Public Member Functions <a class="header-anchor" href="#public-member-functions" aria-label="Permalink to &quot;Public Member Functions&quot;">​</a></h2><table tabindex="0"><thead><tr><th style="text-align:right;">Type</th><th>Name</th><th>Description</th></tr></thead><tbody><tr><td style="text-align:right;"> </td><td><a href="#classmavsdk_1_1_tune_1a1f60ea360006940e2bbae055733cc40a">Tune</a> (<a href="./classmavsdk_1_1_system.html">System</a> &amp; system)</td><td>Constructor. Creates the plugin for a specific <a href="./classmavsdk_1_1_system.html">System</a>.</td></tr><tr><td style="text-align:right;"> </td><td><a href="#classmavsdk_1_1_tune_1ae53cb416ec500a56d796e85376420c0a">Tune</a> (std::shared_ptr&lt; <a href="./classmavsdk_1_1_system.html">System</a> &gt; system)</td><td>Constructor. Creates the plugin for a specific <a href="./classmavsdk_1_1_system.html">System</a>.</td></tr><tr><td style="text-align:right;"> </td><td><a href="#classmavsdk_1_1_tune_1a5f157ec4a056b0dad4fb7c15542a555f">~Tune</a> () override</td><td>Destructor (internal use only).</td></tr><tr><td style="text-align:right;"> </td><td><a href="#classmavsdk_1_1_tune_1ae3fb9d4ec2116f1c9543c0e09371b2e0">Tune</a> (const <a href="./classmavsdk_1_1_tune.html">Tune</a> &amp; other)</td><td>Copy constructor.</td></tr><tr><td style="text-align:right;">void</td><td><a href="#classmavsdk_1_1_tune_1a6a88b2cfe944a4c1e4ab6945b06620d5">play_tune_async</a> (<a href="./structmavsdk_1_1_tune_1_1_tune_description.html">TuneDescription</a> tune_description, const <a href="./classmavsdk_1_1_tune.html#classmavsdk_1_1_tune_1aa283f6824bee43d341fec56d7ff70985">ResultCallback</a> callback)</td><td>Send a tune to be played by the system.</td></tr><tr><td style="text-align:right;"><a href="./classmavsdk_1_1_tune.html#classmavsdk_1_1_tune_1aed2b008974298098cedd69b7e95e909d">Result</a></td><td><a href="#classmavsdk_1_1_tune_1a94df5e7c5d8f5ca49fd9844557060695">play_tune</a> (<a href="./structmavsdk_1_1_tune_1_1_tune_description.html">TuneDescription</a> tune_description)const</td><td>Send a tune to be played by the system.</td></tr><tr><td style="text-align:right;">const <a href="./classmavsdk_1_1_tune.html">Tune</a> &amp;</td><td><a href="#classmavsdk_1_1_tune_1a0f3ee8fe02178e0944f183a8e7f24cdd">operator=</a> (const <a href="./classmavsdk_1_1_tune.html">Tune</a> &amp;)=delete</td><td>Equality operator (object is not copyable).</td></tr></tbody></table><h2 id="constructor-destructor-documentation" tabindex="-1">Constructor &amp; Destructor Documentation <a class="header-anchor" href="#constructor-destructor-documentation" aria-label="Permalink to &quot;Constructor &amp; Destructor Documentation&quot;">​</a></h2><h3 id="classmavsdk_1_1_tune_1a1f60ea360006940e2bbae055733cc40a" tabindex="-1">Tune() <a class="header-anchor" href="#classmavsdk_1_1_tune_1a1f60ea360006940e2bbae055733cc40a" aria-label="Permalink to &quot;Tune() {#classmavsdk_1_1_tune_1a1f60ea360006940e2bbae055733cc40a}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Tune</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Tune</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(System </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">system)</span></span></code></pre></div><p>Constructor. Creates the plugin for a specific <a href="./classmavsdk_1_1_system.html">System</a>.</p><p>The plugin is typically created as shown below:</p><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">auto</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tune </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Tune</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(system);</span></span></code></pre></div><p><strong>Parameters</strong></p><ul><li><a href="./classmavsdk_1_1_system.html">System</a>&amp; <strong>system</strong> - The specific system associated with this plugin.</li></ul><h3 id="classmavsdk_1_1_tune_1ae53cb416ec500a56d796e85376420c0a" tabindex="-1">Tune() <a class="header-anchor" href="#classmavsdk_1_1_tune_1ae53cb416ec500a56d796e85376420c0a" aria-label="Permalink to &quot;Tune() {#classmavsdk_1_1_tune_1ae53cb416ec500a56d796e85376420c0a}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Tune</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Tune</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::shared_ptr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> System </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> system)</span></span></code></pre></div><p>Constructor. Creates the plugin for a specific <a href="./classmavsdk_1_1_system.html">System</a>.</p><p>The plugin is typically created as shown below:</p><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">auto</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tune </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Tune</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(system);</span></span></code></pre></div><p><strong>Parameters</strong></p><ul><li>std::shared_ptr&lt; <a href="./classmavsdk_1_1_system.html">System</a> &gt; <strong>system</strong> - The specific system associated with this plugin.</li></ul><h3 id="classmavsdk_1_1_tune_1a5f157ec4a056b0dad4fb7c15542a555f" tabindex="-1">~Tune() <a class="header-anchor" href="#classmavsdk_1_1_tune_1a5f157ec4a056b0dad4fb7c15542a555f" aria-label="Permalink to &quot;~Tune() {#classmavsdk_1_1_tune_1a5f157ec4a056b0dad4fb7c15542a555f}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Tune</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">~</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Tune</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">override</span></span></code></pre></div><p>Destructor (internal use only).</p><h3 id="classmavsdk_1_1_tune_1ae3fb9d4ec2116f1c9543c0e09371b2e0" tabindex="-1">Tune() <a class="header-anchor" href="#classmavsdk_1_1_tune_1ae3fb9d4ec2116f1c9543c0e09371b2e0" aria-label="Permalink to &quot;Tune() {#classmavsdk_1_1_tune_1ae3fb9d4ec2116f1c9543c0e09371b2e0}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Tune</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Tune</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Tune </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">other)</span></span></code></pre></div><p>Copy constructor.</p><p><strong>Parameters</strong></p><ul><li>const <a href="./classmavsdk_1_1_tune.html">Tune</a>&amp; <strong>other</strong> -</li></ul><h2 id="member-typdef-documentation" tabindex="-1">Member Typdef Documentation <a class="header-anchor" href="#member-typdef-documentation" aria-label="Permalink to &quot;Member Typdef Documentation&quot;">​</a></h2><h3 id="classmavsdk_1_1_tune_1aa283f6824bee43d341fec56d7ff70985" tabindex="-1">typedef ResultCallback <a class="header-anchor" href="#classmavsdk_1_1_tune_1aa283f6824bee43d341fec56d7ff70985" aria-label="Permalink to &quot;typedef ResultCallback {#classmavsdk_1_1_tune_1aa283f6824bee43d341fec56d7ff70985}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Tune</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::ResultCallback </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::function</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Result)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><p>Callback type for asynchronous <a href="./classmavsdk_1_1_tune.html">Tune</a> calls.</p><h2 id="member-enumeration-documentation" tabindex="-1">Member Enumeration Documentation <a class="header-anchor" href="#member-enumeration-documentation" aria-label="Permalink to &quot;Member Enumeration Documentation&quot;">​</a></h2><h3 id="classmavsdk_1_1_tune_1a97d85b5d578c74edc82a4337fc7bed57" tabindex="-1">enum SongElement <a class="header-anchor" href="#classmavsdk_1_1_tune_1a97d85b5d578c74edc82a4337fc7bed57" aria-label="Permalink to &quot;enum SongElement {#classmavsdk_1_1_tune_1a97d85b5d578c74edc82a4337fc7bed57}&quot;">​</a></h3><p>An element of the tune.</p><table tabindex="0"><thead><tr><th>Value</th><th>Description</th></tr></thead><tbody><tr><td><span id="classmavsdk_1_1_tune_1a97d85b5d578c74edc82a4337fc7bed57ac830472147f0e7d7a397f4ebe1efa6f3"></span> <code>StyleLegato</code></td><td>After this element, start playing legato.</td></tr><tr><td><span id="classmavsdk_1_1_tune_1a97d85b5d578c74edc82a4337fc7bed57a8cb71997964d545dec42802f02c1e5af"></span> <code>StyleNormal</code></td><td>After this element, start playing normal.</td></tr><tr><td><span id="classmavsdk_1_1_tune_1a97d85b5d578c74edc82a4337fc7bed57acca75620eab0dffb73ec1a4b2b7a334c"></span> <code>StyleStaccato</code></td><td>After this element, start playing staccato.</td></tr><tr><td><span id="classmavsdk_1_1_tune_1a97d85b5d578c74edc82a4337fc7bed57a63787476eb9cebc1d976e06c4a89085d"></span> <code>Duration1</code></td><td>After this element, set the note duration to 1.</td></tr><tr><td><span id="classmavsdk_1_1_tune_1a97d85b5d578c74edc82a4337fc7bed57ab60dc533a85bdbf419ac39982fae8ce8"></span> <code>Duration2</code></td><td>After this element, set the note duration to 2.</td></tr><tr><td><span id="classmavsdk_1_1_tune_1a97d85b5d578c74edc82a4337fc7bed57a48914c473999e8240f09b96c63c37a84"></span> <code>Duration4</code></td><td>After this element, set the note duration to 4.</td></tr><tr><td><span id="classmavsdk_1_1_tune_1a97d85b5d578c74edc82a4337fc7bed57a5c027e5349ad17104491057d3b153192"></span> <code>Duration8</code></td><td>After this element, set the note duration to 8.</td></tr><tr><td><span id="classmavsdk_1_1_tune_1a97d85b5d578c74edc82a4337fc7bed57add80adb2a6a9aae642795959bb077b19"></span> <code>Duration16</code></td><td>After this element, set the note duration to 16.</td></tr><tr><td><span id="classmavsdk_1_1_tune_1a97d85b5d578c74edc82a4337fc7bed57a5238379d32263441c68c00fefb9fee74"></span> <code>Duration32</code></td><td>After this element, set the note duration to 32.</td></tr><tr><td><span id="classmavsdk_1_1_tune_1a97d85b5d578c74edc82a4337fc7bed57adae7803873ef1a4be05a28fd47f928cc"></span> <code>NoteA</code></td><td>Play note A.</td></tr><tr><td><span id="classmavsdk_1_1_tune_1a97d85b5d578c74edc82a4337fc7bed57adf0f2ea8b78208955005301fabc40578"></span> <code>NoteB</code></td><td>Play note B.</td></tr><tr><td><span id="classmavsdk_1_1_tune_1a97d85b5d578c74edc82a4337fc7bed57a96efe8adf521933e0ee897b2526f1040"></span> <code>NoteC</code></td><td>Play note C.</td></tr><tr><td><span id="classmavsdk_1_1_tune_1a97d85b5d578c74edc82a4337fc7bed57a8dc7aeb7d481ca13b24b89ea5781d5f0"></span> <code>NoteD</code></td><td>Play note D.</td></tr><tr><td><span id="classmavsdk_1_1_tune_1a97d85b5d578c74edc82a4337fc7bed57a8499410b04b4830cc664546160bbee41"></span> <code>NoteE</code></td><td>Play note E.</td></tr><tr><td><span id="classmavsdk_1_1_tune_1a97d85b5d578c74edc82a4337fc7bed57adff4ed70eb41ce84bd176316cb3c82f8"></span> <code>NoteF</code></td><td>Play note F.</td></tr><tr><td><span id="classmavsdk_1_1_tune_1a97d85b5d578c74edc82a4337fc7bed57a57afabb08eebc4b8052efdb10878fa88"></span> <code>NoteG</code></td><td>Play note G.</td></tr><tr><td><span id="classmavsdk_1_1_tune_1a97d85b5d578c74edc82a4337fc7bed57a24dfb97f7be37bc76be4233a0d18440b"></span> <code>NotePause</code></td><td>Play a rest.</td></tr><tr><td><span id="classmavsdk_1_1_tune_1a97d85b5d578c74edc82a4337fc7bed57a60c17eb98355db0fe5ce016db6c6f444"></span> <code>Sharp</code></td><td>After this element, sharp the note (half a step up).</td></tr><tr><td><span id="classmavsdk_1_1_tune_1a97d85b5d578c74edc82a4337fc7bed57a745e3db6a7ffd50e1a72b39482f0882d"></span> <code>Flat</code></td><td>After this element, flat the note (half a step down).</td></tr><tr><td><span id="classmavsdk_1_1_tune_1a97d85b5d578c74edc82a4337fc7bed57a1713d26780742b9524fdc6e40c6ef6cd"></span> <code>OctaveUp</code></td><td>After this element, shift the note 1 octave up.</td></tr><tr><td><span id="classmavsdk_1_1_tune_1a97d85b5d578c74edc82a4337fc7bed57ab41646df7c887cc0e3647ba5f8b26afe"></span> <code>OctaveDown</code></td><td>After this element, shift the note 1 octave down.</td></tr></tbody></table><h3 id="classmavsdk_1_1_tune_1aed2b008974298098cedd69b7e95e909d" tabindex="-1">enum Result <a class="header-anchor" href="#classmavsdk_1_1_tune_1aed2b008974298098cedd69b7e95e909d" aria-label="Permalink to &quot;enum Result {#classmavsdk_1_1_tune_1aed2b008974298098cedd69b7e95e909d}&quot;">​</a></h3><p>Possible results returned for tune requests.</p><table tabindex="0"><thead><tr><th>Value</th><th>Description</th></tr></thead><tbody><tr><td><span id="classmavsdk_1_1_tune_1aed2b008974298098cedd69b7e95e909da88183b946cc5f0e8c96b2e66e1c74a7e"></span> <code>Unknown</code></td><td>Unknown result.</td></tr><tr><td><span id="classmavsdk_1_1_tune_1aed2b008974298098cedd69b7e95e909da505a83f220c02df2f85c3810cd9ceb38"></span> <code>Success</code></td><td>Request succeeded.</td></tr><tr><td><span id="classmavsdk_1_1_tune_1aed2b008974298098cedd69b7e95e909dab94ce655e90ee954ba1c4c5d0e13659e"></span> <code>InvalidTempo</code></td><td>Invalid tempo (range: 32 - 255).</td></tr><tr><td><span id="classmavsdk_1_1_tune_1aed2b008974298098cedd69b7e95e909da088c77b60655734bff629e03e1968495"></span> <code>TuneTooLong</code></td><td>Invalid tune: encoded string must be at most 247 chars.</td></tr><tr><td><span id="classmavsdk_1_1_tune_1aed2b008974298098cedd69b7e95e909da902b0d55fddef6f8d651fe1035b7d4bd"></span> <code>Error</code></td><td>Failed to send the request.</td></tr><tr><td><span id="classmavsdk_1_1_tune_1aed2b008974298098cedd69b7e95e909da1119faf72ba0dfb23aeea644fed960ad"></span> <code>NoSystem</code></td><td>No system connected.</td></tr></tbody></table><h2 id="member-function-documentation" tabindex="-1">Member Function Documentation <a class="header-anchor" href="#member-function-documentation" aria-label="Permalink to &quot;Member Function Documentation&quot;">​</a></h2><h3 id="classmavsdk_1_1_tune_1a6a88b2cfe944a4c1e4ab6945b06620d5" tabindex="-1">play_tune_async() <a class="header-anchor" href="#classmavsdk_1_1_tune_1a6a88b2cfe944a4c1e4ab6945b06620d5" aria-label="Permalink to &quot;play_tune_async() {#classmavsdk_1_1_tune_1a6a88b2cfe944a4c1e4ab6945b06620d5}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Tune</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">play_tune_async</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">TuneDescription</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> tune_description</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ResultCallback</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> callback</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Send a tune to be played by the system.</p><p>This function is non-blocking. See &#39;play_tune&#39; for the blocking counterpart.</p><p><strong>Parameters</strong></p><ul><li><a href="./structmavsdk_1_1_tune_1_1_tune_description.html">TuneDescription</a> <strong>tune_description</strong> -</li><li>const <a href="./classmavsdk_1_1_tune.html#classmavsdk_1_1_tune_1aa283f6824bee43d341fec56d7ff70985">ResultCallback</a> <strong>callback</strong> -</li></ul><h3 id="classmavsdk_1_1_tune_1a94df5e7c5d8f5ca49fd9844557060695" tabindex="-1">play_tune() <a class="header-anchor" href="#classmavsdk_1_1_tune_1a94df5e7c5d8f5ca49fd9844557060695" aria-label="Permalink to &quot;play_tune() {#classmavsdk_1_1_tune_1a94df5e7c5d8f5ca49fd9844557060695}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Result</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Tune</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">play_tune</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">TuneDescription</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> tune_description</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span></span></code></pre></div><p>Send a tune to be played by the system.</p><p>This function is blocking. See &#39;play_tune_async&#39; for the non-blocking counterpart.</p><p><strong>Parameters</strong></p><ul><li><a href="./structmavsdk_1_1_tune_1_1_tune_description.html">TuneDescription</a> <strong>tune_description</strong> -</li></ul><p><strong>Returns</strong></p><p> <a href="./classmavsdk_1_1_tune.html#classmavsdk_1_1_tune_1aed2b008974298098cedd69b7e95e909d">Result</a> - Result of request.</p><h3 id="classmavsdk_1_1_tune_1a0f3ee8fe02178e0944f183a8e7f24cdd" tabindex="-1">operator=() <a class="header-anchor" href="#classmavsdk_1_1_tune_1a0f3ee8fe02178e0944f183a8e7f24cdd" aria-label="Permalink to &quot;operator=() {#classmavsdk_1_1_tune_1a0f3ee8fe02178e0944f183a8e7f24cdd}&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Tune</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &amp;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mavsdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Tune</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">operator</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Tune</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=delete</span></span></code></pre></div><p>Equality operator (object is not copyable).</p><p><strong>Parameters</strong></p><ul><li>const <a href="./classmavsdk_1_1_tune.html">Tune</a>&amp; -</li></ul><p><strong>Returns</strong></p><p> const <a href="./classmavsdk_1_1_tune.html">Tune</a> &amp; -</p>',66)]))}const _=e(i,[["render",n]]);export{k as __pageData,_ as default};
